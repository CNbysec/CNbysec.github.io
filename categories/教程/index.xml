<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>教程 - 分类 - bysec</title>
        <link>https://www.bysec.cn/categories/%E6%95%99%E7%A8%8B/</link>
        <description>教程 - 分类 - bysec</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>CNbysec@foxmail.com (bysec)</managingEditor>
            <webMaster>CNbysec@foxmail.com (bysec)</webMaster><lastBuildDate>Thu, 01 Apr 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.bysec.cn/categories/%E6%95%99%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>论如何使用Python解密*.ncm文件</title>
    <link>https://www.bysec.cn/20210401/</link>
    <pubDate>Thu, 01 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.bysec.cn/20210401/</guid>
    <description><![CDATA[<blockquote>
<p>网易云音乐把.mp3音乐文件加密为.ncm文件，导致不能将下载好的音乐复制到其它设备，或使用非网易云音乐播放器播放，该程序可将.ncm文件逆向解密为.mp3文件，并保留原始音质。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># 依赖pycrypto库</span>

<span class="kn">import</span> <span class="nn">binascii</span>
<span class="kn">import</span> <span class="nn">struct</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>

<span class="k">def</span> <span class="nf">dump</span><span class="p">(</span><span class="n">file_path</span><span class="p">):</span>
    <span class="n">core_key</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="s2">&#34;687A4852416D736F356B496E62617857&#34;</span><span class="p">)</span>
    <span class="n">meta_key</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="s2">&#34;2331346C6A6B5F215C5D2630553C2728&#34;</span><span class="p">)</span>
    <span class="n">unpad</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">s</span> <span class="p">:</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="o">-</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="o">==</span> <span class="nb">int</span> <span class="k">else</span> <span class="nb">ord</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]))]</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span><span class="s1">&#39;rb&#39;</span><span class="p">)</span>
    <span class="n">header</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
    <span class="k">assert</span> <span class="n">binascii</span><span class="o">.</span><span class="n">b2a_hex</span><span class="p">(</span><span class="n">header</span><span class="p">)</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">&#39;4354454e4644414d&#39;</span>
    <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">key_length</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">key_length</span><span class="p">)</span>
    <span class="n">key_data_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">key_data_array</span><span class="p">)):</span> <span class="n">key_data_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="mh">0x64</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">key_data_array</span><span class="p">)</span>
    <span class="n">cryptor</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">core_key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">cryptor</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">key_data</span><span class="p">))[</span><span class="mi">17</span><span class="p">:]</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="n">key_box</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">))</span>
    <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">last_byte</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">key_offset</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">):</span>
        <span class="n">swap</span> <span class="o">=</span> <span class="n">key_box</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">swap</span> <span class="o">+</span> <span class="n">last_byte</span> <span class="o">+</span> <span class="n">key_data</span><span class="p">[</span><span class="n">key_offset</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span>
        <span class="n">key_offset</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">key_offset</span> <span class="o">&gt;=</span> <span class="n">key_length</span><span class="p">:</span> <span class="n">key_offset</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">key_box</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">key_box</span><span class="p">[</span><span class="n">c</span><span class="p">]</span>
        <span class="n">key_box</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">=</span> <span class="n">swap</span>
        <span class="n">last_byte</span> <span class="o">=</span> <span class="n">c</span>
    <span class="n">meta_length</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">meta_length</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">meta_length</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">meta_length</span><span class="p">)</span>
    <span class="n">meta_data_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">meta_data</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">meta_data_array</span><span class="p">)):</span> <span class="n">meta_data_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="mh">0x63</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">meta_data_array</span><span class="p">)</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">meta_data</span><span class="p">[</span><span class="mi">22</span><span class="p">:])</span>
    <span class="n">cryptor</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">meta_key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">cryptor</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">meta_data</span><span class="p">))</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)[</span><span class="mi">6</span><span class="p">:]</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">meta_data</span><span class="p">)</span>
    <span class="n">crc32</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">crc32</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">crc32</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">image_size</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">image_size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">image_size</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">image_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">image_size</span><span class="p">)</span>
    <span class="n">file_name</span> <span class="o">=</span> <span class="n">meta_data</span><span class="p">[</span><span class="s1">&#39;musicName&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="n">meta_data</span><span class="p">[</span><span class="s1">&#39;format&#39;</span><span class="p">]</span>
    <span class="n">m</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">file_path</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">file_name</span><span class="p">),</span><span class="s1">&#39;wb&#39;</span><span class="p">)</span>
    <span class="n">chunk</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">()</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="n">chunk</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mh">0x8000</span><span class="p">))</span>
        <span class="n">chunk_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">chunk</span><span class="p">:</span>
            <span class="k">break</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">chunk_length</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">;</span>
            <span class="n">chunk</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">^=</span> <span class="n">key_box</span><span class="p">[(</span><span class="n">key_box</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">key_box</span><span class="p">[(</span><span class="n">key_box</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">j</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">]</span>
        <span class="n">m</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
    <span class="n">m</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="kn">import</span> <span class="nn">sys</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">file_path</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">dump</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;Usage: python ncmdump.py </span><span class="se">\&#34;</span><span class="s2">File Name</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Bilibili AV号BV号互相转换脚本</title>
    <link>https://www.bysec.cn/20210301/</link>
    <pubDate>Mon, 01 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.bysec.cn/20210301/</guid>
    <description><![CDATA[<h1 id="av号bv号互相转换脚本">AV号BV号互相转换脚本</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-PHP" data-lang="PHP"><span class="k">class</span> <span class="nc">Bilibili</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$tr</span> <span class="o">=</span> <span class="s2">&#34;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#34;</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$xor</span> <span class="o">=</span> <span class="mi">177451812</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$add</span> <span class="o">=</span> <span class="mi">8728348608</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$s</span> <span class="o">=</span> <span class="p">[</span><span class="mi">11</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>

    <span class="c1">// BV 转 AV
</span><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">dec</span><span class="p">(</span><span class="nv">$bv</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$r</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="nv">$tr</span> <span class="o">=</span> <span class="nx">array_flip</span><span class="p">(</span><span class="nx">str_split</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">tr</span><span class="p">));</span>
        <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$r</span> <span class="o">+=</span> <span class="nv">$tr</span><span class="p">[</span><span class="nv">$bv</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s</span><span class="p">[</span><span class="nv">$i</span><span class="p">]]]</span> <span class="o">*</span> <span class="p">(</span><span class="nx">pow</span><span class="p">(</span><span class="mi">58</span><span class="p">,</span> <span class="nv">$i</span><span class="p">));</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="p">(</span><span class="nv">$r</span> <span class="o">-</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">)</span> <span class="o">^</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">xor</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// AV 转 BV
</span><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">enc</span><span class="p">(</span><span class="nv">$av</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$tr</span> <span class="o">=</span> <span class="nx">str_split</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">tr</span><span class="p">);</span>
        <span class="nv">$bv</span> <span class="o">=</span> <span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">;</span>
        <span class="nv">$av</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$av</span> <span class="o">^</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">xor</span><span class="p">)</span> <span class="o">+</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$bv</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s</span><span class="p">[</span><span class="nv">$i</span><span class="p">]]</span> <span class="o">=</span> <span class="nv">$tr</span><span class="p">[</span><span class="nx">floor</span><span class="p">(</span><span class="nv">$av</span><span class="o">/</span><span class="nx">pow</span><span class="p">(</span><span class="mi">58</span><span class="p">,</span><span class="nv">$i</span><span class="p">)</span><span class="o">%</span><span class="mi">58</span><span class="p">)];</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="nv">$bv</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 调用
</span><span class="c1"></span><span class="nv">$str</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Bilibili</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$str</span><span class="o">-&gt;</span><span class="na">dec</span><span class="p">(</span><span class="s1">&#39;BV17x411w7KC&#39;</span><span class="p">);</span> <span class="c1">// 输出: 170001
</span><span class="c1"></span><span class="k">echo</span> <span class="nv">$str</span><span class="o">-&gt;</span><span class="na">enc</span><span class="p">(</span><span class="mi">170001</span><span class="p">);</span>  <span class="c1">// 输出: BV17x411w7KC
</span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">table</span><span class="o">=</span><span class="s1">&#39;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#39;</span>
<span class="n">tr</span><span class="o">=</span><span class="p">{}</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">58</span><span class="p">):</span>
	<span class="n">tr</span><span class="p">[</span><span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">i</span>
<span class="n">s</span><span class="o">=</span><span class="p">[</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
<span class="n">xor</span><span class="o">=</span><span class="mi">177451812</span>
<span class="n">add</span><span class="o">=</span><span class="mi">8728348608</span>

<span class="k">def</span> <span class="nf">dec</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">r</span><span class="o">=</span><span class="mi">0</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="o">+=</span><span class="n">tr</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]]</span><span class="o">*</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span>
	<span class="k">return</span> <span class="p">(</span><span class="n">r</span><span class="o">-</span><span class="n">add</span><span class="p">)</span><span class="o">^</span><span class="n">xor</span>

<span class="k">def</span> <span class="nf">enc</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">x</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="o">^</span><span class="n">xor</span><span class="p">)</span><span class="o">+</span><span class="n">add</span>
	<span class="n">r</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">)</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">table</span><span class="p">[</span><span class="n">x</span><span class="o">//</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span><span class="o">%</span><span class="mi">58</span><span class="p">]</span>
	<span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV17x411w7KC&#39;</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV1Q541167Qg&#39;</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV1mK4y1C7Bz&#39;</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">170001</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">455017605</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">882584971</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>NPS内网穿透配置</title>
    <link>https://www.bysec.cn/20201101/</link>
    <pubDate>Sun, 01 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.bysec.cn/20201101/</guid>
    <description><![CDATA[<h1 id="nps内网穿透配置nps">NPS内网穿透配置NPS</h1>
<h2 id="github项目地址">github项目地址</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">https://github.com/cnlh/nps
</code></pre></td></tr></table>
</div>
</div><h2 id="原理">原理</h2>
<p></p>
<h2 id="服务器端配置">服务器端配置</h2>
<ul>
<li>准备工作
<ul>
<li>一台拥有公网IP的VPS</li>
<li>安装nps软件包</li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">wget https://github.com/cnlh/nps/releases/download/v0.23.1/linux_amd64_server.tar.gz
tar -zxvf linux_amd64_server.tar.gz
<span class="nb">cd</span> nps/
./nps start
</code></pre></td></tr></table>
</div>
</div><ul>
<li>配置server端
在安装完成，启动nps后，便可访问server_IP:8080来访问nps配置dashboard了
要求登陆，默认的用户名：admin，密码：123
</li>
</ul>
<p>网页dashboard的用户名和密码可在nps/conf/nps.conf配置文件中的web模块中修改
</p>
<p>登陆进入dashboard后,看到界面，默认客户端为0（这里我已经创建了一个）
默认的客户端链接端口为8024（该端口为客户端用于链接服务器的端口，来保持链接，原理与反向代理相似）
</p>
<ul>
<li>新建客户端
这里我们创建一个新的客户端，
这里的客户端只是在server配置的客户端，之后使用客户端软件链接，所以要与客户端配置一致
</li>
</ul>
<p>创建好的客户端是这样的，status为offline，因为客户端还没链接
这里server会自动随机生成一个vkey=7oswclqe5knqu15x（之后配置客户端会使用）
</p>
<hr>
<h2 id="客户端配置">客户端配置</h2>
<p><strong>Windows</strong></p>
<ul>
<li>下载客户端
<a href="https://github.com/cnlh/nps/releases/download/v0.23.1/win_amd64_client.tar.gz" target="_blank" rel="noopener noreffer">https://github.com/cnlh/nps/releases/download/v0.23.1/win_amd64_client.tar.gz</a>
这里使用windows作为客户端
下载解压后配置vps.conf，
将其他配置删除，只保留如图所示的配置</li>
<li>修改
server_addr为VPS的公网ip和dashboard的默认客户端链接端口
vkey为server网页上新建的客户端生成的vkey</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">server_addr=server_IP:8024
conn_type=tcp
vkey=7oswclqe5knqu15x
auto_reconnection=true
max_conn=1000
flow_limit=1000
rate_limit=1000
basic_username=11
basic_password=3
web_username=user
web_password=123
crypt=true
compress=true
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>修改完配置文件后运行nsp.exe，显示成功链接
</p>
<h2 id="centos">CentOS</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">wget https://github.com/cnlh/nps/releases/download/v0.23.1/linux_amd64_client.tar.gz
tar -zxvf linux_amd64_client.tar.gz
<span class="nb">cd</span> npc/
./npc -server<span class="o">=</span>66.42.81.9:8024 -vkey<span class="o">=</span>7oswclqe5knqu15x -type<span class="o">=</span>tcp
</code></pre></td></tr></table>
</div>
</div><p>链接成功
<strong>两者链接成功后server端中客户端status转为online</strong>
</p>
<h2 id="使用测试">使用测试</h2>
<p>创建tcp tunnel
这里使用内网router配置网页做测试
</p>
<p>点击tunnel创建tcp隧道
</p>
<p>点击新增
这里我的router内网ip为192.168.1.1
</p>
<p>创建完成
</p>
<p>访问测试
访问server_ip:10001
成功访问到内网router配置网页
</p>
<blockquote>
<p>中文文档： <a href="https://github.com/ehang-io/nps/blob/master/README_zh.md">https://github.com/ehang-io/nps/blob/master/README_zh.md</a></p>
</blockquote>]]></description>
</item><item>
    <title>使用好压打包成单个exe文件</title>
    <link>https://www.bysec.cn/20201001/</link>
    <pubDate>Thu, 01 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.bysec.cn/20201001/</guid>
    <description><![CDATA[<blockquote>
<p>在线抠图：<a href="https://www.remove.bg" target="_blank" rel="noopener noreffer">https://www.remove.bg</a></p>
</blockquote>
<blockquote>
<p>png转ico：<a href="https://www.easyicon.net/covert" target="_blank" rel="noopener noreffer">https://www.easyicon.net/covert</a></p>
</blockquote>
<h2 id="准备">准备</h2>
<ul>
<li>准备个压缩软件，例如好压，WinRAR等等，根据文字举一反三即可</li>
<li>这是将要打包的主目录文件</li>
</ul>
<p></p>
<p></p>
<p>exe在哪里就复制哪里的相对路径，以主文件目录为准，一定要相对路径，否则移动到别的地方会无法使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">\Program\Thunder.exe
</code></pre></td></tr></table>
</div>
</div><p></p>
<h2 id="打包exe">打包exe</h2>
<ol>
<li>选择-压缩文件格式</li>
<li>勾选-创建自解压格式</li>
<li>点击-自解压选项
</li>
<li>选项卡选择-解压</li>
<li>解压后运行-输入相对路径</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">\Program\Thunder.exe
</code></pre></td></tr></table>
</div>
</div><p></p>
<blockquote>
<p>强调下，一定要相对路径否则移动到别处会无法使用</p>
</blockquote>
<ol start="6">
<li>
<p>选项卡选择-模式</p>
</li>
<li>
<p>勾选-解包到临时文件夹</p>
</li>
<li>
<p>选择-全部隐藏
</p>
</li>
<li>
<p>选项卡选择-更新</p>
</li>
<li>
<p>解压并替换文件</p>
</li>
<li>
<p>覆盖所有文件
</p>
</li>
<li>
<p>选项卡选择-图标</p>
</li>
<li>
<p>浏览选择绝对路径的ico图标文件
</p>
</li>
</ol>
<h2 id="完成">完成</h2>
<p></p>
<p>打包好后删除了主文件只保留exe文件后移动到别处也可以使用
</p>]]></description>
</item><item>
    <title>搭建OneDrive云盘</title>
    <link>https://www.bysec.cn/20200901/</link>
    <pubDate>Tue, 01 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.bysec.cn/20200901/</guid>
    <description><![CDATA[<h2 id="国际版">国际版</h2>
<blockquote>
<p>国际版就是微软官网那些都是国际版的，速度比世纪互联版差，有些地方需要梯子，敏感东西不会被和谐。</p>
</blockquote>
<h3 id="microsoft-onedrivehttpsonedrivelivecom"><a href="https://onedrive.live.com/" target="_blank" rel="noopener noreffer">Microsoft OneDrive</a></h3>
<h3 id="microsoft-azurehttpsportalazurecom"><a href="https://portal.azure.com/" target="_blank" rel="noopener noreffer">Microsoft Azure</a></h3>
<h1 id="世纪互联版">世纪互联版</h1>
<blockquote>
<p>世纪互联版，只能企业注册，无法个人注册，速度很快，都不需要梯子，有些敏感东西会被和谐。</p>
</blockquote>
<h3 id="microsoft-onedrivehttpsloginpartnermicrosoftonlinecn"><a href="https://login.partner.microsoftonline.cn/" target="_blank" rel="noopener noreffer">Microsoft OneDrive</a></h3>
<h3 id="microsoft-azurehttpsportalazurecn"><a href="https://portal.azure.cn/" target="_blank" rel="noopener noreffer">Microsoft Azure</a></h3>
<hr>
<h2 id="获取id和key">获取ID和Key</h2>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>]]></description>
</item></channel>
</rss>
