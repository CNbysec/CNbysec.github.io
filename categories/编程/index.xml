<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>编程 - 分类 - bysec</title>
        <link>https://www.bysec.cn/categories/%E7%BC%96%E7%A8%8B/</link>
        <description>编程 - 分类 - bysec</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>CNbysec@foxmail.com (bysec)</managingEditor>
            <webMaster>CNbysec@foxmail.com (bysec)</webMaster><lastBuildDate>Thu, 01 Apr 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.bysec.cn/categories/%E7%BC%96%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>论如何使用Python解密ncm文件</title>
    <link>https://www.bysec.cn/20210401/</link>
    <pubDate>Thu, 01 Apr 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210401/</guid>
    <description><![CDATA[<blockquote>
<p>网易云音乐把.mp3音乐文件加密为.ncm文件，导致不能将下载好的音乐复制到其它设备，或使用非网易云音乐播放器播放，该程序可将.ncm文件逆向解密为.mp3文件，并保留原始音质。</p>
</blockquote>
<h2 id="python实例">python实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># 依赖pycrypto库</span>

<span class="kn">import</span> <span class="nn">binascii</span>
<span class="kn">import</span> <span class="nn">struct</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>

<span class="k">def</span> <span class="nf">dump</span><span class="p">(</span><span class="n">file_path</span><span class="p">):</span>
    <span class="n">core_key</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="s2">&#34;687A4852416D736F356B496E62617857&#34;</span><span class="p">)</span>
    <span class="n">meta_key</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="s2">&#34;2331346C6A6B5F215C5D2630553C2728&#34;</span><span class="p">)</span>
    <span class="n">unpad</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">s</span> <span class="p">:</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="o">-</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="o">==</span> <span class="nb">int</span> <span class="k">else</span> <span class="nb">ord</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]))]</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span><span class="s1">&#39;rb&#39;</span><span class="p">)</span>
    <span class="n">header</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
    <span class="k">assert</span> <span class="n">binascii</span><span class="o">.</span><span class="n">b2a_hex</span><span class="p">(</span><span class="n">header</span><span class="p">)</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">&#39;4354454e4644414d&#39;</span>
    <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">key_length</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">key_length</span><span class="p">)</span>
    <span class="n">key_data_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">key_data_array</span><span class="p">)):</span> <span class="n">key_data_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="mh">0x64</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">key_data_array</span><span class="p">)</span>
    <span class="n">cryptor</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">core_key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">cryptor</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">key_data</span><span class="p">))[</span><span class="mi">17</span><span class="p">:]</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="n">key_box</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">))</span>
    <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">last_byte</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">key_offset</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">):</span>
        <span class="n">swap</span> <span class="o">=</span> <span class="n">key_box</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">swap</span> <span class="o">+</span> <span class="n">last_byte</span> <span class="o">+</span> <span class="n">key_data</span><span class="p">[</span><span class="n">key_offset</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span>
        <span class="n">key_offset</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">key_offset</span> <span class="o">&gt;=</span> <span class="n">key_length</span><span class="p">:</span> <span class="n">key_offset</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">key_box</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">key_box</span><span class="p">[</span><span class="n">c</span><span class="p">]</span>
        <span class="n">key_box</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">=</span> <span class="n">swap</span>
        <span class="n">last_byte</span> <span class="o">=</span> <span class="n">c</span>
    <span class="n">meta_length</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">meta_length</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">meta_length</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">meta_length</span><span class="p">)</span>
    <span class="n">meta_data_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">meta_data</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">meta_data_array</span><span class="p">)):</span> <span class="n">meta_data_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="mh">0x63</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">meta_data_array</span><span class="p">)</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">meta_data</span><span class="p">[</span><span class="mi">22</span><span class="p">:])</span>
    <span class="n">cryptor</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">meta_key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">cryptor</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">meta_data</span><span class="p">))</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)[</span><span class="mi">6</span><span class="p">:]</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">meta_data</span><span class="p">)</span>
    <span class="n">crc32</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">crc32</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">crc32</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">image_size</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">image_size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">image_size</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">image_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">image_size</span><span class="p">)</span>
    <span class="n">file_name</span> <span class="o">=</span> <span class="n">meta_data</span><span class="p">[</span><span class="s1">&#39;musicName&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="n">meta_data</span><span class="p">[</span><span class="s1">&#39;format&#39;</span><span class="p">]</span>
    <span class="n">m</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">file_path</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">file_name</span><span class="p">),</span><span class="s1">&#39;wb&#39;</span><span class="p">)</span>
    <span class="n">chunk</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">()</span>
    <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
        <span class="n">chunk</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mh">0x8000</span><span class="p">))</span>
        <span class="n">chunk_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">chunk</span><span class="p">:</span>
            <span class="k">break</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">chunk_length</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">;</span>
            <span class="n">chunk</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">^=</span> <span class="n">key_box</span><span class="p">[(</span><span class="n">key_box</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">key_box</span><span class="p">[(</span><span class="n">key_box</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">j</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">]</span>
        <span class="n">m</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
    <span class="n">m</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="kn">import</span> <span class="nn">sys</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">file_path</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">dump</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Usage: python ncmdump.py </span><span class="se">\&#34;</span><span class="s2">File Name</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="工具">工具</h2>
<p><a href="https://github.com/unlock-music/unlock-music" target="_blank" rel="noopener noreffer">https://github.com/unlock-music/unlock-music</a></p>]]></description>
</item><item>
    <title>B站AV号BV号互相转换脚本</title>
    <link>https://www.bysec.cn/20210301/</link>
    <pubDate>Mon, 01 Mar 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210301/</guid>
    <description><![CDATA[<h1 id="av号bv号互相转换脚本">AV号BV号互相转换脚本</h1>
<h2 id="php实例">PHP实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-PHP" data-lang="PHP"><span class="k">class</span> <span class="nc">Bilibili</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$tr</span> <span class="o">=</span> <span class="s2">&#34;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#34;</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$xor</span> <span class="o">=</span> <span class="mi">177451812</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$add</span> <span class="o">=</span> <span class="mi">8728348608</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$s</span> <span class="o">=</span> <span class="p">[</span><span class="mi">11</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>

    <span class="c1">// BV 转 AV
</span><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">dec</span><span class="p">(</span><span class="nv">$bv</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$r</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="nv">$tr</span> <span class="o">=</span> <span class="nx">array_flip</span><span class="p">(</span><span class="nx">str_split</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">tr</span><span class="p">));</span>
        <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$r</span> <span class="o">+=</span> <span class="nv">$tr</span><span class="p">[</span><span class="nv">$bv</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s</span><span class="p">[</span><span class="nv">$i</span><span class="p">]]]</span> <span class="o">*</span> <span class="p">(</span><span class="nx">pow</span><span class="p">(</span><span class="mi">58</span><span class="p">,</span> <span class="nv">$i</span><span class="p">));</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="p">(</span><span class="nv">$r</span> <span class="o">-</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">)</span> <span class="o">^</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">xor</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// AV 转 BV
</span><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">enc</span><span class="p">(</span><span class="nv">$av</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$tr</span> <span class="o">=</span> <span class="nx">str_split</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">tr</span><span class="p">);</span>
        <span class="nv">$bv</span> <span class="o">=</span> <span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">;</span>
        <span class="nv">$av</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$av</span> <span class="o">^</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">xor</span><span class="p">)</span> <span class="o">+</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$bv</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s</span><span class="p">[</span><span class="nv">$i</span><span class="p">]]</span> <span class="o">=</span> <span class="nv">$tr</span><span class="p">[</span><span class="nx">floor</span><span class="p">(</span><span class="nv">$av</span><span class="o">/</span><span class="nx">pow</span><span class="p">(</span><span class="mi">58</span><span class="p">,</span><span class="nv">$i</span><span class="p">)</span><span class="o">%</span><span class="mi">58</span><span class="p">)];</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="nv">$bv</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 调用
</span><span class="c1"></span><span class="nv">$str</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Bilibili</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$str</span><span class="o">-&gt;</span><span class="na">dec</span><span class="p">(</span><span class="s1">&#39;BV17x411w7KC&#39;</span><span class="p">);</span> <span class="c1">// 输出: 170001
</span><span class="c1"></span><span class="k">echo</span> <span class="nv">$str</span><span class="o">-&gt;</span><span class="na">enc</span><span class="p">(</span><span class="mi">170001</span><span class="p">);</span>  <span class="c1">// 输出: BV17x411w7KC
</span></code></pre></td></tr></table>
</div>
</div><h2 id="python实例">python实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">table</span><span class="o">=</span><span class="s1">&#39;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#39;</span>
<span class="n">tr</span><span class="o">=</span><span class="p">{}</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">58</span><span class="p">):</span>
	<span class="n">tr</span><span class="p">[</span><span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">i</span>
<span class="n">s</span><span class="o">=</span><span class="p">[</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
<span class="n">xor</span><span class="o">=</span><span class="mi">177451812</span>
<span class="n">add</span><span class="o">=</span><span class="mi">8728348608</span>

<span class="k">def</span> <span class="nf">dec</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">r</span><span class="o">=</span><span class="mi">0</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="o">+=</span><span class="n">tr</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]]</span><span class="o">*</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span>
	<span class="k">return</span> <span class="p">(</span><span class="n">r</span><span class="o">-</span><span class="n">add</span><span class="p">)</span><span class="o">^</span><span class="n">xor</span>

<span class="k">def</span> <span class="nf">enc</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">x</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="o">^</span><span class="n">xor</span><span class="p">)</span><span class="o">+</span><span class="n">add</span>
	<span class="n">r</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">)</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">table</span><span class="p">[</span><span class="n">x</span><span class="o">//</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span><span class="o">%</span><span class="mi">58</span><span class="p">]</span>
	<span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV17x411w7KC&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV1Q541167Qg&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV1mK4y1C7Bz&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">170001</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">455017605</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">882584971</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python通过selenium获取cookie</title>
    <link>https://www.bysec.cn/20170901/</link>
    <pubDate>Fri, 01 Sep 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170901/</guid>
    <description><![CDATA[<h2 id="实例">实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">json</span>
 
 
<span class="n">options</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">FirefoxOptions</span><span class="p">()</span>
<span class="n">dr</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Firefox</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="n">options</span><span class="p">)</span>
 
<span class="n">dr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;https://cn.bing.com/search?q=objective</span><span class="si">%20le</span><span class="s1">ns</span><span class="si">%20o</span><span class="s1">f</span><span class="si">%20c</span><span class="s1">ompound%20microscope&amp;qs=ds&amp;form=QBRE&#39;</span><span class="p">)</span>
 
<span class="n">cookie_test</span> <span class="o">=</span> <span class="n">dr</span><span class="o">.</span><span class="n">get_cookies</span><span class="p">()</span>
<span class="c1"># 未整理的cookie</span>
<span class="nb">print</span><span class="p">(</span><span class="n">cookie_test</span><span class="p">)</span>
 
<span class="n">cookie</span> <span class="o">=</span> <span class="p">[</span><span class="n">item</span><span class="p">[</span><span class="s2">&#34;name&#34;</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&#34;=&#34;</span> <span class="o">+</span> <span class="n">item</span><span class="p">[</span><span class="s2">&#34;value&#34;</span><span class="p">]</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">cookie_test</span><span class="p">]</span>
<span class="n">cookiestr</span> <span class="o">=</span> <span class="s1">&#39;; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">cookie</span><span class="p">)</span>
<span class="c1"># 整理后的cookie</span>
<span class="nb">print</span><span class="p">(</span><span class="n">cookiestr</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="未整理的cookie为">未整理的cookie为</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">[{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;SRCHD&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;AF=QBRE&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1624095919,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;SRCHUID&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;V=2&amp;GUID=0AA209DFB56549E1AABE3300BE0C055D&amp;dmnchg=1&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1624095919,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;SRCHUSR&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;DOB=20190619&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1624095919,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;_EDGE_S&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;F=1&amp;SID=1B8FEA8F99976FF11A3FE70F98B96ED0&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">None,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">True</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;_EDGE_V&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;1&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1594633519,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">True</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;MUID&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;20D548F9F8E36E4532D24579F9CD6FDF&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1594633519,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;MUIDB&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;20D548F9F8E36E4532D24579F9CD6FDF&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;cn.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1594633519,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">True</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;_SS&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;SID=1B8FEA8F99976FF11A3FE70F98B96ED0&amp;HV=1560937520&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">None,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">}]</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="整理后的cookie为">整理后的cookie为</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="err">SRCHD=AF=QBRE;</span> <span class="err">SRCHUID=V=</span><span class="mi">2</span><span class="err">&amp;GUID=</span><span class="mi">0</span><span class="err">AA</span><span class="mi">209</span><span class="err">DFB</span><span class="mf">56549E1</span><span class="err">AABE</span><span class="mi">3300</span><span class="err">BE</span><span class="mi">0</span><span class="err">C</span><span class="mi">055</span><span class="err">D&amp;dmnchg=</span><span class="mi">1</span><span class="err">;</span> <span class="err">SRCHUSR=DOB=</span><span class="mi">20190619</span><span class="err">;</span> <span class="err">_EDGE_S=F=</span><span class="mi">1</span><span class="err">&amp;SID=</span><span class="mi">1</span><span class="err">B</span><span class="mi">8</span><span class="err">FEA</span><span class="mi">8</span><span class="err">F</span><span class="mi">99976</span><span class="err">FF</span><span class="mi">11</span><span class="err">A</span><span class="mi">3</span><span class="err">FE</span><span class="mi">70</span><span class="err">F</span><span class="mi">98</span><span class="err">B</span><span class="mi">96</span><span class="err">ED</span><span class="mi">0</span><span class="err">;</span> <span class="err">_EDGE_V=</span><span class="mi">1</span><span class="err">;</span> <span class="err">MUID=</span><span class="mi">20</span><span class="err">D</span><span class="mi">548</span><span class="err">F</span><span class="mi">9</span><span class="err">F</span><span class="mf">8E36</span><span class="err">E</span><span class="mi">4532</span><span class="err">D</span><span class="mi">24579</span><span class="err">F</span><span class="mi">9</span><span class="err">CD</span><span class="mi">6</span><span class="err">FDF;</span> <span class="err">MUIDB=</span><span class="mi">20</span><span class="err">D</span><span class="mi">548</span><span class="err">F</span><span class="mi">9</span><span class="err">F</span><span class="mf">8E36</span><span class="err">E</span><span class="mi">4532</span><span class="err">D</span><span class="mi">24579</span><span class="err">F</span><span class="mi">9</span><span class="err">CD</span><span class="mi">6</span><span class="err">FDF;</span> <span class="err">_SS=SID=</span><span class="mi">1</span><span class="err">B</span><span class="mi">8</span><span class="err">FEA</span><span class="mi">8</span><span class="err">F</span><span class="mi">99976</span><span class="err">FF</span><span class="mi">11</span><span class="err">A</span><span class="mi">3</span><span class="err">FE</span><span class="mi">70</span><span class="err">F</span><span class="mi">98</span><span class="err">B</span><span class="mi">96</span><span class="err">ED</span><span class="mi">0</span><span class="err">&amp;HV=</span><span class="mi">1560937520</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>python3实现AES加密</title>
    <link>https://www.bysec.cn/20170701/</link>
    <pubDate>Sat, 01 Jul 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170701/</guid>
    <description><![CDATA[<blockquote>
<p>转载自：<a href="https://blog.csdn.net/chouzhou9701/article/details/89339625" target="_blank" rel="noopener noreffer">https://blog.csdn.net/chouzhou9701/article/details/89339625</a></p>
</blockquote>
<h1 id="前言">前言</h1>
<p>这几天研究了一下 python 实现 AES 加密，有很多坑</p>
<p>AES 加密的参数及其条件
这个 AES 加密的主要坑就在于这些条件， 首先 aes 加密有一下几个参数</p>
<ol>
<li>
<p>秘钥：加密的时候用秘钥，解密的时候需要同样的秘钥才能解出来</p>
</li>
<li>
<p>明文：需要加密的参数</p>
</li>
<li>
<p>模式：aes 加密常用的有 ECB 和 CBC 模式（我只用了这两个模式，还有其他模式）</p>
</li>
<li>
<p>iv 偏移量：这个参数在 ECB 模式下不需要，在 CBC 模式下需要</p>
</li>
</ol>
<p>需要输入这些参数才能返回一个密文
下面是重点
下面说一下这几个参数的条件：</p>
<ol>
<li>
<p>秘钥：必须是16位字节或者24位字节或者32位字节（因为python3的字符串是unicode编码，需要 encode才可以转换成字节型数据）</p>
</li>
<li>
<p>明文：字节长度需要是16位的倍数</p>
</li>
</ol>
<p>下面我用python3简单的方法实现:</p>
<h2 id="简单方法">简单方法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;1234567890123456&#39;</span> <span class="c1">#秘钥</span>
<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;1234567890123456&#39;</span> <span class="c1">#需要加密的内容</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span> <span class="c1">#定义模式</span>
<span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">password</span><span class="p">,</span><span class="n">model</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>

<span class="n">en_text</span> <span class="o">=</span> <span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span> <span class="c1">#加密明文</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">encodebytes</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span> <span class="c1">#将返回的字节型数据转进行base64编码</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">en_text</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf8&#39;</span><span class="p">)</span> <span class="c1">#将字节型数据转换成python中的字符串类型</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="输出">输出</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="sa">b</span><span class="s1">&#39;u|</span><span class="se">\xcd\x0c\xdc\\\x90\xea\xdb\xee\xec\xf6</span><span class="s1">8</span><span class="se">\xdd\x00\x00</span><span class="s1">&#39;</span>
<span class="sa">b</span><span class="s1">&#39;dXzNDNxckOrb7uz2ON0AAA==</span><span class="se">\n</span><span class="s1">&#39;</span>
<span class="n">dXzNDNxckOrb7uz2ON0AAA</span><span class="o">==</span>
</code></pre></td></tr></table>
</div>
</div><p>这里有个问题就是密钥和加密的文本内容都必须是固定的16位（根据我前面说的参数要求）</p>
<p>所以下面优化的代码（将秘钥和需要加密的文本补成对应的位数）</p>
<h2 id="优化的代码">优化的代码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>

<span class="k">def</span> <span class="nf">add_to_16</span><span class="p">(</span><span class="n">par</span><span class="p">):</span>
    <span class="n">par</span> <span class="o">=</span> <span class="n">par</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span> <span class="c1">#先将字符串类型数据转换成字节型数据</span>
    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">%</span> <span class="mi">16</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span> <span class="c1">#对字节型数据进行长度判断</span>
        <span class="n">par</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span> <span class="c1">#如果字节型数据长度不是16倍整数就进行 补充</span>
    <span class="k">return</span> <span class="n">par</span>

<span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;123456&#39;</span> <span class="c1">#秘钥</span>
<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;1&#39;</span> <span class="c1">#需要加密的内容</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span> <span class="c1">#定义模式</span>
<span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">add_to_16</span><span class="p">(</span><span class="n">password</span><span class="p">),</span><span class="n">model</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>

<span class="n">en_text</span> <span class="o">=</span> <span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">add_to_16</span><span class="p">(</span><span class="n">text</span><span class="p">))</span> <span class="c1">#加密明文</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">encodebytes</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span> <span class="c1">#将返回的字节型数据转进行base64编码</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">en_text</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf8&#39;</span><span class="p">)</span> <span class="c1">#将字节型数据转换成python中的字符串类型</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</code></pre></td></tr></table>
</div>
</div><p>这里简单的说一下几个存在的问题</p>
<ol>
<li>
<p>其实上述代码我简单省略的进行补全到16位，而秘钥24位也是可以的，你可以自己写一个函数来进行秘钥的补全</p>
</li>
<li>
<p>为什么进行补全之前先进行 .encode() ? 首先 encode() 不加参数默认是以 utf8 编码的，另外先进行 encode 的原因是因为怕加密的文本中存在汉字，而汉字的 utf8 编码的字节长度是3（gbk对汉字的编码字节长度是2），所以为了防止补全的位数不正确，这里必须先进行转换（我看到很多别的文章先补全后进行转换的，而且还是拿空格补全的。。。）</p>
</li>
<li>
<p>不知道有没有发现，aes.encrypt() 在第一个程序中我传递的是字符串类型，第二个程序传递的是字节型数据，这个函数其实是既可以传递字符串数据类型也可以传递字节型数据的</p>
</li>
</ol>
<p>上面的程序没有解密函数，所以我对整个加密解密进行了一个类的最终封装</p>
<h2 id="最终封装">最终封装</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="k">class</span> <span class="nc">aescrypt</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">model</span><span class="p">,</span><span class="n">iv</span><span class="p">,</span><span class="n">encode_</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">encode_</span> <span class="o">=</span> <span class="n">encode_</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">=</span>  <span class="p">{</span><span class="s1">&#39;ECB&#39;</span><span class="p">:</span><span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">,</span><span class="s1">&#39;CBC&#39;</span><span class="p">:</span><span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">}[</span><span class="n">model</span><span class="p">]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">model</span> <span class="o">==</span> <span class="s1">&#39;ECB&#39;</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>
        <span class="k">elif</span> <span class="n">model</span> <span class="o">==</span> <span class="s1">&#39;CBC&#39;</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span><span class="n">iv</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>

        <span class="c1">#这里的密钥长度必须是16、24或32，目前16位的就够用了</span>

    <span class="k">def</span> <span class="nf">add_16</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">par</span><span class="p">):</span>
        <span class="n">par</span> <span class="o">=</span> <span class="n">par</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encode_</span><span class="p">)</span>
        <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">%</span> <span class="mi">16</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">par</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span>
        <span class="k">return</span> <span class="n">par</span>

    <span class="k">def</span> <span class="nf">aesencrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">base64</span><span class="o">.</span><span class="n">encodebytes</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">aesdecrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">decodebytes</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encode_</span><span class="p">))</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encode_</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\0</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">pr</span> <span class="o">=</span> <span class="n">aescrypt</span><span class="p">(</span><span class="s1">&#39;12345&#39;</span><span class="p">,</span><span class="s1">&#39;ECB&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;gbk&#39;</span><span class="p">)</span>
    <span class="n">en_text</span> <span class="o">=</span> <span class="n">pr</span><span class="o">.</span><span class="n">aesencrypt</span><span class="p">(</span><span class="s1">&#39;好好学习&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;密文:&#39;</span><span class="p">,</span><span class="n">en_text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;明文:&#39;</span><span class="p">,</span><span class="n">pr</span><span class="o">.</span><span class="n">aesdecrypt</span><span class="p">(</span><span class="n">en_text</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><p>时隔多天, 我终于用上了以上的代码然后我发现我的代码是错误的,评论区也有指出</p>
<p>所以我又重新测试发现在ECB模式是没有问题的, 在使用CBC 模式的条件下, 不可以在类的构造函数里面构建 aes对象, 也就是说在CBC模式下 每一次加密和解密 都需要重新构建aes对象 self.aes = AES.new(self.key,self.model,iv), 否则加密和解密的结果就会不一致或者报错</p>
<p>另外就是关于 padding模式方面的问题</p>
<ul>
<li>ZeroPadding</li>
<li>PKCS7Padding</li>
<li>PKCS5Padding</li>
</ul>
<p>这几种模式的区别, 我也不从算法方面探讨了, 因为我发现当你用什么补全的时候, 解密回来的字符串里是包含补全使用的字符串的所以代码中用'\x00' 补全是没有问题的, 你用什么补全都可以(这里我用的是python,至于别的语言是不是这样我就不知道了)</p>
<p>最后一个点就是 关于base64编码的问题了,我也不知道这个是不是由于padding 模式区别导致的, 因为有的密文采用的是base64编码, 有点密文采用的是 hexstr编码, 反正无论采用什么编码,在真正加密和解密的时候是绝对会转换成 bytes类型的</p>
<p>所以我最终只做一个只是针对 bytes 的AES加密解密类</p>
<h2 id="加密解密类">加密解密类</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>

<span class="k">class</span> <span class="nc">Aescrypt</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">model</span><span class="p">,</span><span class="n">iv</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">=</span> <span class="n">model</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">iv</span> <span class="o">=</span> <span class="n">iv</span>

    <span class="k">def</span> <span class="nf">add_16</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">par</span><span class="p">):</span>
        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">==</span> <span class="nb">str</span><span class="p">:</span>
            <span class="n">par</span> <span class="o">=</span> <span class="n">par</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span>
        <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">%</span> <span class="mi">16</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">par</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span>
        <span class="k">return</span> <span class="n">par</span>

    <span class="k">def</span> <span class="nf">aesencrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">iv</span><span class="p">)</span> 
        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">)</span> 
        <span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span>

    <span class="k">def</span> <span class="nf">aesdecrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">iv</span><span class="p">)</span> 
        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">)</span> 
        <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x00</span><span class="s2">&#34;</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">passwd</span> <span class="o">=</span> <span class="s2">&#34;123456781234567&#34;</span>
    <span class="n">iv</span> <span class="o">=</span> <span class="s1">&#39;1234567812345678&#39;</span>

    <span class="n">aescryptor</span> <span class="o">=</span> <span class="n">Aescrypt</span><span class="p">(</span><span class="n">passwd</span><span class="p">,</span><span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">,</span><span class="n">iv</span><span class="p">)</span> <span class="c1"># CBC模式</span>
    <span class="c1"># aescryptor = Aescrypt(passwd,AES.MODE_ECB,&#34;&#34;) # ECB模式</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s2">&#34;好好学习&#34;</span>
    <span class="n">en_text</span> <span class="o">=</span> <span class="n">aescryptor</span><span class="o">.</span><span class="n">aesencrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;密文:&#34;</span><span class="p">,</span><span class="n">en_text</span><span class="p">)</span>
    <span class="n">text</span> <span class="o">=</span> <span class="n">aescryptor</span><span class="o">.</span><span class="n">aesdecrypt</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;明文:&#34;</span><span class="p">,</span><span class="n">text</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>上面这段代码 你输入的 所有参数都应该是字符串或者 字节型数据, 并且输出的都是 字节型数据</p>
<p>如果进行一些编码转换可以在类的外部进行完成, 这里我就不写了, 到这里我才真正的明白为什么 python自己不封装一下这个算法, 确实可能的情况太多了, 这样还是比较灵活的。(其实进一步封装也是可以的, 就是判断输入的是base64字符串,还是hexstr,或者bytes, 然后在自定义一下输出,不过我是懒得弄了)</p>
<p>另外附上 base64 编码解码 和 hexstr 编码解码</p>
<h2 id="编码解码">编码解码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">binascii</span>
<span class="n">data</span> <span class="o">=</span> <span class="s2">&#34;hello&#34;</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;base64编码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;base64解码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">b2a_hex</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;hexstr编码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;hexstr解码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如果你真的认真的读了我的这篇文章, 我相信你肯定解决了你的问题, 如果不是这样可以评论区提出</p>]]></description>
</item><item>
    <title>Python部署推送</title>
    <link>https://www.bysec.cn/20170601/</link>
    <pubDate>Thu, 01 Jun 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170601/</guid>
    <description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding: utf-8 -*-</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">chardet</span>
<span class="kn">import</span> <span class="nn">subprocess</span>


<span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bytes</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="n">source_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;encoding&#39;</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">))</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">source_encoding</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_str</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">out_enc</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content_str</span><span class="p">)</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bb</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

    <span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;I/O error:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>


<span class="k">def</span> <span class="nf">explore</span><span class="p">(</span><span class="nb">dir</span><span class="p">,</span> <span class="n">suffix</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">file</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">suffix</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
                <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span>
                <span class="n">convert</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">exe</span><span class="p">():</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">check_output</span><span class="p">(</span><span class="s2">&#34;hugo&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git add .&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git commit -m </span><span class="se">\&#34;</span><span class="s2">main</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git push&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">explore</span><span class="p">(</span><span class="s2">&#34;public&#34;</span><span class="p">,</span> <span class="s2">&#34;.md&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8-sig&#34;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s1">&#39;public&#39;</span><span class="p">)</span> 
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git add .&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git commit -m </span><span class="se">\&#34;</span><span class="s2">main</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git push&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">py</span><span class="p">():</span>
    <span class="c1"># 推送到 Hugo 仓库</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;hugo&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git add .&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git commit -m </span><span class="se">\&#34;</span><span class="s1">main</span><span class="se">\&#34;</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git push&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="c1"># 批量修改文档编码</span>
    <span class="n">explore</span><span class="p">(</span><span class="s2">&#34;public&#34;</span><span class="p">,</span> <span class="s2">&#34;.md&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8-sig&#34;</span><span class="p">)</span>
    <span class="c1"># 推送到 CNbysec.github.io 仓库</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s1">&#39;public&#39;</span><span class="p">)</span> 
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git add .&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git commit -m </span><span class="se">\&#34;</span><span class="s1">main</span><span class="se">\&#34;</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git push&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="c1"># 本地部署</span>
    <span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s1">&#39;../&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;hugo server&#39;</span><span class="p">)</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="c1"># exe()</span>
    <span class="n">py</span><span class="p">()</span>

</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python实现自动推送到仓库</title>
    <link>https://www.bysec.cn/20170501/</link>
    <pubDate>Mon, 01 May 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170501/</guid>
    <description><![CDATA[<h2 id="实现自动推送到仓库">实现自动推送到仓库</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding:utf-8 -*-</span>

<span class="kn">from</span> <span class="nn">watchdog.observers</span> <span class="kn">import</span> <span class="n">Observer</span>
<span class="kn">from</span> <span class="nn">watchdog.events</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>


<span class="k">def</span> <span class="nf">push</span><span class="p">(</span><span class="n">change</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">76</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git add .&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git commit -m</span><span class="se">\&#34;</span><span class="s1">auto&#39;</span><span class="o">+</span><span class="n">change</span><span class="o">+</span><span class="s1">&#39;</span><span class="se">\&#34;</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git push -u origin master&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">76</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">FileEventHandler</span><span class="p">(</span><span class="n">FileSystemEventHandler</span><span class="p">):</span>
    <span class="c1"># 初始化魔术方法</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">FileSystemEventHandler</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>

    <span class="c1"># 文件或文件夹移动</span>
    <span class="k">def</span> <span class="nf">on_moved</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory moved from </span><span class="si">{0}</span><span class="s2"> to </span><span class="si">{1}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">,</span> <span class="n">event</span><span class="o">.</span><span class="n">dest_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file moved from </span><span class="si">{0}</span><span class="s2"> to </span><span class="si">{1}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">,</span> <span class="n">event</span><span class="o">.</span><span class="n">dest_path</span><span class="p">))</span>
            <span class="c1"># 这里我们只判断文件修改,如需加入文件夹修改,只需在上面的if条件中调用push函数即可</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;文件移动: </span><span class="si">{0}</span><span class="s2"> to </span><span class="si">{1}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">,</span> <span class="n">event</span><span class="o">.</span><span class="n">dest_path</span><span class="p">))</span>

    <span class="c1"># 创建文件或文件夹</span>
    <span class="k">def</span> <span class="nf">on_created</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory created:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file created:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;创建文件:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>

    <span class="c1"># 删除文件或文件夹</span>
    <span class="k">def</span> <span class="nf">on_deleted</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory deleted:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file deleted:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;删除文件:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>

    <span class="c1"># 移动文件或文件夹</span>
    <span class="k">def</span> <span class="nf">on_modified</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory modified:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file modified:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;文件修改:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="c1"># 实例化Observer对象</span>
    <span class="n">observer</span> <span class="o">=</span> <span class="n">Observer</span><span class="p">()</span>
    <span class="n">event_handler</span> <span class="o">=</span> <span class="n">FileEventHandler</span><span class="p">()</span>
    <span class="c1"># 设置监听目录</span>
    <span class="n">dis_dir</span> <span class="o">=</span> <span class="s2">&#34;./_posts/&#34;</span>
    <span class="n">observer</span><span class="o">.</span><span class="n">schedule</span><span class="p">(</span><span class="n">event_handler</span><span class="p">,</span> <span class="n">dis_dir</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>
    <span class="n">observer</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
            <span class="c1"># 设置监听频率(间隔周期时间)</span>
            <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
        <span class="n">observer</span><span class="o">.</span><span class="n">stop</span><span class="p">()</span>
    <span class="n">observer</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python批量修改文档编码</title>
    <link>https://www.bysec.cn/20170401/</link>
    <pubDate>Sat, 01 Apr 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170401/</guid>
    <description><![CDATA[<h2 id="批量修改文档编码">批量修改文档编码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding: utf-8 -*-</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">chardet</span>


<span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bytes</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="n">source_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;encoding&#39;</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">))</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">source_encoding</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_str</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">out_enc</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content_str</span><span class="p">)</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bb</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

    <span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;I/O error:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>


<span class="k">def</span> <span class="nf">explore</span><span class="p">(</span><span class="nb">dir</span><span class="p">,</span> <span class="n">suffix</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">file</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">suffix</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
                <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span>
                <span class="n">convert</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">explore</span><span class="p">(</span><span class="s2">&#34;./public&#34;</span><span class="p">,</span> <span class="s2">&#34;.md&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8-sig&#34;</span><span class="p">)</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Tkinter多线程</title>
    <link>https://www.bysec.cn/20170301/</link>
    <pubDate>Wed, 01 Mar 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170301/</guid>
    <description><![CDATA[<h2 id="tkinter多线程">tkinter多线程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*-coding:utf-8-*-</span>
<span class="kn">import</span> <span class="nn">threading</span>
<span class="kn">import</span> <span class="nn">tkinter</span>
<span class="kn">import</span> <span class="nn">tkinter.messagebox</span>


<span class="k">def</span> <span class="nf">message</span><span class="p">():</span>
    <span class="n">tkinter</span><span class="o">.</span><span class="n">messagebox</span><span class="o">.</span><span class="n">showinfo</span><span class="p">(</span><span class="n">message</span><span class="o">=</span><span class="s2">&#34;弹出消息&#34;</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">sta</span><span class="p">():</span>
    <span class="n">th</span> <span class="o">=</span> <span class="n">threading</span><span class="o">.</span><span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">main</span><span class="p">)</span>
    <span class="n">th</span><span class="o">.</span><span class="n">setDaemon</span><span class="p">(</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">th</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">root</span> <span class="o">=</span> <span class="n">tkinter</span><span class="o">.</span><span class="n">Tk</span><span class="p">()</span>
    <span class="n">root</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;title&#34;</span><span class="p">)</span>
    <span class="n">root</span><span class="o">.</span><span class="n">iconbitmap</span><span class="p">(</span><span class="s2">&#34;favicon.ico&#34;</span><span class="p">)</span>
    <span class="n">root</span><span class="o">.</span><span class="n">resizable</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">sw</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">winfo_screenwidth</span><span class="p">()</span>
    <span class="n">sh</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">winfo_screenheight</span><span class="p">()</span>
    <span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="n">sw</span> <span class="o">-</span> <span class="mi">300</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
    <span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="n">sh</span> <span class="o">-</span> <span class="mi">300</span><span class="p">)</span> <span class="o">/</span> <span class="mi">5</span>
    <span class="n">root</span><span class="o">.</span><span class="n">geometry</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">%d</span><span class="s2">x</span><span class="si">%d</span><span class="s2">+</span><span class="si">%d</span><span class="s2">+</span><span class="si">%d</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>

    <span class="n">message</span> <span class="o">=</span> <span class="n">tkinter</span><span class="o">.</span><span class="n">Button</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s2">&#34;弹框消息&#34;</span><span class="p">,</span> <span class="n">bg</span><span class="o">=</span><span class="s1">&#39;white&#39;</span><span class="p">,</span> <span class="n">fg</span><span class="o">=</span><span class="s1">&#39;green&#39;</span><span class="p">,</span> <span class="n">command</span><span class="o">=</span><span class="n">message</span><span class="p">)</span>
    <span class="n">message</span><span class="o">.</span><span class="n">pack</span><span class="p">()</span>
    <span class="n">message</span> <span class="o">=</span> <span class="n">message</span><span class="o">.</span><span class="n">place</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">65</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">150</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">40</span><span class="p">)</span>

    <span class="n">sta</span> <span class="o">=</span> <span class="n">tkinter</span><span class="o">.</span><span class="n">Button</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s2">&#34;开 始&#34;</span><span class="p">,</span> <span class="n">bg</span><span class="o">=</span><span class="s1">&#39;white&#39;</span><span class="p">,</span> <span class="n">fg</span><span class="o">=</span><span class="s1">&#39;red&#39;</span><span class="p">,</span> <span class="n">command</span><span class="o">=</span><span class="n">sta</span><span class="p">)</span>
    <span class="n">sta</span><span class="o">.</span><span class="n">pack</span><span class="p">()</span>
    <span class="n">sta</span> <span class="o">=</span> <span class="n">sta</span><span class="o">.</span><span class="n">place</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">120</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">40</span><span class="p">)</span>

    <span class="n">root</span><span class="o">.</span><span class="n">mainloop</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>python读取yaml文件</title>
    <link>https://www.bysec.cn/20170201/</link>
    <pubDate>Wed, 01 Feb 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170201/</guid>
    <description><![CDATA[<h2 id="读取yaml文件">读取yaml文件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="kn">import</span> <span class="nn">yaml</span>

<span class="k">def</span> <span class="nf">getYaml</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
    <span class="n">proPath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">realpath</span><span class="p">(</span><span class="vm">__file__</span><span class="p">))</span>
    <span class="n">yamlPath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">proPath</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">yamlPath</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">full_load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">data</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>python图片切片</title>
    <link>https://www.bysec.cn/20170101/</link>
    <pubDate>Sun, 01 Jan 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170101/</guid>
    <description><![CDATA[<h2 id="图片切片">图片切片</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>

<span class="k">def</span> <span class="nf">cutImg</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">):</span>
    <span class="n">im</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
    <span class="n">img_size</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">size</span>
    <span class="n">region</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">crop</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="n">w</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="n">h</span><span class="p">))</span>
    <span class="n">region</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s1">&#39;cutImg.png&#39;</span><span class="p">)</span>
    <span class="k">return</span> <span class="nb">format</span><span class="p">(</span><span class="n">img_size</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="获取图片位置上的rgb颜色">获取图片位置上的rgb颜色</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>

<span class="k">def</span> <span class="nf">getPix</span><span class="p">(</span><span class="n">Path</span><span class="p">,</span> <span class="n">pixelX</span><span class="p">,</span> <span class="n">pixelY</span><span class="p">):</span>
    <span class="n">img_src</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">Path</span><span class="p">)</span>
    <span class="n">img_src</span> <span class="o">=</span> <span class="n">img_src</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s1">&#39;RGB&#39;</span><span class="p">)</span>
    <span class="n">str_strlist</span> <span class="o">=</span> <span class="n">img_src</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">str_strlist</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">pixelX</span><span class="p">),</span> <span class="nb">int</span><span class="p">(</span><span class="n">pixelY</span><span class="p">)]</span>
    <span class="n">img_src</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">data</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 多线程</title>
    <link>https://www.bysec.cn/20161201/</link>
    <pubDate>Thu, 01 Dec 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20161201/</guid>
    <description><![CDATA[<h2 id="主线程">主线程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MultithreadingApplication</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">MainThreadProgram</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Thread</span> <span class="n">th</span> <span class="p">=</span> <span class="n">Thread</span><span class="p">.</span><span class="n">CurrentThread</span><span class="p">;</span>
            <span class="n">th</span><span class="p">.</span><span class="n">Name</span> <span class="p">=</span> <span class="s">&#34;MainThread&#34;</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;This is {0}&#34;</span><span class="p">,</span> <span class="n">th</span><span class="p">.</span><span class="n">Name</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="创建线程">创建线程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MultithreadingApplication</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">ThreadCreationProgram</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">CallToChildThread</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Child thread starts&#34;</span><span class="p">);</span>
        <span class="p">}</span>
       
        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ThreadStart</span> <span class="n">childref</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ThreadStart</span><span class="p">(</span><span class="n">CallToChildThread</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;In Main: Creating the Child thread&#34;</span><span class="p">);</span>
            <span class="n">Thread</span> <span class="n">childThread</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="p">(</span><span class="n">childref</span><span class="p">);</span>
            <span class="n">childThread</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="管理线程">管理线程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MultithreadingApplication</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">ThreadCreationProgram</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">CallToChildThread</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Child thread starts&#34;</span><span class="p">);</span>
            <span class="c1">// 线程暂停 5000 毫秒
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">sleepfor</span> <span class="p">=</span> <span class="m">5000</span><span class="p">;</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Child Thread Paused for {0} seconds&#34;</span><span class="p">,</span>
                              <span class="n">sleepfor</span> <span class="p">/</span> <span class="m">1000</span><span class="p">);</span>
            <span class="n">Thread</span><span class="p">.</span><span class="n">Sleep</span><span class="p">(</span><span class="n">sleepfor</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Child thread resumes&#34;</span><span class="p">);</span>
        <span class="p">}</span>
       
        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ThreadStart</span> <span class="n">childref</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ThreadStart</span><span class="p">(</span><span class="n">CallToChildThread</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;In Main: Creating the Child thread&#34;</span><span class="p">);</span>
            <span class="n">Thread</span> <span class="n">childThread</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="p">(</span><span class="n">childref</span><span class="p">);</span>
            <span class="n">childThread</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="销毁线程">销毁线程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MultithreadingApplication</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">ThreadCreationProgram</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">CallToChildThread</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">try</span>
            <span class="p">{</span>

                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Child thread starts&#34;</span><span class="p">);</span>
                <span class="c1">// 计数到 10
</span><span class="c1"></span>                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">counter</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">counter</span> <span class="p">&lt;=</span> <span class="m">10</span><span class="p">;</span> <span class="n">counter</span><span class="p">++)</span>
                <span class="p">{</span>
                    <span class="n">Thread</span><span class="p">.</span><span class="n">Sleep</span><span class="p">(</span><span class="m">500</span><span class="p">);</span>
                    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">counter</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Child Thread Completed&#34;</span><span class="p">);</span>

            <span class="p">}</span>
            <span class="k">catch</span> <span class="p">(</span><span class="n">ThreadAbortException</span> <span class="n">e</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Thread Abort Exception&#34;</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">finally</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Couldn&#39;t catch the Thread Exception&#34;</span><span class="p">);</span>
            <span class="p">}</span>

        <span class="p">}</span>
       
        <span class="k">static</span> <span class="k">void</span> <span class="n">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ThreadStart</span> <span class="n">childref</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ThreadStart</span><span class="p">(</span><span class="n">CallToChildThread</span><span class="p">);</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;In Main: Creating the Child thread&#34;</span><span class="p">);</span>
            <span class="n">Thread</span> <span class="n">childThread</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="p">(</span><span class="n">childref</span><span class="p">);</span>
            <span class="n">childThread</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
            <span class="c1">// 停止主线程一段时间
</span><span class="c1"></span>            <span class="n">Thread</span><span class="p">.</span><span class="n">Sleep</span><span class="p">(</span><span class="m">2000</span><span class="p">);</span>
            <span class="c1">// 现在中止子线程
</span><span class="c1"></span>            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;In Main: Aborting the Child thread&#34;</span><span class="p">);</span>
            <span class="n">childThread</span><span class="p">.</span><span class="n">Abort</span><span class="p">();</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 下载图片到本地</title>
    <link>https://www.bysec.cn/20161101/</link>
    <pubDate>Tue, 01 Nov 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20161101/</guid>
    <description><![CDATA[<h2 id="下载图片到本地">下载图片到本地</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">public</span> <span class="k">void</span> <span class="n">saveimage</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">WebClient</span> <span class="n">mywebclient</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WebClient</span><span class="p">();</span>
    <span class="kt">string</span> <span class="n">url</span> <span class="p">=</span> <span class="s">&#34;http://images.google.cn/intl/zh-CN_ALL/images/images_hp.gif&#34;</span><span class="p">;</span>
    <span class="kt">string</span> <span class="n">newfilename</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Year</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Month</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span>  <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Day</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Hour</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Minute</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">Second</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&#34;.jpg&#34;</span><span class="p">;</span>
    <span class="kt">string</span> <span class="n">filepath</span> <span class="p">=</span> <span class="s">@&#34;F:\&#34;</span> <span class="p">+</span> <span class="n">newfilename</span><span class="p">;</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="n">mywebclient</span><span class="p">.</span><span class="n">DownloadFile</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">filepath</span><span class="p">);</span>
        <span class="c1">//filename = newfilename;
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="n">ex</span><span class="p">.</span><span class="n">ToString</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 使用Newtonsoft.Json解析json</title>
    <link>https://www.bysec.cn/20161001/</link>
    <pubDate>Sat, 01 Oct 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20161001/</guid>
    <description><![CDATA[<h2 id="使用newtonsoftjson解析json">使用Newtonsoft.Json解析json</h2>
<p>Visual Studio中搜索安装Newtonsoft.Json插件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="c1">// 解析对象
</span><span class="c1"></span><span class="kt">string</span> <span class="n">jsonText</span> <span class="p">=</span> <span class="s">&#34;{\&#34;zone\&#34;:\&#34;海淀\&#34;,\&#34;zone_en\&#34;:\&#34;haidian\&#34;}&#34;</span><span class="p">;</span>
<span class="n">JObject</span> <span class="n">jo</span> <span class="p">=</span> <span class="p">(</span><span class="n">JObject</span><span class="p">)</span><span class="n">JsonConvert</span><span class="p">.</span><span class="n">DeserializeObject</span><span class="p">(</span><span class="n">jsonText</span><span class="p">);</span>
<span class="kt">string</span> <span class="n">zone</span> <span class="p">=</span> <span class="n">jo</span><span class="p">[</span><span class="s">&#34;zone&#34;</span><span class="p">].</span><span class="n">ToString</span><span class="p">();</span>
<span class="kt">string</span> <span class="n">zone_en</span> <span class="p">=</span> <span class="n">jo</span><span class="p">[</span><span class="s">&#34;zone_en&#34;</span><span class="p">].</span><span class="n">ToString</span><span class="p">();</span>

<span class="c1">// 解析数组
</span><span class="c1"></span><span class="kt">string</span> <span class="n">jsonText</span> <span class="p">=</span> <span class="s">&#34;[\&#34;海淀\&#34;,\&#34;北京\&#34;,\&#34;上海\&#34;}&#34;</span><span class="p">;</span>
<span class="n">JObject</span> <span class="n">jo</span> <span class="p">=</span> <span class="p">(</span><span class="n">JObject</span><span class="p">)</span><span class="n">JsonConvert</span><span class="p">.</span><span class="n">DeserializeObject</span><span class="p">(</span><span class="n">jsonText</span><span class="p">);</span>
<span class="n">JArray</span> <span class="n">rangQiuList</span> <span class="p">=</span> <span class="p">(</span><span class="n">JArray</span><span class="p">)</span><span class="n">jo</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 复制、粘贴文本信息到剪贴板</title>
    <link>https://www.bysec.cn/20160901/</link>
    <pubDate>Thu, 01 Sep 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160901/</guid>
    <description><![CDATA[<h2 id="复制粘贴文本信息到剪贴板">复制、粘贴文本信息到剪贴板</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="c1">// 复制：
</span><span class="c1"></span><span class="k">private</span> <span class="k">void</span> <span class="n">button1_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
　　<span class="k">if</span><span class="p">(</span><span class="n">textBox1</span><span class="p">.</span><span class="n">SelectedText</span> <span class="p">!=</span> <span class="err">”</span><span class="s">&#34;)
</span><span class="s"></span>　　<span class="n">Clipboard</span><span class="p">.</span><span class="n">SetDataObject</span><span class="p">(</span><span class="n">textBox1</span><span class="p">.</span><span class="n">SelectedText</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// 粘贴：
</span><span class="c1"></span><span class="k">private</span> <span class="k">void</span> <span class="n">button2_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
　　<span class="n">IDataObject</span> <span class="n">iData</span> <span class="p">=</span> <span class="n">Clipboard</span><span class="p">.</span><span class="n">GetDataObject</span><span class="p">();</span>

　　<span class="k">if</span><span class="p">(</span><span class="n">iData</span><span class="p">.</span><span class="n">GetDataPresent</span><span class="p">(</span><span class="n">DataFormats</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span> <span class="p">{</span>
　　<span class="n">textBox2</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="p">(</span><span class="n">String</span><span class="p">)</span><span class="n">iData</span><span class="p">.</span><span class="n">GetData</span><span class="p">(</span><span class="n">DataFormats</span><span class="p">.</span><span class="n">Text</span><span class="p">);</span> 
　　<span class="p">}</span>
<span class="p">}</span>

<span class="err">主要通过调用</span><span class="n">Clipborad的API完成</span><span class="err">。</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 通过URL获取图片并显示在PictureBox上的方法</title>
    <link>https://www.bysec.cn/20160801/</link>
    <pubDate>Mon, 01 Aug 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160801/</guid>
    <description><![CDATA[<h2 id="通过url获取图片并显示在picturebox上的方法">通过URL获取图片并显示在PictureBox上的方法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="kt">string</span> <span class="n">url</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">@&#34;http://webservice.36wu.com/DimensionalCodeService.asmx/GetCodeImgByString?size={0}&amp;content={1}&#34;</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">123456</span><span class="p">);</span>
<span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebRequest</span> <span class="n">webreq</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebRequest</span><span class="p">.</span><span class="n">Create</span><span class="p">(</span><span class="n">url</span><span class="p">);</span>
<span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebResponse</span> <span class="n">webres</span> <span class="p">=</span> <span class="n">webreq</span><span class="p">.</span><span class="n">GetResponse</span><span class="p">();</span>
<span class="n">using</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Stream</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">webres</span><span class="p">.</span><span class="n">GetResponseStream</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">pictureBox1</span><span class="p">.</span><span class="n">Image</span> <span class="p">=</span> <span class="n">Image</span><span class="p">.</span><span class="n">FromStream</span><span class="p">(</span><span class="n">stream</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 禁止Form窗口调整大小</title>
    <link>https://www.bysec.cn/20160701/</link>
    <pubDate>Fri, 01 Jul 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160701/</guid>
    <description><![CDATA[<h2 id="禁止form窗口调整大小">禁止Form窗口调整大小</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="err">禁止</span><span class="n">Form窗口调整大小方法</span><span class="err">：</span><span class="n">FormBorderStyle</span> <span class="err">设为</span> <span class="n">FixedSingle</span><span class="err">；</span>

<span class="err">不能使用最大化窗口：</span><span class="n">MaximuzeBox</span> <span class="err">设为</span> <span class="n">False</span><span class="err">；</span>

<span class="err">不能使用最小化窗口：</span><span class="n">MinimizeBox</span> <span class="err">设为</span> <span class="n">False</span><span class="err">；</span>

<span class="err">禁止</span><span class="n">combobox输入方法</span><span class="err">：将</span><span class="n">DropDownStyle</span> <span class="err">设为</span> <span class="n">DropDownList</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python批量安装依赖</title>
    <link>https://www.bysec.cn/20160601/</link>
    <pubDate>Wed, 01 Jun 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160601/</guid>
    <description><![CDATA[<h2 id="新建-requirementstxt">新建 requirements.txt</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-txt" data-lang="txt">beautifulsoup4==4.8.2
certifi==2019.11.28
cffi==1.14.0
chardet==3.0.4
fire==0.2.1
gevent==1.4.0
greenlet==0.4.15
idna==2.8
lxml==4.5.0
Pillow==7.1.1
pycparser==2.20
requests==2.22.0
six==1.14.0
soupsieve==2.0
termcolor==1.1.0
tqdm==4.34.0
urllib3==1.25.3
</code></pre></td></tr></table>
</div>
</div><h2 id="安装命令">安装命令</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/
</code></pre></td></tr></table>
</div>
</div><h2 id="其它pypi源">其它pypi源</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-txt" data-lang="txt">#阿里云
http://mirrors.aliyun.com/pypi/simple/

#中国科学技术大学
http://pypi.mirrors.ustc.edu.cn/simple/

#清华大学
https://pypi.tuna.tsinghua.edu.cn/simple/
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>PyQt5多线程模块QThread使用方法</title>
    <link>https://www.bysec.cn/20160501/</link>
    <pubDate>Sun, 01 May 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160501/</guid>
    <description><![CDATA[<h2 id="mainpy">main.py</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding: utf-8 -*-</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">from</span> <span class="nn">PyQt5.QtCore</span> <span class="kn">import</span> <span class="n">QThread</span><span class="p">,</span> <span class="n">pyqtSignal</span>
<span class="kn">from</span> <span class="nn">PyQt5.QtWidgets</span> <span class="kn">import</span> <span class="n">QApplication</span><span class="p">,</span> <span class="n">QMainWindow</span>
<span class="kn">from</span> <span class="nn">UI</span> <span class="kn">import</span> <span class="n">Ui_Form</span>

<span class="k">class</span> <span class="nc">MyMainForm</span><span class="p">(</span><span class="n">QMainWindow</span><span class="p">,</span> <span class="n">Ui_Form</span><span class="p">):</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">MyMainForm</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">parent</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">setupUi</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
        <span class="c1"># 实例化线程对象</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">work</span> <span class="o">=</span> <span class="n">WorkThread</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">runButton</span><span class="o">.</span><span class="n">clicked</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">execute</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># 启动线程</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">work</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
        <span class="c1"># 线程自定义信号连接的槽函数</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">work</span><span class="o">.</span><span class="n">trigger</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">display</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
        <span class="c1"># 由于自定义信号时自动传递一个字符串参数，所以在这个槽函数中要接受一个参数</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">listWidget</span><span class="o">.</span><span class="n">addItem</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">WorkThread</span><span class="p">(</span><span class="n">QThread</span><span class="p">):</span>
    <span class="c1"># 自定义信号对象。参数str就代表这个信号可以传一个字符串</span>
    <span class="n">trigger</span> <span class="o">=</span> <span class="n">pyqtSignal</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>

    <span class="k">def</span> <span class="fm">__int__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># 初始化函数</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">WorkThread</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># 重写线程执行的run函数</span>
        <span class="c1"># 触发自定义信号</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">20</span><span class="p">):</span>
            <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="c1"># 通过自定义信号把待显示的字符串传递给槽函数</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">trigger</span><span class="o">.</span><span class="n">emit</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="n">app</span> <span class="o">=</span> <span class="n">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span>
    <span class="n">myWin</span> <span class="o">=</span> <span class="n">MyMainForm</span><span class="p">()</span>
    <span class="n">myWin</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">app</span><span class="o">.</span><span class="n">exec_</span><span class="p">())</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="uipy">UI.py</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding: utf-8 -*-</span>

<span class="c1"># Form implementation generated from reading ui file &#39;UI.ui&#39;</span>
<span class="c1">#</span>
<span class="c1"># Created by: PyQt5 UI code generator 5.13.0</span>
<span class="c1">#</span>
<span class="c1"># WARNING! All changes made in this file will be lost!</span>


<span class="kn">from</span> <span class="nn">PyQt5</span> <span class="kn">import</span> <span class="n">QtCore</span><span class="p">,</span> <span class="n">QtGui</span><span class="p">,</span> <span class="n">QtWidgets</span>


<span class="k">class</span> <span class="nc">Ui_Form</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">setupUi</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">Form</span><span class="p">):</span>
        <span class="n">Form</span><span class="o">.</span><span class="n">setObjectName</span><span class="p">(</span><span class="s2">&#34;Form&#34;</span><span class="p">)</span>
        <span class="n">Form</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">498</span><span class="p">,</span> <span class="mi">331</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">runButton</span> <span class="o">=</span> <span class="n">QtWidgets</span><span class="o">.</span><span class="n">QPushButton</span><span class="p">(</span><span class="n">Form</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">runButton</span><span class="o">.</span><span class="n">setGeometry</span><span class="p">(</span><span class="n">QtCore</span><span class="o">.</span><span class="n">QRect</span><span class="p">(</span><span class="mi">190</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">23</span><span class="p">))</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">runButton</span><span class="o">.</span><span class="n">setObjectName</span><span class="p">(</span><span class="s2">&#34;runButton&#34;</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">listWidget</span> <span class="o">=</span> <span class="n">QtWidgets</span><span class="o">.</span><span class="n">QListWidget</span><span class="p">(</span><span class="n">Form</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">listWidget</span><span class="o">.</span><span class="n">setGeometry</span><span class="p">(</span><span class="n">QtCore</span><span class="o">.</span><span class="n">QRect</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">70</span><span class="p">,</span> <span class="mi">431</span><span class="p">,</span> <span class="mi">192</span><span class="p">))</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">listWidget</span><span class="o">.</span><span class="n">setObjectName</span><span class="p">(</span><span class="s2">&#34;listWidget&#34;</span><span class="p">)</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">retranslateUi</span><span class="p">(</span><span class="n">Form</span><span class="p">)</span>
        <span class="n">QtCore</span><span class="o">.</span><span class="n">QMetaObject</span><span class="o">.</span><span class="n">connectSlotsByName</span><span class="p">(</span><span class="n">Form</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">retranslateUi</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">Form</span><span class="p">):</span>
        <span class="n">_translate</span> <span class="o">=</span> <span class="n">QtCore</span><span class="o">.</span><span class="n">QCoreApplication</span><span class="o">.</span><span class="n">translate</span>
        <span class="n">Form</span><span class="o">.</span><span class="n">setWindowTitle</span><span class="p">(</span><span class="n">_translate</span><span class="p">(</span><span class="s2">&#34;Form&#34;</span><span class="p">,</span> <span class="s2">&#34;Qthread Example&#34;</span><span class="p">))</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">runButton</span><span class="o">.</span><span class="n">setText</span><span class="p">(</span><span class="n">_translate</span><span class="p">(</span><span class="s2">&#34;Form&#34;</span><span class="p">,</span> <span class="s2">&#34;Run&#34;</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="uiui">UI.ui</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-XML" data-lang="XML"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
<span class="nt">&lt;ui</span> <span class="na">version=</span><span class="s">&#34;4.0&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;class&gt;</span>Form<span class="nt">&lt;/class&gt;</span>
    <span class="nt">&lt;widget</span> <span class="na">class=</span><span class="s">&#34;QWidget&#34;</span> <span class="na">name=</span><span class="s">&#34;Form&#34;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;geometry&#34;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;rect&gt;</span>
                <span class="nt">&lt;x&gt;</span>0<span class="nt">&lt;/x&gt;</span>
                <span class="nt">&lt;y&gt;</span>0<span class="nt">&lt;/y&gt;</span>
                <span class="nt">&lt;width&gt;</span>498<span class="nt">&lt;/width&gt;</span>
                <span class="nt">&lt;height&gt;</span>331<span class="nt">&lt;/height&gt;</span>
            <span class="nt">&lt;/rect&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;windowTitle&#34;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;string&gt;</span>Qthread Example<span class="nt">&lt;/string&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;widget</span> <span class="na">class=</span><span class="s">&#34;QPushButton&#34;</span> <span class="na">name=</span><span class="s">&#34;runButton&#34;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;geometry&#34;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;rect&gt;</span>
                    <span class="nt">&lt;x&gt;</span>190<span class="nt">&lt;/x&gt;</span>
                    <span class="nt">&lt;y&gt;</span>30<span class="nt">&lt;/y&gt;</span>
                    <span class="nt">&lt;width&gt;</span>75<span class="nt">&lt;/width&gt;</span>
                    <span class="nt">&lt;height&gt;</span>23<span class="nt">&lt;/height&gt;</span>
                <span class="nt">&lt;/rect&gt;</span>
            <span class="nt">&lt;/property&gt;</span>
            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;text&#34;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;string&gt;</span>Run<span class="nt">&lt;/string&gt;</span>
            <span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;/widget&gt;</span>
        <span class="nt">&lt;widget</span> <span class="na">class=</span><span class="s">&#34;QListWidget&#34;</span> <span class="na">name=</span><span class="s">&#34;listWidget&#34;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;geometry&#34;</span><span class="nt">&gt;</span>
                <span class="nt">&lt;rect&gt;</span>
                    <span class="nt">&lt;x&gt;</span>30<span class="nt">&lt;/x&gt;</span>
                    <span class="nt">&lt;y&gt;</span>70<span class="nt">&lt;/y&gt;</span>
                    <span class="nt">&lt;width&gt;</span>431<span class="nt">&lt;/width&gt;</span>
                    <span class="nt">&lt;height&gt;</span>192<span class="nt">&lt;/height&gt;</span>
                <span class="nt">&lt;/rect&gt;</span>
            <span class="nt">&lt;/property&gt;</span>
        <span class="nt">&lt;/widget&gt;</span>
    <span class="nt">&lt;/widget&gt;</span>
    <span class="nt">&lt;resources/&gt;</span>
    <span class="nt">&lt;connections/&gt;</span>
<span class="nt">&lt;/ui&gt;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# winform中DataGridView的数据实现导出excel</title>
    <link>https://www.bysec.cn/20160401/</link>
    <pubDate>Fri, 01 Apr 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160401/</guid>
    <description><![CDATA[<h2 id="引入">引入</h2>
<blockquote>
<p>使用这个方法需要装有微软office</p>
</blockquote>
<ol>
<li>引入程序集: Microsoft.Office.Interop.Excel.dll</li>
<li>没有就网上下载一份然后引用即可</li>
</ol>
<h2 id="实现方法">实现方法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">private</span> <span class="k">void</span> <span class="n">ExportExcels</span><span class="p">(</span><span class="kt">string</span> <span class="n">fileName</span><span class="p">,</span> <span class="n">DataGridView</span> <span class="n">myDGV</span><span class="p">)</span>
   <span class="p">{</span>
       <span class="kt">string</span> <span class="n">saveFileName</span> <span class="p">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
       <span class="n">SaveFileDialog</span> <span class="n">saveDialog</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SaveFileDialog</span><span class="p">();</span>
       <span class="n">saveDialog</span><span class="p">.</span><span class="n">DefaultExt</span> <span class="p">=</span> <span class="s">&#34;xls&#34;</span><span class="p">;</span>
       <span class="n">saveDialog</span><span class="p">.</span><span class="n">Filter</span> <span class="p">=</span> <span class="s">&#34;Excel文件|*.xls&#34;</span><span class="p">;</span>
       <span class="n">saveDialog</span><span class="p">.</span><span class="n">FileName</span> <span class="p">=</span> <span class="n">fileName</span><span class="p">;</span>
       <span class="n">saveDialog</span><span class="p">.</span><span class="n">ShowDialog</span><span class="p">();</span>
       <span class="n">saveFileName</span> <span class="p">=</span> <span class="n">saveDialog</span><span class="p">.</span><span class="n">FileName</span><span class="p">;</span>
       <span class="k">if</span> <span class="p">(</span><span class="n">saveFileName</span><span class="p">.</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&#34;:&#34;</span><span class="p">)</span> <span class="p">&lt;</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span> <span class="c1">//被点了取消
</span><span class="c1"></span>       <span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">Application</span> <span class="n">xlApp</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">Application</span><span class="p">();</span>
       <span class="k">if</span> <span class="p">(</span><span class="n">xlApp</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
       <span class="p">{</span>
           <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;无法创建Excel对象，可能您的机子未安装Excel&#34;</span><span class="p">);</span>
           <span class="k">return</span><span class="p">;</span>
       <span class="p">}</span>
       <span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">Workbooks</span> <span class="n">workbooks</span> <span class="p">=</span> <span class="n">xlApp</span><span class="p">.</span><span class="n">Workbooks</span><span class="p">;</span>
       <span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">Workbook</span> <span class="n">workbook</span> <span class="p">=</span> <span class="n">workbooks</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">XlWBATemplate</span><span class="p">.</span><span class="n">xlWBATWorksheet</span><span class="p">);</span>
       <span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">Worksheet</span> <span class="n">worksheet</span> <span class="p">=</span> <span class="p">(</span><span class="n">Microsoft</span><span class="p">.</span><span class="n">Office</span><span class="p">.</span><span class="n">Interop</span><span class="p">.</span><span class="n">Excel</span><span class="p">.</span><span class="n">Worksheet</span><span class="p">)</span><span class="n">workbook</span><span class="p">.</span><span class="n">Worksheets</span><span class="p">[</span><span class="m">1</span><span class="p">];</span><span class="c1">//取得sheet1
</span><span class="c1"></span>       <span class="c1">//写入标题
</span><span class="c1"></span>       <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">myDGV</span><span class="p">.</span><span class="n">ColumnCount</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
       <span class="p">{</span>
           <span class="n">worksheet</span><span class="p">.</span><span class="n">Cells</span><span class="p">[</span><span class="m">1</span><span class="p">,</span> <span class="n">i</span> <span class="p">+</span> <span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">myDGV</span><span class="p">.</span><span class="n">Columns</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">HeaderText</span><span class="p">;</span>
       <span class="p">}</span>
       <span class="c1">//写入数值
</span><span class="c1"></span>       <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">r</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">r</span> <span class="p">&lt;</span> <span class="n">myDGV</span><span class="p">.</span><span class="n">Rows</span><span class="p">.</span><span class="n">Count</span><span class="p">;</span> <span class="n">r</span><span class="p">++)</span>
       <span class="p">{</span>
           <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">myDGV</span><span class="p">.</span><span class="n">ColumnCount</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
           <span class="p">{</span>
               <span class="n">worksheet</span><span class="p">.</span><span class="n">Cells</span><span class="p">[</span><span class="n">r</span> <span class="p">+</span> <span class="m">2</span><span class="p">,</span> <span class="n">i</span> <span class="p">+</span> <span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">myDGV</span><span class="p">.</span><span class="n">Rows</span><span class="p">[</span><span class="n">r</span><span class="p">].</span><span class="n">Cells</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Value</span><span class="p">;</span>
           <span class="p">}</span>
           <span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Forms</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="n">DoEvents</span><span class="p">();</span>
       <span class="p">}</span>
       <span class="n">worksheet</span><span class="p">.</span><span class="n">Columns</span><span class="p">.</span><span class="n">EntireColumn</span><span class="p">.</span><span class="n">AutoFit</span><span class="p">();</span><span class="c1">//列宽自适应
</span><span class="c1"></span>       <span class="k">if</span> <span class="p">(</span><span class="n">saveFileName</span> <span class="p">!=</span> <span class="s">&#34;&#34;</span><span class="p">)</span>
       <span class="p">{</span>
           <span class="k">try</span>
           <span class="p">{</span>
               <span class="n">workbook</span><span class="p">.</span><span class="n">Saved</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
               <span class="n">workbook</span><span class="p">.</span><span class="n">SaveCopyAs</span><span class="p">(</span><span class="n">saveFileName</span><span class="p">);</span>
           <span class="p">}</span>
           <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
           <span class="p">{</span>
               <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;导出文件时出错,文件可能正被打开！\n&#34;</span> <span class="p">+</span> <span class="n">ex</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
           <span class="p">}</span>
       <span class="p">}</span>
       <span class="n">xlApp</span><span class="p">.</span><span class="n">Quit</span><span class="p">();</span>
       <span class="n">GC</span><span class="p">.</span><span class="n">Collect</span><span class="p">();</span> <span class="c1">//强行销毁
</span><span class="c1"></span>       <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;文件： &#34;</span> <span class="p">+</span> <span class="n">fileName</span> <span class="p">+</span> <span class="s">&#34;.xls 保存成功&#34;</span><span class="p">,</span> <span class="s">&#34;信息提示&#34;</span><span class="p">,</span> <span class="n">MessageBoxButtons</span><span class="p">.</span><span class="n">OK</span><span class="p">,</span> <span class="n">MessageBoxIcon</span><span class="p">.</span><span class="n">Information</span><span class="p">);</span>
   <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="点击按钮调用">点击按钮调用</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="k">private</span> <span class="k">void</span> <span class="n">button1_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">string</span> <span class="n">a</span> <span class="p">=</span> <span class="s">&#34;D:&#34;</span> <span class="p">+</span> <span class="s">&#34;\\KKHMD.xls&#34;</span><span class="p">;</span>
    <span class="n">ExportExcels</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">dataGridView1</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>C# 连SqlServer数据库</title>
    <link>https://www.bysec.cn/20160301/</link>
    <pubDate>Tue, 01 Mar 2016 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20160301/</guid>
    <description><![CDATA[<h2 id="环境">环境</h2>
<p>VS2010 + SqlServer 2008</p>
<p>首先，按照面向对象的程序设计思想，设计一个数据库操作工具类MyTool.cs，该类中封装了关于数据库连接和操作的方法，各个功能模块在需进行数据库操作时只需调用相应的函数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="c1">//引入的命名空间
</span><span class="c1"></span><span class="k">using</span> <span class="nn">System.Data.SqlClient</span><span class="p">;</span> <span class="c1">//用于SQL Sever数据访问的命名空间
</span><span class="c1"></span><span class="k">using</span> <span class="nn">System.Data</span><span class="p">;</span>               <span class="c1">//DataSet类的命名空间
</span><span class="c1"></span><span class="k">using</span> <span class="nn">System.Windows.Forms</span><span class="p">;</span>  <span class="c1">//DataGridView控件类的命名空间
</span><span class="c1"></span>

<span class="c1">//执行指定的SQL命令语句(insert,delete,update等),并返回命令所影响的行数
</span><span class="c1"></span><span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">executeCommand</span><span class="p">(</span><span class="kt">string</span> <span class="n">sqlStr</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">SqlConnection</span> <span class="n">sqlConnection1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="s">&#34;server=dell-PC;database=11071312HotelSys;uid=sa;pwd=xiaoyi9421&#34;</span><span class="p">);</span><span class="c1">//创建数据库连接(字符串中是我个人的数据库信息)
</span><span class="c1"></span>    <span class="n">sqlConnection1</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>      <span class="c1">//打开数据库连接
</span><span class="c1"></span>    <span class="n">SqlCommand</span> <span class="n">sqlCommand1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">,</span> <span class="n">sqlConnection1</span><span class="p">);</span>  <span class="c1">//执行SQL命令
</span><span class="c1"></span>    <span class="kt">int</span> <span class="n">Succnum</span> <span class="p">=</span> <span class="n">sqlCommand1</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
    <span class="k">return</span> <span class="n">Succnum</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">//查询(select)指定的数据记录（多行多列）,并填充到数据控件DataGridView中
</span><span class="c1"></span><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">queryDataToGrid</span><span class="p">(</span><span class="kt">string</span> <span class="n">sqlStr</span><span class="p">,</span> <span class="n">DataGridView</span> <span class="n">dataGridView1</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">SqlConnection</span> <span class="n">sqlConnection1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="s">&#34;server=dell-PC;database=11071312HotelSys;uid=sa;pwd=xiaoyi9421&#34;</span><span class="p">);</span><span class="c1">//创建数据库连接
</span><span class="c1"></span>    <span class="n">SqlDataAdapter</span> <span class="n">sqlDataAdapter1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">,</span> <span class="n">sqlConnection1</span><span class="p">);</span><span class="c1">//利用已创建好的sqlConnection1,创建数据适配器sqlDataAdapter1
</span><span class="c1"></span>    <span class="n">DataSet</span> <span class="n">dataSet1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DataSet</span><span class="p">();</span>  <span class="c1">//创建数据集对象
</span><span class="c1"></span>    <span class="n">sqlDataAdapter1</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">dataSet1</span><span class="p">);</span>    <span class="c1">//执行查询,查询的结果存放在数据集里
</span><span class="c1"></span>    <span class="n">dataGridView1</span><span class="p">.</span><span class="n">DataSource</span> <span class="p">=</span> <span class="n">dataSet1</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">];</span> <span class="c1">//把数据集中的查询结果绑定到dataGridView1中
</span><span class="c1"></span><span class="p">}</span>

<span class="c1">//查询(select)指定的数据（单个数据,假设为string类型）,并返回
</span><span class="c1"></span><span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">queryData</span><span class="p">(</span><span class="kt">string</span> <span class="n">sqlStr</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">SqlConnection</span> <span class="n">sqlConnection1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="s">&#34;server=dell-PC;database=11071312HotelSys;uid=sa;pwd=xiaoyi9421&#34;</span><span class="p">);</span><span class="c1">//创建数据库连接
</span><span class="c1"></span>    <span class="n">SqlDataAdapter</span> <span class="n">sqlDataAdapter1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlDataAdapter</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">,</span> <span class="n">sqlConnection1</span><span class="p">);</span><span class="c1">//利用已创建好的sqlConnection1,创建数据适配器sqlDataAdapter1
</span><span class="c1"></span>    <span class="n">DataSet</span> <span class="n">dataSet1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">DataSet</span><span class="p">();</span>  <span class="c1">//创建数据集对象
</span><span class="c1"></span>    <span class="n">sqlDataAdapter1</span><span class="p">.</span><span class="n">Fill</span><span class="p">(</span><span class="n">dataSet1</span><span class="p">);</span>    <span class="c1">//执行查询,查询的结果存放在数据集里
</span><span class="c1"></span>    <span class="k">return</span> <span class="n">dataSet1</span><span class="p">.</span><span class="n">Tables</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Rows</span><span class="p">[</span><span class="m">0</span><span class="p">][</span><span class="s">&#34;列名&#34;</span><span class="p">].</span><span class="n">ToString</span><span class="p">();</span> <span class="c1">//把查询结果的第一行指定列下的数据以string类型返回
</span><span class="c1"></span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>当在各个功能模块中需要进行数据库操作时，只需指定要执行的SQL语句，调用一下数据库工具类中的方法即可实现，下面给了一些基本的的SQL操作(单表)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-CSharp" data-lang="CSharp"><span class="c1">//增
</span><span class="c1"></span><span class="n">sqlStr</span> <span class="p">=</span> <span class="s">&#34;insert into 表名( 列名1 , 列名2 )values( 插入值1 , 插入值2 )&#34;</span><span class="p">;</span>
<span class="c1">//执行指定的SQL命令语句,并返回命令所影响的行数
</span><span class="c1"></span><span class="kt">int</span> <span class="n">Succnum</span> <span class="p">=</span> <span class="n">MyTool</span><span class="p">.</span><span class="n">executeCommand</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">);</span> 
<span class="k">if</span> <span class="p">(</span><span class="n">Succnum</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;录入成功&#34;</span><span class="p">);</span>

<span class="c1">//删
</span><span class="c1"></span><span class="n">sqlStr</span> <span class="p">=</span> <span class="s">&#34;delete from 表名 where 删除条件&#34;</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">Succnum</span> <span class="p">=</span> <span class="n">MyTool</span><span class="p">.</span><span class="n">executeCommand</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">);</span> 
<span class="k">if</span> <span class="p">(</span><span class="n">Succnum</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;删除成功&#34;</span><span class="p">);</span>

<span class="c1">//改
</span><span class="c1"></span><span class="n">sqlStr</span> <span class="p">=</span> <span class="s">&#34;update 表名 set 列名1 = 更新值1 , 列名2 = 更新值2&#34;</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">Succnum</span> <span class="p">=</span> <span class="n">MyTool</span><span class="p">.</span><span class="n">executeCommand</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">);</span> 
<span class="k">if</span> <span class="p">(</span><span class="n">Succnum</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span> <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;更新成功&#34;</span><span class="p">);</span>

<span class="c1">//查一组数据
</span><span class="c1"></span><span class="n">sqlStr</span> <span class="p">=</span> <span class="s">&#34;select 列名1 , 列名2 from 表名 where 查询表达式&#34;</span><span class="p">;</span>
<span class="n">MyTool</span><span class="p">.</span><span class="n">queryDataToGrid</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">,</span> <span class="n">dataGridView1</span><span class="p">);</span><span class="c1">//填充到数据控件DataGridView中
</span><span class="c1"></span>
<span class="c1">//查单个数据
</span><span class="c1"></span><span class="n">sqlStr</span> <span class="p">=</span> <span class="s">&#34;select 列名 from 表名 where 查询表达式&#34;</span><span class="p">;</span>
<span class="n">textBox1</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">MyTool</span><span class="p">.</span><span class="n">queryData</span><span class="p">(</span><span class="n">sqlStr</span><span class="p">);</span> <span class="c1">//填充到文本框textBox1中
</span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
