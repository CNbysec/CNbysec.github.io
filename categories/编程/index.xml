<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>编程 - 分类 - bysec</title>
        <link>https://www.bysec.cn/categories/%E7%BC%96%E7%A8%8B/</link>
        <description>编程 - 分类 - bysec</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>CNbysec@foxmail.com (bysec)</managingEditor>
            <webMaster>CNbysec@foxmail.com (bysec)</webMaster><lastBuildDate>Fri, 19 Nov 2021 19:40:11 &#43;0800</lastBuildDate><atom:link href="https://www.bysec.cn/categories/%E7%BC%96%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>Python注册热键</title>
    <link>https://www.bysec.cn/python%E6%B3%A8%E5%86%8C%E7%83%AD%E9%94%AE/</link>
    <pubDate>Fri, 19 Nov 2021 19:40:11 &#43;0800</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/python%E6%B3%A8%E5%86%8C%E7%83%AD%E9%94%AE/</guid>
    <description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python3</span>
<span class="c1"># _*_ coding: utf-8 _*_</span>
<span class="kn">import</span> <span class="nn">win32con</span>
<span class="kn">import</span> <span class="nn">ctypes</span>
<span class="kn">import</span> <span class="nn">ctypes.wintypes</span>
<span class="kn">from</span> <span class="nn">threading</span> <span class="kn">import</span> <span class="n">Thread</span><span class="p">,</span> <span class="n">Timer</span><span class="p">,</span> <span class="n">activeCount</span><span class="p">,</span> <span class="nb">enumerate</span>
<span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>
<span class="n">h_ids</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">)]</span>  <span class="c1"># 创建两个热键序列</span>
<span class="n">h_keys</span> <span class="o">=</span> <span class="p">{</span><span class="n">i</span><span class="p">:</span> <span class="kc">False</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">h_ids</span><span class="p">}</span>  <span class="c1"># 初始化所有热键序列的标志符为False</span>
<span class="n">h_dict</span> <span class="o">=</span> <span class="p">{}</span>  <span class="c1"># 初始化一个空的字典，记录id与func</span>
 
 
<span class="k">class</span> <span class="nc">Hotkey</span><span class="p">(</span><span class="n">Thread</span><span class="p">):</span>  <span class="c1"># 创建一个Thread的扩展类</span>
    <span class="n">user32</span> <span class="o">=</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">windll</span><span class="o">.</span><span class="n">user32</span>  <span class="c1"># 加载user32.dll</span>
    <span class="c1"># global h_ids, h_keys,h_dict</span>
 
    <span class="k">def</span> <span class="nf">regiskey</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">hwnd</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">flagid</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">fnkey</span><span class="o">=</span><span class="n">win32con</span><span class="o">.</span><span class="n">MOD_ALT</span><span class="p">,</span> <span class="n">vkey</span><span class="o">=</span><span class="n">win32con</span><span class="o">.</span><span class="n">VK_F9</span><span class="p">):</span>  <span class="c1"># 注册热键，默认一个alt+F9</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">user32</span><span class="o">.</span><span class="n">RegisterHotKey</span><span class="p">(</span><span class="n">hwnd</span><span class="p">,</span> <span class="n">flagid</span><span class="p">,</span> <span class="n">fnkey</span><span class="p">,</span> <span class="n">vkey</span><span class="p">)</span>
 
    <span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">func</span><span class="p">):</span>
        <span class="n">h_dict</span><span class="p">[</span><span class="nb">id</span><span class="p">]</span> <span class="o">=</span> <span class="n">func</span>  <span class="c1"># 这个id对应这个func，没有就是新增，有就是修改</span>
 
        <span class="k">def</span> <span class="nf">inner</span><span class="p">():</span>
            <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">h_dict</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;总的热键池:</span><span class="si">{</span><span class="n">h_ids</span><span class="si">}</span><span class="s1">,当前热键序号:</span><span class="si">{</span><span class="n">key</span><span class="si">}</span><span class="s1">, 当前热键功能:</span><span class="si">{</span><span class="n">value</span><span class="si">}</span><span class="s1">，当前热键状态:</span><span class="si">{</span><span class="n">h_keys</span><span class="p">[</span><span class="n">h_ids</span><span class="p">[</span><span class="n">key</span><span class="p">]]</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
            <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
                <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">h_dict</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                    <span class="k">if</span> <span class="n">h_keys</span><span class="p">[</span><span class="n">h_ids</span><span class="p">[</span><span class="n">key</span><span class="p">]]:</span>
                        <span class="n">thread_it</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>  <span class="c1"># 另外开线程执行value</span>
                        <span class="n">h_keys</span><span class="p">[</span><span class="n">h_ids</span><span class="p">[</span><span class="n">key</span><span class="p">]]</span> <span class="o">=</span> <span class="kc">False</span>
        <span class="k">return</span> <span class="n">inner</span>
 
    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># print(self.user32)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">regiskey</span><span class="p">(</span><span class="kc">None</span><span class="p">,</span><span class="n">h_ids</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">win32con</span><span class="o">.</span><span class="n">MOD_ALT</span><span class="p">,</span><span class="n">win32con</span><span class="o">.</span><span class="n">VK_F9</span><span class="p">):</span>   <span class="c1"># 注册快捷键alt+F9并判断是否成功，该热键用于执行一次需要执行的内容。</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;热键注册失败！ id</span><span class="si">{</span><span class="n">h_ids</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>  <span class="c1"># 返回一个错误信息</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">regiskey</span><span class="p">(</span><span class="kc">None</span><span class="p">,</span><span class="n">h_ids</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="n">win32con</span><span class="o">.</span><span class="n">VK_F10</span><span class="p">):</span>   <span class="c1"># 注册快捷键F10并判断是否成功，该热键用于结束程序，且最好这么结束，否则影响下一次注册热键。</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;热键注册失败！ id</span><span class="si">{</span><span class="n">h_ids</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
 
        <span class="c1"># 以下为检测热键是否被按下，并在最后释放快捷键</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">msg</span> <span class="o">=</span> <span class="n">ctypes</span><span class="o">.</span><span class="n">wintypes</span><span class="o">.</span><span class="n">MSG</span><span class="p">()</span>
            <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">user32</span><span class="o">.</span><span class="n">GetMessageA</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">byref</span><span class="p">(</span><span class="n">msg</span><span class="p">),</span> <span class="kc">None</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">msg</span><span class="o">.</span><span class="n">message</span> <span class="o">==</span> <span class="n">win32con</span><span class="o">.</span><span class="n">WM_HOTKEY</span><span class="p">:</span>
                        <span class="k">if</span> <span class="n">msg</span><span class="o">.</span><span class="n">wParam</span> <span class="ow">in</span> <span class="n">h_ids</span><span class="p">:</span>
                            <span class="n">h_keys</span><span class="p">[</span><span class="n">msg</span><span class="o">.</span><span class="n">wParam</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">user32</span><span class="o">.</span><span class="n">TranslateMessage</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">byref</span><span class="p">(</span><span class="n">msg</span><span class="p">))</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">user32</span><span class="o">.</span><span class="n">DispatchMessageA</span><span class="p">(</span><span class="n">ctypes</span><span class="o">.</span><span class="n">byref</span><span class="p">(</span><span class="n">msg</span><span class="p">))</span>
        <span class="k">finally</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">h_ids</span><span class="p">:</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">user32</span><span class="o">.</span><span class="n">UnregisterHotKey</span><span class="p">(</span><span class="kc">None</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
                <span class="c1"># 必须得释放热键，否则下次就会注册失败，所以当程序异常退出，没有释放热键，</span>
                <span class="c1"># 那么下次很可能就没办法注册成功了，这时可以换一个热键测试</span>
 
 
<span class="k">def</span> <span class="nf">thread_it</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">func</span><span class="p">,</span> <span class="n">args</span><span class="o">=</span><span class="n">args</span><span class="p">)</span>
    <span class="n">t</span><span class="o">.</span><span class="n">setDaemon</span><span class="p">(</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">t</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
 
 
<span class="k">def</span> <span class="nf">settimeout</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">sec</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">inner</span><span class="p">():</span>
        <span class="n">func</span><span class="p">()</span>
        <span class="n">Timer</span><span class="p">(</span><span class="n">sec</span><span class="p">,</span> <span class="n">inner</span><span class="p">)</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
 
    <span class="n">thread_it</span><span class="p">(</span><span class="n">inner</span><span class="p">)</span>
 
 
<span class="k">def</span> <span class="nf">setinterval</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">sec</span><span class="p">,</span> <span class="n">tmrname</span><span class="p">,</span> <span class="n">flag</span><span class="o">=</span><span class="kc">True</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">timer_dict</span>
    <span class="n">timer_dict</span><span class="p">[</span><span class="n">tmrname</span><span class="p">]</span> <span class="o">=</span> <span class="n">flag</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;已设置tqtimer启用状态为:</span><span class="si">{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">flag</span><span class="p">))</span>
 
    <span class="k">def</span> <span class="nf">inner</span><span class="p">():</span>
        <span class="k">global</span> <span class="n">timer_dict</span>
        <span class="k">if</span> <span class="n">timer_dict</span><span class="p">[</span><span class="n">tmrname</span><span class="p">]:</span>
            <span class="n">func</span><span class="p">()</span>
            <span class="n">Timer</span><span class="p">(</span><span class="n">sec</span><span class="p">,</span> <span class="n">inner</span><span class="p">)</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
 
    <span class="n">thread_it</span><span class="p">(</span><span class="n">inner</span><span class="p">)</span>
 
 
<span class="k">def</span> <span class="nf">clearinterval</span><span class="p">(</span><span class="n">timername</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">timer_dict</span>
    <span class="n">timer_dict</span><span class="p">[</span><span class="n">timername</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>
    <span class="n">flag</span> <span class="o">=</span> <span class="n">timer_dict</span><span class="p">[</span><span class="n">timername</span><span class="p">]</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;已设置tqtimer启用状态为:</span><span class="si">{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">flag</span><span class="p">))</span>
 
 
<span class="k">def</span> <span class="nf">test_start</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;按下了开始键...the programe is running&#34;</span><span class="p">)</span>
 
 
<span class="k">def</span> <span class="nf">test_stop</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;按下了停止键...the programe is stopped&#34;</span><span class="p">)</span>
 
 
<span class="k">def</span> <span class="nf">run_ok</span><span class="p">():</span>
    <span class="n">hotkey</span> <span class="o">=</span> <span class="n">Hotkey</span><span class="p">()</span>
    <span class="n">hotkey</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
    <span class="n">fn</span> <span class="o">=</span> <span class="n">hotkey</span><span class="o">.</span><span class="n">callback</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">test_start</span><span class="p">)</span>
    <span class="n">fn</span> <span class="o">=</span> <span class="n">hotkey</span><span class="o">.</span><span class="n">callback</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">test_stop</span><span class="p">)</span>
    <span class="n">thread_it</span><span class="p">(</span><span class="n">fn</span><span class="p">)</span>
    <span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
    <span class="n">count</span> <span class="o">=</span> <span class="n">activeCount</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;当前总线程数量:</span><span class="si">{</span><span class="n">count</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;当前线程列表:&#39;</span><span class="p">,</span> <span class="nb">enumerate</span><span class="p">())</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;热键注册初始化完毕，尝试按组合键alt+F9 或者单键F10看效果&#39;</span><span class="p">)</span>
    <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
        <span class="k">pass</span>
 
 
<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">run_ok</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python中的句柄操作</title>
    <link>https://www.bysec.cn/python%E4%B8%AD%E7%9A%84%E5%8F%A5%E6%9F%84%E6%93%8D%E4%BD%9C/</link>
    <pubDate>Fri, 19 Nov 2021 18:41:25 &#43;0800</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/python%E4%B8%AD%E7%9A%84%E5%8F%A5%E6%9F%84%E6%93%8D%E4%BD%9C/</guid>
    <description><![CDATA[<h1 id="遍历windows下-所有句柄及窗口名称">遍历windows下 所有句柄及窗口名称</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">win32gui</span>
<span class="n">hwnd_title</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
<span class="k">def</span> <span class="nf">get_all_hwnd</span><span class="p">(</span><span class="n">hwnd</span><span class="p">,</span><span class="n">mouse</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">IsWindow</span><span class="p">(</span><span class="n">hwnd</span><span class="p">)</span> <span class="ow">and</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">IsWindowEnabled</span><span class="p">(</span><span class="n">hwnd</span><span class="p">)</span> <span class="ow">and</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">IsWindowVisible</span><span class="p">(</span><span class="n">hwnd</span><span class="p">):</span>
        <span class="n">hwnd_title</span><span class="o">.</span><span class="n">update</span><span class="p">({</span><span class="n">hwnd</span><span class="p">:</span><span class="n">win32gui</span><span class="o">.</span><span class="n">GetWindowText</span><span class="p">(</span><span class="n">hwnd</span><span class="p">)})</span>
<span class="n">win32gui</span><span class="o">.</span><span class="n">EnumWindows</span><span class="p">(</span><span class="n">get_all_hwnd</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
 
<span class="k">for</span> <span class="n">h</span><span class="p">,</span><span class="n">t</span> <span class="ow">in</span> <span class="n">hwnd_title</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">t</span> <span class="ow">is</span> <span class="ow">not</span> <span class="s2">&#34;&#34;</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">h</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h1 id="通过窗口标题获取句柄">通过窗口标题获取句柄</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">win32gui</span>
 
<span class="n">hld</span> <span class="o">=</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">FindWindow</span><span class="p">(</span><span class="kc">None</span><span class="p">,</span><span class="sa">u</span><span class="s2">&#34;Adobe Acrobat&#34;</span><span class="p">)</span> <span class="c1">#返回窗口标题为Adobe Acrobat的句柄 </span>
</code></pre></td></tr></table>
</div>
</div><h1 id="通过父窗口句柄获取子句柄">通过父窗口句柄获取子句柄</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#parent为父窗口句柄id</span>
<span class="k">def</span> <span class="nf">get_child_windows</span><span class="p">(</span><span class="n">parent</span><span class="p">):</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">parent</span><span class="p">:</span>
        <span class="k">return</span>
    <span class="n">hwndChildList</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">win32gui</span><span class="o">.</span><span class="n">EnumChildWindows</span><span class="p">(</span><span class="n">parent</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">hwnd</span><span class="p">,</span> <span class="n">param</span><span class="p">:</span> <span class="n">param</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">hwnd</span><span class="p">),</span> <span class="n">hwndChildList</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">hwndChildList</span> 
</code></pre></td></tr></table>
</div>
</div><h1 id="根据句柄获取句柄标题和类名">根据句柄获取句柄标题和类名</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">win32gui</span>
<span class="c1">#获取标题</span>
<span class="n">title</span> <span class="o">=</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">GetWindowText</span><span class="p">(</span><span class="n">jbid</span><span class="p">)</span>  
<span class="c1">#获取类名 </span>
<span class="n">clsname</span> <span class="o">=</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">GetClassName</span><span class="p">(</span><span class="n">jbid</span><span class="p">)</span>  
</code></pre></td></tr></table>
</div>
</div><h1 id="根据句柄获取窗口位置">根据句柄获取窗口位置</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">win32gui</span>
<span class="n">left</span><span class="p">,</span> <span class="n">top</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">bottom</span> <span class="o">=</span> <span class="n">win32gui</span><span class="o">.</span><span class="n">GetWindowRect</span><span class="p">(</span><span class="n">jbid</span><span class="p">)</span>
<span class="c1">#分别为左、上、右、下的窗口位置 </span>
</code></pre></td></tr></table>
</div>
</div><h1 id="根据句柄进行点击操作">根据句柄进行点击操作</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">win32api</span><span class="o">,</span><span class="nn">win32con</span>
 
<span class="n">win32api</span><span class="o">.</span><span class="n">SetCursorPos</span><span class="p">([</span><span class="n">横坐标</span><span class="p">,</span> <span class="n">纵坐标</span><span class="p">])</span>
<span class="c1">#根据横纵坐标定位光标</span>
<span class="n">win32api</span><span class="o">.</span><span class="n">mouse_event</span><span class="p">(</span><span class="n">win32con</span><span class="o">.</span><span class="n">MOUSEEVENTF_LEFTUP</span> <span class="o">|</span> <span class="n">win32con</span><span class="o">.</span><span class="n">MOUSEEVENTF_LEFTDOWN</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="c1">#给光标定位的位置进行单击操作（若想进行双击操作，可以延时几毫秒再点击一次）</span>
<span class="n">win32api</span><span class="o">.</span><span class="n">mouse_event</span><span class="p">(</span><span class="n">win32con</span><span class="o">.</span><span class="n">MOUSEEVENTF_RIGHTUP</span> <span class="o">|</span> <span class="n">win32con</span><span class="o">.</span><span class="n">MOUSEEVENTF_RIGHTDOWN</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="c1">#给光标定位的位置进行右击操作 </span>
</code></pre></td></tr></table>
</div>
</div><h1 id="根据句柄将窗口放在最前">根据句柄将窗口放在最前</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">win32gui</span><span class="o">.</span><span class="n">SetForegroundWindow</span><span class="p">(</span><span class="n">jbid</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
