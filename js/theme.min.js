(()=>{var V=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var z=V((ue,P)=>{P.exports=window.Tablesort});var K=z();function W(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function A(e,n){e=e||[];for(let t=0;t<e.length;t++)n(e[t])}function G(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function J(){return window.matchMedia("only screen and (max-width: 680px)").matches}function O(e,n,t,o){Array.isArray(n)||(n=[n]),e.classList.add("animate__animated",...n);let i=()=>{e.classList.remove("animate__animated",...n),e.removeEventListener("animationend",i),typeof o=="function"&&o()};t||e.addEventListener("animationend",i)}function X(){Array.from(document.querySelectorAll("[data-svg-src]")).forEach(e=>{fetch(e.getAttribute("data-svg-src")).then(n=>n.text()).then(n=>{let t=document.createElement("div");t.insertAdjacentHTML("afterbegin",n);let o=t.firstChild;o.setAttribute("data-svg-src",e.getAttribute("data-svg-src")),o.classList.add("icon");let i=o.getElementsByTagName("title");i.length&&o.removeChild(i[0]),e.parentElement.replaceChild(o,e)})})}function Y(){let e=document.getElementById("menu-toggle-mobile"),n=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),n.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),n.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function $(e){document.body.setAttribute("theme",e),document.documentElement.style.setProperty("color-scheme",e==="light"?"light":"dark"),window.localStorage&&localStorage.setItem("theme",e),window.isDark=e!=="light"}function Z(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let n=document.body.getAttribute("theme");$(n==="dark"?"black":n==="black"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function Q(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let n=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===n){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?$(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?$("dark"):$("light");for(let o of window.switchThemeEventSet)o()})})}function q(){let e=window.config.search,n=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||n&&window._searchMobileOnce||!n&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,o=e.snippetLength?e.snippetLength:50,i=e.highlightTag?e.highlightTag:"em",s=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,h=e.findAllMatches?e.findAllMatches:!1,l=e.location?e.location:0,C=e.threshold?e.threshold:.3,D=e.distance?e.distance:100,S=e.ignoreLocation?e.ignoreLocation:!1,N=e.useExtendedSearch?e.useExtendedSearch:!1,R=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,w=n?"mobile":"desktop",T=document.getElementById(`header-${w}`),d=document.getElementById(`search-input-${w}`),j=document.getElementById(`search-toggle-${w}`),M=document.getElementById(`search-loading-${w}`),v=document.getElementById(`search-clear-${w}`);n?(window._searchMobileOnce=!0,d.addEventListener("focus",()=>{document.body.classList.add("blur"),T.classList.add("open")}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{T.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),M.style.display="none",v.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),v.addEventListener("click",()=>{v.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{T.classList.remove("open"),M.style.display="none",v.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,j.addEventListener("click",()=>{document.body.classList.add("blur"),T.classList.add("open"),d.focus()}),v.addEventListener("click",()=>{v.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",r=>{r.ctrlKey&&r.code==="KeyK"&&(r.preventDefault(),j.click())}),window._searchDesktopOnClickMask=()=>{T.classList.remove("open"),M.style.display="none",v.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),d.addEventListener("input",()=>{d.value===""?v.style.display="none":v.style.display="inline"});let H=()=>{let r=autocomplete(`#search-input-${w}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${w}`,clearOnSelected:!0,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(y,I)=>{M.style.display="inline",v.style.display="none";let g=b=>{M.style.display="none",v.style.display="inline",I(b)};if(e.type==="lunr"){let b=()=>{lunr.queryHandler&&(y=lunr.queryHandler(y));let c={};return window._index.search(y).forEach(({ref:u,matchData:{metadata:_}})=>{let B=window._indexData[u],{uri:E,title:L,content:m}=B;if(c[E])return;let x=0;Object.values(_).forEach(({content:k})=>{if(k){let f=k.position[0][0];(f<x||x===0)&&(x=f)}}),x-=o/5,x>0?(x+=m.substr(x,20).lastIndexOf(" ")+1,m="..."+m.substr(x,o)):m=m.substr(0,o),Object.keys(_).forEach(k=>{L=L.replace(new RegExp(`(${k})`,"gi"),`<${i}>$1</${i}>`),m=m.replace(new RegExp(`(${k})`,"gi"),`<${i}>$1</${i}>`)}),c[E]={uri:E,title:L,date:B.date,context:m}}),Object.values(c).slice(0,t)};window._index?g(b()):fetch(e.lunrIndexURL).then(c=>c.json()).then(c=>{let u={};window._index=lunr(function(){e.lunrLanguageCode&&this.use(lunr[e.lunrLanguageCode]),this.ref("objectID"),this.field("title",{boost:50}),this.field("tags",{boost:20}),this.field("categories",{boost:20}),this.field("content",{boost:10}),this.metadataWhitelist=["position"],c.forEach(_=>{u[_.objectID]=_,this.add(_)})}),window._indexData=u,g(b())}).catch(c=>{console.error(c),g([])})}else if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(y,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${o}`],highlightPreTag:`<${i}>`,highlightPostTag:`</${i}>`}).then(({hits:b})=>{let c={};b.forEach(({uri:u,date:_,_highlightResult:{title:B},_snippetResult:{content:E}})=>{c[u]&&c[u].context.length>E.value||(c[u]={uri:u,title:B.value,date:_,context:E.value})}),g(Object.values(c).slice(0,t))}).catch(b=>{console.error(b),g([])});else if(e.type==="fuse"){let b=()=>{let c={};return window._index.search(y).forEach(({item:u,refIndex:_,matches:B})=>{let E=u.title,L=u.content;B.forEach(({indices:m,value:x,key:k})=>{if(k==="content"){let f=0;for(let p=0;p<m.length;p++){let F=L.substring(m[p][0]+f,m[p][1]+1+f),U=`<${i}>`+F+`</${i}>`;L=L.substring(0,m[p][0]+f)+U+L.substring(m[p][1]+1+f,L.length),f+=i.length*2+5}}else if(k==="title"){let f=0;for(let p=0;p<m.length;p++){let F=E.substring(m[p][0]+f,m[p][1]+1+f),U=`<${i}>`+F+`</${i}>`;E=E.substring(0,m[p][0]+f)+U+E.substring(m[p][1]+1+f,L.length),f+=i.length*2+5}}}),c[u.uri]={uri:u.uri,title:E,date:u.date,context:L}}),Object.values(c).slice(0,t)};window._index?g(b()):fetch(e.fuseIndexURL).then(c=>c.json()).then(c=>{let u={isCaseSensitive:s,findAllMatches:h,minMatchCharLength:a,location:l,threshold:C,distance:D,ignoreLocation:S,useExtendedSearch:N,ignoreFieldNorm:R,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(c,u),g(b())}).catch(c=>{console.error(c),g([])})}},templates:{suggestion:({title:y,date:I,context:g})=>`<div><span class="suggestion-title">${y}</span><span class="suggestion-date">${I}</span></div><div class="suggestion-context">${g}</div>`,empty:({query:y})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${W(y)}"</span></div>`,footer:()=>{let{searchType:y,icon:I,href:g}=e.type==="algolia"?{searchType:"algolia",icon:'<i class="fab fa-algolia fa-fw"></i>',href:"https://www.algolia.com/"}:e.type==="lunr"?{searchType:"Lunr.js",icon:"",href:"https://lunrjs.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${g}" rel="noopener noreffer" target="_blank">${I} ${y}</a></div>`}}});r.on("autocomplete:selected",(y,I,g,b)=>{window.location.assign(I.uri)}),n?window._searchMobile=r:window._searchDesktop=r};if(e.lunrSegmentitURL&&!document.getElementById("lunr-segmentit")){let r=document.createElement("script");r.id="lunr-segmentit",r.type="text/javascript",r.src=e.lunrSegmentitURL,r.async=!0,r.readyState?r.onreadystatechange=()=>{(r.readyState==="loaded"||r.readyState==="complete")&&(r.onreadystatechange=null,H())}:r.onload=()=>{H()},document.body.appendChild(r)}else H()}function ee(){A(document.getElementsByClassName("details"),e=>{let n=e.getElementsByClassName("details-summary")[0];n.addEventListener("click",()=>{let t=n.nextElementSibling;e.classList.contains("open")?t.style.maxHeight=null:t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1)})}function te(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function ne(){A(document.querySelectorAll(".highlight > pre.chroma"),e=>{let n=document.createElement("div");n.className=e.className;let t=document.createElement("table");n.appendChild(t);let o=document.createElement("tbody");t.appendChild(o);let i=document.createElement("tr");o.appendChild(i);let s=document.createElement("td");i.appendChild(s),e.parentElement.replaceChild(n,e),s.appendChild(e)}),A(document.querySelectorAll(".highlight > .chroma"),e=>{let n=e.querySelectorAll("pre.chroma > code");if(n.length){let t=n[n.length-1],o=document.createElement("div");o.className="code-header "+t.className.toLowerCase();let i=document.createElement("span");i.classList.add("code-title"),i.insertAdjacentHTML("afterbegin",'<i class="arrow fas fa-chevron-right fa-fw"></i>'),i.addEventListener("click",()=>{let l=e.getElementsByClassName("table-wrapper")[0];e.classList.contains("open")?l.style.maxHeight=null:l.style.maxHeight=l.scrollHeight+"px",e.classList.toggle("open")},!1),o.appendChild(i);let s=document.createElement("span");s.insertAdjacentHTML("afterbegin",'<i class="fas fa-ellipsis-h fa-fw"></i>'),s.classList.add("ellipses"),s.addEventListener("click",()=>{e.classList.add("open")},!1),o.appendChild(s);let a=document.createElement("span");a.insertAdjacentHTML("afterbegin",'<i class="far fa-copy fa-fw"></i>'),a.classList.add("copy");let h=t.innerText;(window.config.code.maxShownLines<0||h.split(`
`).length<window.config.code.maxShownLines+2)&&e.classList.add("open"),window.config.code.copyTitle&&(a.setAttribute("data-clipboard-text",h),a.title=window.config.code.copyTitle,new ClipboardJS(a).on("success",C=>{O(t,"animate__flash"),a.firstElementChild.className="fas fa-check fa-fw",setTimeout(()=>{a.firstElementChild.className="far fa-copy fa-fw"},3e3)}),o.appendChild(a)),e.insertBefore(o,e.firstChild)}})}function oe(){A(document.querySelectorAll(".content table"),e=>{let n=document.createElement("div");n.className="table-wrapper",e.parentElement.replaceChild(n,e),n.appendChild(e),window.config?.table?.sort&&new K(e)})}function ie(){let e=document.getElementById("TableOfContents");if(e===null)return;let n=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||n)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),o=e.querySelectorAll("a:first-child"),i=e.getElementsByTagName("li"),s=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",h=document.getElementById("header-desktop").offsetHeight,l=20+(a?h:0),C=t.offsetTop,D=C-l+(a?0:h);window._tocOnScroll=window._tocOnScroll||(()=>{let N=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,R=N-l+(a?0:h);if(window.newScrollTop<D?(t.style.position="absolute",t.style.top=`${C}px`):window.newScrollTop>R?(t.style.position="absolute",t.style.top=`${N}px`):(t.style.position="fixed",t.style.top=`${l}px`),o.length===0)return;let w=-1,T=l+window.newScrollTop;if(s[s.length-1].offsetTop<T)w=s.length-1;else for(let d=0;d<s.length-1;d++){let j=s[d].offsetTop,M=s[d+1].offsetTop;if(j<=T&&M>T){w=d;break}}if(Array.from(o).forEach(d=>d.classList.remove("active")),Array.from(i).forEach(d=>d.classList.remove("has-active")),w>=0&&w<o.length){o[w].classList.add("active");let d=o[w].parentElement;for(;d!==e;)d.classList.add("has-active"),d=d.parentElement.parentElement}w!==-1&&history.replaceState(history.state,null,o[w].href)}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function se(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],A(document.getElementsByClassName("mapbox"),e=>{let{lng:n,lat:t,zoom:o,lightStyle:i,darkStyle:s,marked:a,navigation:h,geolocate:l,scale:C,fullscreen:D}=window.config.data[e.id],S=new mapboxgl.Map({container:e,center:[n,t],zoom:o,minZoom:.2,style:window.isDark?s:i,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([n,t]).addTo(S),h&&S.addControl(new mapboxgl.NavigationControl,"bottom-right"),l&&S.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),C&&S.addControl(new mapboxgl.ScaleControl),D&&S.addControl(new mapboxgl.FullscreenControl),S.addControl(new MapboxLanguage),window._mapboxArr.push(S)}),window._mapboxOnSwitchTheme=()=>{A(window._mapboxArr,e=>{let n=e.getContainer(),{lightStyle:t,darkStyle:o}=window.config.data[n.id];e.setStyle(window.isDark?o:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ae(){if(window.config.typeit){let e=window.config.typeit,n=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,o=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(i=>{let s=a=>{let h=i[a];if(!document.getElementById(h).hasAttribute("data-typeit-id")){let l=new TypeIt(`#${h}`,{strings:window.config.data[h],speed:n,lifeLike:!0,cursorSpeed:t,cursorChar:o,waitUntilVisible:!0,afterComplete:()=>{if(a===i.length-1){e.duration>=0&&window.setTimeout(()=>{l.destroy()},e.duration);return}l.destroy(),s(a+1)}}).go()}};s(0)})}}function le(){function e(o){let i=document.getElementsByTagName("meta");for(let s=0;s<i.length;s++)if(i[s].getAttribute("name")===o)return i[s]}let n=e("theme-color"),t={light:"#f8f8f8",dark:"#252627",black:"#000000"};window._metaThemeColorOnSwitchTheme=()=>{n.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function ce(){let e=[],n=document.getElementById("view-comments");document.body.getAttribute("header-desktop")==="auto"&&e.push(document.getElementById("header-desktop")),document.body.getAttribute("header-mobile")==="auto"&&e.push(document.getElementById("header-mobile")),document.getElementById("comments")?(n.href="#comments",n.style.display="block"):n.style.display="null";let t=document.getElementById("fixed-buttons"),o=20,i=100;function s(){window.newScrollTop=G();let a=window.newScrollTop-window.oldScrollTop,h=J();A(e,l=>{a>o?(l.classList.remove("animate__fadeInDown"),O(l,["animate__fadeOutUp","animate__faster"],!0)):(a<-o||window.newScrollTop<=20)&&(l.classList.remove("animate__fadeOutUp"),O(l,["animate__fadeInDown","animate__faster"],!0))}),window.newScrollTop>i?h&&a>o?(t.classList.remove("animate__fadeIn"),O(t,["animate__fadeOut","animate__faster"],!0)):(!h||a<-o)&&(t.style.display="block",t.classList.remove("animate__fadeOut"),O(t,["animate__fadeIn","animate__faster"],!0)):(h||(t.classList.remove("animate__fadeIn"),O(t,["animate__fadeOut","animate__faster"],!0)),t.style.display="none");for(let l of window.scrollEventSet)l();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",s,!1)}function de(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();q()},100))},!1)}function re(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function me(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=G(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.switchThemeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),X(),Y(),Z(),Q(),le(),q(),ee(),te(),ne(),oe(),ae(),se(),ie(),ce(),de(),re()}me();})();
//# sourceMappingURL=data:application/json;base64,
