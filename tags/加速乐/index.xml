<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>加速乐 - 标签 - bysec</title>
        <link>http://localhost:1313/tags/%E5%8A%A0%E9%80%9F%E4%B9%90/</link>
        <description>加速乐 - 标签 - bysec</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>bysec@qq.com (bysec)</managingEditor>
            <webMaster>bysec@qq.com (bysec)</webMaster><lastBuildDate>Sun, 06 Oct 2024 20:42:37 &#43;0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%8A%A0%E9%80%9F%E4%B9%90/" rel="self" type="application/rss+xml" /><item>
    <title>小白也能懂逆向分析某网站加速乐Cookie参数流程详解</title>
    <link>http://localhost:1313/%E5%B0%8F%E7%99%BD%E4%B9%9F%E8%83%BD%E6%87%82%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E6%9F%90%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F%E4%B9%90cookie%E5%8F%82%E6%95%B0%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/</link>
    <pubDate>Sun, 06 Oct 2024 20:42:37 &#43;0800</pubDate><author>
        <name>bysec</name>
    </author><guid>http://localhost:1313/%E5%B0%8F%E7%99%BD%E4%B9%9F%E8%83%BD%E6%87%82%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E6%9F%90%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F%E4%B9%90cookie%E5%8F%82%E6%95%B0%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3/</guid>
    <description><![CDATA[<blockquote>
<p><em>转载自： <a href="https://juejin.cn/post/7386485874300977178" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7386485874300977178</a></em></p>
</blockquote>
<h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>前言</h2><p>加速乐作为一种常见的反爬虫技术，在网络上已有大量详尽深入的教程可供参考。然而，对于那些初次接触的人来说，直接面对它可能仍会感到困惑。</p>
<h2 id="声明" class="headerLink">
    <a href="#%e5%a3%b0%e6%98%8e" class="header-mark"></a>声明</h2><blockquote>
<p>本文仅用于学习交流，学习探讨逆向知识，欢迎私信共享学习心得。如有侵权，联系博主删除。请勿商用，否则后果自负。</p>
</blockquote>
<h2 id="什么是加速乐" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%8a%a0%e9%80%9f%e4%b9%90" class="header-mark"></a>什么是加速乐？</h2><p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD000010CdJ93CHwXA.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD000010CdJ93CHwXA.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD000010CdJ93CHwXA.jpg">
        
    </a></p>
<p>加速乐采用了一系列的高级反爬虫技术，包括OB混淆、动态加密算法和多层Cookie获取，以确保整体校验的严密性。关键校验字段位于Cookie中的<code>__jsl_clearance_s</code>。其<strong>验证过程通常涉及三次关键的请求</strong>：</p>
<ol>
<li>
<p><strong>首次请求</strong>：当用户首次尝试访问目标网站时，服务器会返回一个特殊的521状态码，其响应数据通过AAEncode技术进行混淆处理，以初步筛选访问者。</p>
</li>
<li>
<p><strong>二次请求</strong>：紧接着的第二次请求中，如果服务器继续检测到可疑行为，它会再次返回521状态码，但这次响应数据将采用更为复杂的OB混淆，进一步验证访问者的身份。</p>
</li>
<li>
<p><strong>三次请求</strong>：只有在前两次请求成功通过验证后，第三次请求才能成功访问网站，此时服务器将返回正常的状态码200，并提供用户所需的内容。</p>
</li>
</ol>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00001spKf70Onvsc.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00001spKf70Onvsc.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00001spKf70Onvsc.jpg">
        
    </a></p>
<p>通过这一连串精心设计的步骤，加速乐确保了只有合法的访问者能够顺利获取网站数据，从而有效抵御恶意爬虫的侵扰，我们要做的就是模拟这些操作，获取想要的数据。</p>
<h2 id="今日网站" class="headerLink">
    <a href="#%e4%bb%8a%e6%97%a5%e7%bd%91%e7%ab%99" class="header-mark"></a>今日网站</h2><p>目标URL: <code>aHR0cHM6Ly93d3cuY252ZC5vcmcuY24vZmxhdy90eXBlbGlzdD90eXBlSWQ9Mjc=</code></p>
<h2 id="流程分析-浏览器" class="headerLink">
    <a href="#%e6%b5%81%e7%a8%8b%e5%88%86%e6%9e%90-%e6%b5%8f%e8%a7%88%e5%99%a8" class="header-mark"></a>流程分析-浏览器</h2><p>按照常规做法，我们首先进行网络抓包分析。</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00004JfmID1VsZLD.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00004JfmID1VsZLD.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00004JfmID1VsZLD.jpg">
        
    </a></p>
<h3 id="第一次请求" class="headerLink">
    <a href="#%e7%ac%ac%e4%b8%80%e6%ac%a1%e8%af%b7%e6%b1%82" class="header-mark"></a>第一次请求</h3><ul>
<li><code>发送</code>：未携带 Cookie</li>
<li><code>响应</code>：状态码<code>521</code>，Cookie 中的<code>__jsluid_s</code>值和<code>js</code>代码</li>
</ul>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00000K7qZU3ItDc3.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00000K7qZU3ItDc3.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00000K7qZU3ItDc3.jpg">
        
    </a></p>
<h3 id="第二次请求" class="headerLink">
    <a href="#%e7%ac%ac%e4%ba%8c%e6%ac%a1%e8%af%b7%e6%b1%82" class="header-mark"></a>第二次请求</h3><ul>
<li><code>发送</code>：Cookie 携带<code>__jsluid_s</code>和<code>__jsl_clearance_s</code>值</li>
<li><code>响应</code>：状态码<code>521</code>，新的<code>js</code>代码</li>
</ul>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00002oaIvJ2FWXrj.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00002oaIvJ2FWXrj.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00002oaIvJ2FWXrj.jpg">
        
    </a></p>
<h3 id="第三次请求" class="headerLink">
    <a href="#%e7%ac%ac%e4%b8%89%e6%ac%a1%e8%af%b7%e6%b1%82" class="header-mark"></a>第三次请求</h3><ul>
<li><code>发送</code>：Cookie 携带原始<code>__jsluid_s</code>值，新的<code>__jsl_clearance_s</code>值</li>
<li><code>响应</code>：状态码<code>200</code>，正文内容</li>
</ul>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00003CsbsE3mrA5a.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00003CsbsE3mrA5a.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00003CsbsE3mrA5a.jpg">
        
    </a></p>
<blockquote>
<p>观察结果揭示了对同一页面共发起了三次<code>HTTP</code>请求：前两次请求均遭遇了<code>521</code>状态码的响应，而最后一次请求成功收到了<code>200</code>状态码。这种模式正是加速乐反爬虫机制的显著特征。</p>
</blockquote>
<h2 id="流程分析-抓包工具" class="headerLink">
    <a href="#%e6%b5%81%e7%a8%8b%e5%88%86%e6%9e%90-%e6%8a%93%e5%8c%85%e5%b7%a5%e5%85%b7" class="header-mark"></a>流程分析-抓包工具</h2><p>浏览器上我们没能看到具体的响应，我们借助抓包工具试试，这里使用的<code>Fiddler</code>。</p>
<h3 id="第一次请求-1" class="headerLink">
    <a href="#%e7%ac%ac%e4%b8%80%e6%ac%a1%e8%af%b7%e6%b1%82-1" class="header-mark"></a>第一次请求</h3><p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00000bzZ1h0xViso.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00000bzZ1h0xViso.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00000bzZ1h0xViso.jpg">
        
    </a></p>
<h3 id="第二次请求-1" class="headerLink">
    <a href="#%e7%ac%ac%e4%ba%8c%e6%ac%a1%e8%af%b7%e6%b1%82-1" class="header-mark"></a>第二次请求</h3><p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00001MlfbN033sPr.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00001MlfbN033sPr.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00001MlfbN033sPr.jpg">
        
    </a></p>
<h3 id="第三次请求-1" class="headerLink">
    <a href="#%e7%ac%ac%e4%b8%89%e6%ac%a1%e8%af%b7%e6%b1%82-1" class="header-mark"></a>第三次请求</h3><p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00000fEc7o2dk3Gg.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00000fEc7o2dk3Gg.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00000fEc7o2dk3Gg.jpg">
        
    </a></p>
<blockquote>
<p>同样，看到了三次请求的过程，并且向我们展示了具体的响应。</p>
</blockquote>
<h2 id="逆向分析" class="headerLink">
    <a href="#%e9%80%86%e5%90%91%e5%88%86%e6%9e%90" class="header-mark"></a>逆向分析</h2><h3 id="获取第一个__jsl_clearance_s" class="headerLink">
    <a href="#%e8%8e%b7%e5%8f%96%e7%ac%ac%e4%b8%80%e4%b8%aa__jsl_clearance_s" class="header-mark"></a>获取第一个<code>__jsl_clearance_s</code></h3><p>通过<code>Fiddler</code>或使用<code>python</code>模拟请求，得到下面这样一段JS代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;j&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;s&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;l&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;l&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;r&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;s&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">+!+</span><span class="p">[]</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">3</span><span class="o">+</span><span class="mi">4</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">-~</span><span class="kc">false</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="mi">7</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">4</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">6</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">2</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(([</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="mi">0</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">-~</span><span class="mi">1</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">2</span><span class="o">^</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">1</span><span class="o">+</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">/</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="o">+</span><span class="kc">true</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;L&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;w&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;j&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;u&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;T&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;F&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">-~</span><span class="p">{}</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;j&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;j&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">~~</span><span class="s1">&#39;&#39;</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;E&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;t&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">~~</span><span class="kc">false</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;g&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;I&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">-~</span><span class="mi">1</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;J&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;g&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;i&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;K&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">1</span><span class="o">+</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">/</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;N&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;f&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;%&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="mi">1</span><span class="o">+</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;D&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;M&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;x&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;g&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">-~</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">-~</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">((</span><span class="o">+</span><span class="kc">false</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">~~</span><span class="p">{}</span><span class="o">+</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;P&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;t&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;h&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;S&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;m&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;S&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;i&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;t&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;N&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;o&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;S&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;u&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;r&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">);</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="nx">location</span><span class="p">.</span><span class="nx">pathname</span><span class="o">+</span><span class="nx">location</span><span class="p">.</span><span class="nx">search</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>复制到浏览器执行下来看看:</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD000025j1lt05AHCW.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD000025j1lt05AHCW.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD000025j1lt05AHCW.jpg">
        
    </a></p>
<p>得到了<code>__jsl_clearance_s=1719472445.236|-1|Lwj3uTFn1jj0Et0gI2JgiKm6Nf4%3D; Max-age=3600; Path=/; SameSite=None; Secure</code>。</p>
<p>而<code>__jsl_clearance_s</code>正是第二次请求需要带上的Cookie之一。</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00001H0vDS2nqE80.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00001H0vDS2nqE80.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00001H0vDS2nqE80.jpg">
        
    </a></p>
<blockquote>
<p>真的老登。为了使代码难以阅读和分析，还进行了<code>AAEncode</code>加密混淆。</p>
</blockquote>
<h3 id="获取第二个__jsl_clearance_s" class="headerLink">
    <a href="#%e8%8e%b7%e5%8f%96%e7%ac%ac%e4%ba%8c%e4%b8%aa__jsl_clearance_s" class="header-mark"></a>获取第二个<code>__jsl_clearance_s</code></h3><p>使用第一个请求后得到的 Cookies 继续发起第二段请求得到新的 JS 代码：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00000Y8Qgg2tnsDM.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00000Y8Qgg2tnsDM.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00000Y8Qgg2tnsDM.jpg">
        
    </a></p>
<p>代码被压缩了，不是很好看，使用在线 JS 美化（<code>https://spidertools.cn/#/formatJS</code>）后：</p>
<blockquote>
<p>其中有明显的特征，我们能判断出这是一个<code>OB混淆</code>加密：</p>
<ol>
<li>一般由一个大数组或者含有大数组的函数、一个自执行函数、解密函数和加密后的函数四部分组成；</li>
<li>函数名和变量名通常以<code>_0x</code>或者<code>0x</code>开头，后接<code>1~6</code>位数字或字母组合；</li>
<li>自执行函数，进行移位操作，有明显的<code>push、shift</code>关键字；</li>
</ol>
</blockquote>
<p>使用（<code>decode_obfuscator</code>）反混淆工具还原代码后，整体的结构就清晰了很多。</p>
<p><code>setTimeout</code>函数是异步执行的，它不会立即返回值，做一下处理，并让<code>go</code>函数返回<code>cookies</code>。</p>
<blockquote>
<p><code>OB反混淆工具</code>有很多（你们常用哪些，欢迎评论区告诉我，让我<code>涨涨脑子</code>）:</p>
<ul>
<li><code>https://tool.yuanrenxue.cn/decode_obfuscator</code></li>
<li><code>https://de4js.kshift.me/</code>、<code>https://www.dejs.vip/2obfuscator</code></li>
<li>浏览器插件<code>v_tools</code>等</li>
</ul>
</blockquote>
<p>然后，我们迫不及待的运行：</p>
<p><code>node.exe .\final.js</code></p>
<p>回应我们的就是<code>ReferenceError: window is not defined</code>等报错，依次补上：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nb">window</span> <span class="o">=</span> <span class="p">{}</span> <span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="o">=</span><span class="p">{</span> <span class="s1">&#39;userAgent&#39;</span><span class="o">:</span><span class="s1">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36&#39;</span> <span class="p">}</span> <span class="nb">document</span> <span class="o">=</span> <span class="nx">global</span> <span class="nx">location</span> <span class="o">=</span> <span class="p">{}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>再次运行得到：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">(</span>haige-py3.10<span class="o">)</span> &gt; node.exe .<span class="se">\f</span>inal.js
</span></span><span class="line"><span class="cl">1719472445.601<span class="p">|</span>0<span class="p">|</span>j3AZtLtZQTMBXOgbV%2FXe2COV%2BT0%3D
</span></span><span class="line"><span class="cl"><span class="nv">__jsl_clearance_s</span><span class="o">=</span>1719472445.601<span class="p">|</span>0<span class="p">|</span>j3AZtLtZQTMBXOgbV%2FXe2COV%2BT0%3D<span class="p">;</span>Max-age<span class="o">=</span>3600<span class="p">;</span> <span class="nv">path</span> <span class="o">=</span> /<span class="p">;</span> <span class="nv">SameSite</span><span class="o">=</span>None<span class="p">;</span> Secure
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>拿去和抓包得到的cookie进行比较，结果一致。</p>
</blockquote>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00001qPkWG1rHzdx.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00001qPkWG1rHzdx.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00001qPkWG1rHzdx.jpg">
        
    </a></p>
<p>在<code>Pycharm</code>调试时，我们注意到：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00002JyrsN0yGVqr.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00002JyrsN0yGVqr.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00002JyrsN0yGVqr.jpg">
        
    </a></p>
<p>我们注意到：条件成立时<code>_0x1f3544</code>为<code>1719472445.601|0|j3AZtLtZQTMBXOgbV%2FXe2COV%2BT0%3D</code>，正好是<code>__jsl_clearance_s</code>的值。</p>
<hr>
<p>尝试着全局搜索参数里的<code>sha1</code>：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD0000307eR136NyIX.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD0000307eR136NyIX.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD0000307eR136NyIX.jpg">
        
    </a></p>
<p>发现只有参数里带了，所以不难推断：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD000014YDFA1a7xeM.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD000014YDFA1a7xeM.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD000014YDFA1a7xeM.jpg">
        
    </a></p>
<p>再找个在线网址验证下<code>sha1</code>也即这里的<code>hash</code>方法是否为魔改过的：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD000023kcxa2GGrHg.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD000023kcxa2GGrHg.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD000023kcxa2GGrHg.jpg">
        
    </a></p>
<p>至此，我们其实已经概率性拿到一些数据了（？？）。</p>
<p><strong>然鹅~~并不是每次都能得到我们要的数据！</strong></p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00003NWZZM2MT00J.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00003NWZZM2MT00J.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00003NWZZM2MT00J.jpg">
        
    </a></p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00000oz7tL0vfUO2.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00000oz7tL0vfUO2.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00000oz7tL0vfUO2.jpg">
        
    </a></p>
<blockquote>
<p>通过尝试（抓包），发现加密函数共有<code>sha256</code>、<code>sha1</code>、<code>md5</code>三种情况。</p>
</blockquote>
<p>因此，我们完全可以按照之前的步骤分别得到<code>sha256</code>、<code>sha1</code>、<code>md5</code>三种情况下的<code>js</code>代码，并根据第二次请求时返回的<code>js</code>中的<code>ha</code>调用对应的<code>js</code>得到最终的<code>__jsl_clearance_s</code>。</p>
<blockquote>
<p>又因<code>sha256</code>、<code>sha1</code>、<code>md5</code>的实现并未被魔改，因此完全可以使用<code>Javascript</code>（<code>npm install crypto-js</code>）或<code>python</code>进行简化改写。</p>
</blockquote>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00000JW4ge1uBApB.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00000JW4ge1uBApB.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00000JW4ge1uBApB.jpg">
        
    </a></p>
<h2 id="其它调试方式" class="headerLink">
    <a href="#%e5%85%b6%e5%ae%83%e8%b0%83%e8%af%95%e6%96%b9%e5%bc%8f" class="header-mark"></a>其它调试方式</h2><p>其它调试方式还有很多，比较推荐的有：</p>
<h3 id="hook-cookie值使用油猴断一下set-cookie位置" class="headerLink">
    <a href="#hook-cookie%e5%80%bc%e4%bd%bf%e7%94%a8%e6%b2%b9%e7%8c%b4%e6%96%ad%e4%b8%80%e4%b8%8bset-cookie%e4%bd%8d%e7%bd%ae" class="header-mark"></a><code>Hook Cookie</code>值：使用油猴断一下set cookie位置</h3><hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="s1">&#39;use strict&#39;</span><span class="p">;</span> <span class="kd">var</span> <span class="nx">org</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">__lookupSetter__</span><span class="p">(</span><span class="s1">&#39;cookie&#39;</span><span class="p">);</span> <span class="nb">document</span><span class="p">.</span><span class="nx">__defineSetter__</span><span class="p">(</span><span class="s1">&#39;cookie&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">cookie</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;__jsl_clearance_s&#39;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="kr">debugger</span><span class="p">;</span> <span class="p">}</span> <span class="nx">org</span> <span class="o">=</span> <span class="nx">cookie</span><span class="p">;</span> <span class="p">});</span> <span class="nb">document</span><span class="p">.</span><span class="nx">__defineGetter__</span><span class="p">(</span><span class="s1">&#39;cookie&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">org</span><span class="p">;</span> <span class="p">});</span> <span class="p">})();</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00002H04We1otCEl.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00002H04We1otCEl.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00002H04We1otCEl.jpg">
        
    </a></p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00003mTMq71j363h.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00003mTMq71j363h.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00003mTMq71j363h.jpg">
        
    </a></p>
<p>清除 cookie 重新刷新页面，页面被成功断住：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00002NoBjd1DTy9w.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00002NoBjd1DTy9w.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00002NoBjd1DTy9w.jpg">
        
    </a></p>
<p>然后就可以尝试调试了，这里不做过多介绍。</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00003ngElC1lUMqt.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00003ngElC1lUMqt.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00003ngElC1lUMqt.jpg">
        
    </a></p>
<hr>
<h3 id="文件替换利用-fiddler-的自动响应" class="headerLink">
    <a href="#%e6%96%87%e4%bb%b6%e6%9b%bf%e6%8d%a2%e5%88%a9%e7%94%a8-fiddler-%e7%9a%84%e8%87%aa%e5%8a%a8%e5%93%8d%e5%ba%94" class="header-mark"></a>文件替换：利用 Fiddler 的<code>自动响应</code>。</h3><p>将第二次请求获取的<code>js</code>代码保存下来，可以手动复制，也可以向下面这样：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00001M1d5h2Orjxl.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00001M1d5h2Orjxl.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00001M1d5h2Orjxl.jpg">
        
    </a></p>
<p>对响应内容进行<code>js</code>美化（<code>https://spidertools.cn/#/formatJS</code>）</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00003XxAnC3DLpkP.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00003XxAnC3DLpkP.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00003XxAnC3DLpkP.jpg">
        
    </a></p>
<p>清除cookie刷新，也能进行调试了：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00001toKXM3KoqTY.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00001toKXM3KoqTY.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00001toKXM3KoqTY.jpg">
        
    </a></p>
<hr>
<h3 id="文件替换利用-chrome-的文件替换" class="headerLink">
    <a href="#%e6%96%87%e4%bb%b6%e6%9b%bf%e6%8d%a2%e5%88%a9%e7%94%a8-chrome-%e7%9a%84%e6%96%87%e4%bb%b6%e6%9b%bf%e6%8d%a2" class="header-mark"></a>文件替换：利用 Chrome 的文件替换</h3><p>同上，将<code>js</code>代码美化后保存在本地，可能需要一些微调，例如：首尾<code>Script</code>标签前后会多出空格以及脚本最后可能多出<code>/</code>等。补上<code>debuuger;</code>即可进行替换调试：</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD000043rZnD4ScgIS.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD000043rZnD4ScgIS.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD000043rZnD4ScgIS.jpg">
        
    </a></p>
<p>然后将文件内容替换为上面美化处理后的<code>js</code>代码，清除 cookies 并刷新页面即可调试。</p>
<p><a class="lightgallery" href="https://qqq.gtimg.cn/music/photo_new/T053XD00003nF4tq1MvPjz.jpg" title="https://qqq.gtimg.cn/music/photo_new/T053XD00003nF4tq1MvPjz.jpg" data-thumbnail="https://qqq.gtimg.cn/music/photo_new/T053XD00003nF4tq1MvPjz.jpg">
        
    </a></p>
<h2 id="结果验证" class="headerLink">
    <a href="#%e7%bb%93%e6%9e%9c%e9%aa%8c%e8%af%81" class="header-mark"></a>结果验证</h2><p>根据上面的分析，我们拿到了每次请求所需要的<code>cookie</code>，发起请求就是很简单的事了。</p>
<h2 id="小结" class="headerLink">
    <a href="#%e5%b0%8f%e7%bb%93" class="header-mark"></a>小结</h2><p>遵循文章的指导逆向操作整个解密流程，您会发现这一过程相对简单。关键在于熟练掌握三次请求的顺序及其各自的特征，一旦熟悉这些要点，整个过程将无甚难度。</p>
<h2 id="最后" class="headerLink">
    <a href="#%e6%9c%80%e5%90%8e" class="header-mark"></a>最后</h2><p>如果你觉得文章还不错，请大家<code>点赞、关注、分享、在看</code>下，因为这将是我持续输出更多优质文章的最强动力！</p>
<p>欢迎随时与我联系，我期待与大家交流心得，共同学习，共同进步。</p>]]></description>
</item></channel>
</rss>
