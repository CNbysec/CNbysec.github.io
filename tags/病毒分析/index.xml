<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>病毒分析 - 标签 - bysec</title>
        <link>http://localhost:1313/tags/%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/</link>
        <description>病毒分析 - 标签 - bysec</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>bysec@qq.com (bysec)</managingEditor>
            <webMaster>bysec@qq.com (bysec)</webMaster><lastBuildDate>Mon, 02 Sep 2024 19:12:35 &#43;0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/" rel="self" type="application/rss+xml" /><item>
    <title>免杀大佬加入黑灰产还打得过吗</title>
    <link>http://localhost:1313/%E5%85%8D%E6%9D%80%E5%A4%A7%E4%BD%AC%E5%8A%A0%E5%85%A5%E9%BB%91%E7%81%B0%E4%BA%A7%E8%BF%98%E6%89%93%E5%BE%97%E8%BF%87%E5%90%97/</link>
    <pubDate>Mon, 02 Sep 2024 19:12:35 &#43;0800</pubDate><author>
        <name>bysec</name>
    </author><guid>http://localhost:1313/%E5%85%8D%E6%9D%80%E5%A4%A7%E4%BD%AC%E5%8A%A0%E5%85%A5%E9%BB%91%E7%81%B0%E4%BA%A7%E8%BF%98%E6%89%93%E5%BE%97%E8%BF%87%E5%90%97/</guid>
    <description><![CDATA[<blockquote>
<p><em>转载自： <a href="https://forum.butian.net/share/3705" target="_blank" rel="noopener noreferrer">https://forum.butian.net/share/3705</a></em></p>
</blockquote>
<h2 id="一前言" class="headerLink">
    <a href="#%e4%b8%80%e5%89%8d%e8%a8%80" class="header-mark"></a><strong>一、前言</strong></h2><p>大家好，我是来自顺丰安全成文实验室的一名老兵，代号“PX0”，我的任务是追踪威胁情报，深入分析最新黑灰产动向。近期，实验室捕获到一组“银狐”样本，经查，样本来源于伪装成主流会议软件的网站，网站通过提高搜索引擎的收录权重来诱骗用户下载该病毒软件。</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001j6XZo2eGJUT.jpg"     ></p>
<p>此前我也曾分析过“银狐”相关样本，但这回的新版本，免杀技术简直出神入化，主流的安全软件几乎拿它没辙。这让我心里直犯嘀咕：“难道真的有免杀界的高手‘叛变’，跑去给黑灰产当军师了？”不过别担心，接下来，就让我来带大家揭秘这位高手的免杀大招，再教大家几个怎么识别和防住它的高招！</p>
<h2 id="二本文关注点" class="headerLink">
    <a href="#%e4%ba%8c%e6%9c%ac%e6%96%87%e5%85%b3%e6%b3%a8%e7%82%b9" class="header-mark"></a><strong>二、本文关注点</strong></h2><ul>
<li>此银狐分支样本在出现阶段，主流沙箱、EDR 几乎无法检测，本文主要分享新增部分功能</li>
<li>攻击者更加注重杀软和防御能力对抗，引入了 bypass 检测、防病毒模拟器检测、RPC 构建持久化</li>
<li>样本的进化更倾向于多段的内存加载、运行时动态解密，后续可能会出现 rootkit 类型的完全隐蔽后门</li>
<li>根据样本的函数代码通用特征提取检测规则、检测思路分享</li>
</ul>
<h2 id="三正文分析" class="headerLink">
    <a href="#%e4%b8%89%e6%ad%a3%e6%96%87%e5%88%86%e6%9e%90" class="header-mark"></a><strong>三、正文分析</strong></h2><h3 id="1加载过程" class="headerLink">
    <a href="#1%e5%8a%a0%e8%bd%bd%e8%bf%87%e7%a8%8b" class="header-mark"></a>1、加载过程</h3><p>在近期捕获的一批样本中，初始投递的加载器代码几乎一致，攻击者通过最少的 API 调用完成第一阶段的 shellcode 加载 (对通用杀毒软件来说，敏感 API 调用越少，风险相对越小)；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000003zv8s73izDsn.jpg"     ></p>
<p>shellcode 加载完成后，通过内联 jmp rbx 跳转 0x1B0000 执行，这里其实是有一步 mov 的地址转移操作，作用是避免出现 jmp rax 的明显内存调用特征，在 8 月迭代样本也出现了其他的寄存器调用；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002XvDnz1DCXQB.jpg"     ></p>
<h3 id="2解密过程" class="headerLink">
    <a href="#2%e8%a7%a3%e5%af%86%e8%bf%87%e7%a8%8b" class="header-mark"></a>2、解密过程</h3><p>进入 shellcode 内部，实际只有 call 一个有效指令，后续的所有字节都是加密状态；这类似 cobaltstrike 睡眠解密，此类函数适合作为检测特征，区别是此函数需在程序启动时检测；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000000hnRyS0uCeCr.jpg"     ></p>
<p>解密函数即运行时的内部计算，进行了一系列循环右移、减法和取反操作，用于动态解密后续指令；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000013jzvQ2RsQQR.jpg"     ></p>
<p>经对比可以看出，右侧部分指令被解密，被解密出来的部分实际是一个新的异或解密函数；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000006cAkO2Mvrbn.jpg"     ></p>
<p>经过长期跟踪发现，此函数出现在银狐多个版本，为了更清楚地了解功能和检测，我们代码还原这个函数；</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">unsigned char key = 0x91;</span></span></code></pre>
</div>
<p>从内存可以看到整个倒序解密的过程，运行完成后，整块 shellcode 代码被解密完成；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000000u46p82giYwc.jpg"     ></p>
<h3 id="3环境检测绕过" class="headerLink">
    <a href="#3%e7%8e%af%e5%a2%83%e6%a3%80%e6%b5%8b%e7%bb%95%e8%bf%87" class="header-mark"></a>3、环境检测、绕过</h3><p>解密完成后首先进入 sub_99A5 函数，此函数集成一些 bypass 和环境检测能力，是对比以往样本的增强部分；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000003pWHoj2s1TZ7.jpg"     ></p>
<p>首先是 bypass ETW 和 AMSI，实现方式完全相同；都是通过 patch 到对应函数开头一个 0x3C 字节即 ret 指令，完成扫描、日志输出的代码跳过；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000004MlG7n1rfBRM.jpg"     ></p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002QQdZv0MZbGu.jpg"     ></p>
<h3 id="4模拟环境检测" class="headerLink">
    <a href="#4%e6%a8%a1%e6%8b%9f%e7%8e%af%e5%a2%83%e6%a3%80%e6%b5%8b" class="header-mark"></a>4、模拟环境检测</h3><p>微软防病毒为首次扫描的程序提供了特殊的二进制模拟器环境，会附带一些虚拟模块和预定返回值；接下来的几个 check 函数是关联性代码，整体功能是为了检测 Defender 模拟环境；</p>
<p>判断程序名，如果匹配 v5 数组中的:\myapp.exe(模拟进程名称，不是实际运行的进程)则退出进程；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001AgRVU0i003M.jpg"     ></p>
<p>以下是对防病毒模拟器初始化功能的部分逆向代码(详细内容可以参考 2018 年 BlackHat)；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000045jPP00T0gxM.jpg"     ></p>
<p>此函数使用两个未公开函数获取 ntdll 的导出表，并通过自定义 ror 算法计算 apiHash(ntdll 运行时模拟函数)，如果命中任意 3 个 Mpclient 函数 hash 则返回错误码 0xC0000462，再通过上层函数判断退出进程；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000000NnKsd1Nuagg.jpg"     ></p>
<p>分别调用 Windows 内核函数 NtIsProcessInJob 和 NtCompressKey 传入无效句柄，判断是否会返回虚拟模块的预定值，返回预期值则退出进程；<img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD00000458EwJ14iZYr.jpg"     ></p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001wzzUo3RwW5l.jpg"     ></p>
<h3 id="5防御绕过" class="headerLink">
    <a href="#5%e9%98%b2%e5%be%a1%e7%bb%95%e8%bf%87" class="header-mark"></a>5、防御绕过</h3><p>传入无效标识符，尝试动态加载 COM 类对象，判断返回值 CLASS_E_CLASSNOTABAILABLE 是否符合预期；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002d8T873UW9nP.jpg"     ></p>
<p>在堆分配一块较大的内存空间，尝试是否可以成功，通过这种方式验证系统环境；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000008xQcM169FsF.jpg"     ></p>
<p>调用 VirtualAllocExNuma 函数申请物理内存，此函数的运行环境要求存在多个物理 CPU；判断 SxIn.dll 模块是否被当前进程加载(360 沙箱的分析 dll) ；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001VWD6p344YZJ.jpg"     ></p>
<p>获取 SYSTEM_INFO 结构体，该结构体包含系统的硬件信息 ，判断处理器数量；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001Xmx7h1xAVMJ.jpg"     ></p>
<p>获取当前主机名，通过主机名字符创建互斥体对象，判断是否存在；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002sFGOk4fqZJd.jpg"     ></p>
<p>获取令牌信息，判断进程是否能提升权限，尝试 runas 以管理员身份启动，进入死循环(用户未通过会无限弹窗)</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002yQdCe0tnMuA.jpg"     ></p>
<p>判断 c:\\xxxx.ini 文件是否存在，此文件默认由 Gh0st 后门创建；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000003J7T413FP2HI.jpg"     ></p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000003x9ZOl4EeI2D.jpg"     ></p>
<p>通过 GetTickCount64 函数来测量 Sleep 调用前后的时间差，判断环境是否加速，__rdtsc()函数同理；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000003oUe9u09tcJg.jpg"     ></p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001gIDA11hQR8H.jpg"     ></p>
<h3 id="6防御削弱" class="headerLink">
    <a href="#6%e9%98%b2%e5%be%a1%e5%89%8a%e5%bc%b1" class="header-mark"></a>6、防御削弱</h3><p>通过扫描进程列表、服务进程、检索窗口类综合判断 360 杀软是否存在，综合来看攻击者更倾向于个人电脑；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000004LvbrF4FG5Uk.jpg"     ></p>
<p>通过 API 发送线程消息、控制信号尝试关闭 360 杀软，若失败跳转到后续代码下载 BYOVD 驱动模块结束杀软；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001tEE8q17znu6.jpg"     ></p>
<p>检测 WindowsDefender 防病毒相关进程服务是否存在;</p>
<p>执行 powershell 命令添加 C:\ProgramData 和 C:\User\Public 目录到扫描排除项(后门存放路径)，</p>
<p>在 8 月的版本中会新增 Program Files (x86)目录；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000037VnfP37DKy5.jpg"     ></p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000021fqFH2QmPQt.jpg"     ></p>
<p>攻击者整体使用凯撒密码对字符串解密，此算法比较简单，使用固定 key 进行逐字节移位；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002S7LaS1mH84r.jpg"     ></p>
<p>此处解密完成后得到存储桶地址；根据地址表下载一组后门文件，下载完成后根据偏移标识填入随机值，使得下载文件没有固定 hash(在以往的样本中，银狐会通过多种方式实现此功能)；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002JOsnv13etSq.jpg"     ></p>
<p>下载后的文件会随机存储在 C:\Users\Public 目录，并在下层创建随机字符目录；在某些版本，会另外下载一组后门隐藏在 C:\ProgramData 目录中；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001E14BM2ffTCo.jpg"     ></p>
<p>下载 BYOVD 驱动模块，当进程权限不足时跳过此部分；payload 下载完成后以内存 dll 形式解压，并获取导出函数指针，再使用 RPC 管道构建计划任务配置并调用 NdrClientCall3 函数创建，此任务用于维持 BYOVD 模块；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000000l1w0L4WAsz3.jpg"     ></p>
<p>此驱动漏洞属于 EDR Killer 类型，可以通过传入特定的控制码 0x22E044 和进程 pid 在内核强制结束对应的进程；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001KRY3s1EwGdg.jpg"     ></p>
<p>驱动内部会根据传入控制码触发调用，通过 IOCTL(IO control codes)命令执行结束进程(支持 Win11)；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001fOXbs2oLlIW.jpg"     ></p>
<h3 id="7后门远控" class="headerLink">
    <a href="#7%e5%90%8e%e9%97%a8%e8%bf%9c%e6%8e%a7" class="header-mark"></a>7、后门远控</h3><p>后门程序使用一组白加黑配合两个加密的 payload 文件， 这是银狐的惯用手法；dll 使用 VMProtect 保护，运行后使用 RC4 算法对 payload 进行解密，完成后加载 log.src 文件，再次解密得到内存 dll(VMProtect 保护)；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001bfd6f1WXc8W.jpg"     ></p>
<p>获取内存 dll 的导出函数 CLRCreateInstance，此函数内部会为后门程序创建持久化任务、禁用 UAC 等功能；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD0000027YBYL0s6ngj.jpg"     ></p>
<p>最后会加载 vcxproj 后缀文件解密，完成后得到 Gh0st 变种后门，上线前会请求 ip 地址表，查看是否更新；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000001cxZYs14R9FP.jpg"     ></p>
<p>Gh0st 包含很多功能模块，具体功能此处不详细介绍了，后门还包含一些固定的 cmd 命令，适合作为检测补充；</p>
<p><img class="tw-inline" loading="lazy" src="https://qqq.gtimg.cn/music/photo_new/T053XD000002jF5wp0CE4gs.jpg"     ></p>
<h2 id="四检测思路分享" class="headerLink">
    <a href="#%e5%9b%9b%e6%a3%80%e6%b5%8b%e6%80%9d%e8%b7%af%e5%88%86%e4%ba%ab" class="header-mark"></a><strong>四、检测思路分享</strong></h2><ol>
<li>
<p><strong>创建 yara 规则</strong></p>
<p>可以通过程序中的加解密函数代码创建 yara 规则，代码结构最好连续且固定；</p>
</li>
<li>
<p><strong>TTPs 检测特征</strong></p>
<p>通过攻击者样本或实际应急过程中发现的 TTPs 作为检测特征；</p>
</li>
<li>
<p><strong>IOC 检测</strong></p>
<p>在威胁情报痛苦金字塔的下三层中，域名相对更有效，也可根据情况选择 hash 检测；</p>
</li>
</ol>
<blockquote>
<p>B736A809E7A0F1603C97D43BBC7D2EA8A9CD080B A672825339ADBB5EEEF8176D161266D4E4A4A625 E49938CB6C4CE0D73DB2B4A32018B1FF71A2D7F0 9CAA4EC93CE1CD40BD5975645A110A4325310A3B D7F41D457C8358AF840B06914D1BC969EF7939D0 48B2090FDCEA7D7C0EB1544EBCDAF911796A7F67</p>
<p>omss.oss-cn-hangzhou.aliyuncs.com</p>
<p>upitem.oss-cn-hangzhou.aliyuncs.com</p>
<p>1o2.oss-cn-beijing.aliyuncs.com</p>
<p>25o.oss-cn-beijing.aliyuncs.com</p>
<p>98o.oss-cn-beijing.aliyuncs.com</p>
<p>vauwjw.net</p>
<p>cinskw.net</p>
<p>hucgiu.net</p>
</blockquote>
<p>（针对样本的具体 yara、TTPs 规则等，后续将会同步到顺丰安全应急响应中心预推出的<strong>成文实验室知识星球</strong>，敬请期待！）</p>]]></description>
</item></channel>
</rss>
